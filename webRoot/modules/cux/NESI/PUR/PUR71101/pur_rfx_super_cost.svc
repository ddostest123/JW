<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: LIBIN  
    $Date: 2014-10-27 上午11:25:49  
    $Revision: 1.0  
    $Purpose: 
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script import="pur_rfx_super_cost.js"><![CDATA[
            importClass(java.io.File);
            importClass(java.io.FileOutputStream);
            importPackage(java.lang);
            
            importClass(javax.servlet.http.HttpServlet);
            importClass(javax.servlet.http.HttpServletRequest);
            importClass(Packages.aurora.service.ServiceInstance);
            
            importClass(org.apache.poi.hssf.usermodel.HSSFCell);
            importClass(org.apache.poi.hssf.usermodel.HSSFCellStyle);
            importClass(org.apache.poi.hssf.usermodel.HSSFDataFormat);
            importClass(org.apache.poi.hssf.usermodel.HSSFRow);
            importClass(org.apache.poi.hssf.usermodel.HSSFSheet);
            importClass(org.apache.poi.hssf.usermodel.HSSFWorkbook);
            importClass(org.apache.poi.hssf.util.Region);
            importClass(org.apache.poi.hssf.usermodel.HSSFFont);
            importClass(org.apache.poi.ss.util.RegionUtil);
            importClass(org.apache.poi.hssf.util.HSSFColor);
            
            var parameter = $ctx.parameter;
            var styleArray = [];
            var sheetdataNum1 = 0;
            
            //设置路径
            
            function createFilePath() {
                var context = $ctx.getData();
                var serviceInstance = ServiceInstance.getInstance(context);
                var request = serviceInstance.getRequest();
                var file = request.getSession().getServletContext().getRealPath(File.separator);
                //文档保存路径
                parameter.filePath = 'ueditor-jsp/jsp/upload/file/PUR7110/superCost.xls';
                parameter.fileRoute = file + parameter.filePath;
                parameter.fileLoad = file + 'ueditor-jsp/jsp/upload/file/PUR7110';
                var dirFile = new File(parameter.fileLoad);
                if (!dirFile.exists()) {
                    dirFile.mkdir();
                }
            }
            
            function ceateStyle(wb, fontSize, bold, textAlign, border, fontColor) {
                //创建样式
                var style = wb.createCellStyle(); // 样式对象
                style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER); // 垂直
                style.setAlignment(textAlign);
                style.setWrapText(true);
                if (border) {
                    style.setBorderTop(1);
                    style.setBorderBottom(1);
                    style.setBorderRight(1);
                    style.setBorderLeft(1);
                }
                //设置字体
                var font = wb.createFont();
                //设置字体样式
                font.setFontHeightInPoints(fontSize);
                font.setFontName("宋体");
                if (bold) {
                    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                }
                font.setColor(fontColor);
                font.setItalic(false);
                style.setFont(font);
                styleArray.push(style);
                return style;
            }
            
            function createExcel() {
                //设置路径
                createFilePath();
                //创建excel文件，并填充内容
                var wb = new HSSFWorkbook();
                var sheet1 = wb.createSheet('比价表');
                //sheet1.setDisplayGridlines(false);
                //创建样式1
                var styleHead = ceateStyle(wb, 22, true, HSSFCellStyle.ALIGN_CENTER, true, HSSFColor.BLACK.index);
                var styleTitle = ceateStyle(wb, 10, true, HSSFCellStyle.ALIGN_CENTER, true, HSSFColor.BLACK.index);
                var styleValue = ceateStyle(wb, 10, false, HSSFCellStyle.ALIGN_CENTER, true, HSSFColor.BLACK.index);
                var styleTitleL = ceateStyle(wb, 10, false, HSSFCellStyle.ALIGN_LEFT, true, HSSFColor.BLACK.index);
                var styleFont1 = ceateStyle(wb, 16, false, HSSFCellStyle.ALIGN_CENTER, true, HSSFColor.BLACK.index);
                var styleNullBorder = ceateStyle(wb, 11, false, HSSFCellStyle.ALIGN_LEFT, false, HSSFColor.BLACK.index);
                var styleNullBorderRed = ceateStyle(wb, 11, false, HSSFCellStyle.ALIGN_LEFT, false, HSSFColor.RED.index);
                var styleFont2 = ceateStyle(wb, 12, true, HSSFCellStyle.ALIGN_CENTER, true, HSSFColor.BLACK.index);
                var styleValue = ceateStyle(wb, 11, true, HSSFCellStyle.ALIGN_LEFT, true, HSSFColor.BLACK.index);
                var styleValue2 = ceateStyle(wb, 12, false, HSSFCellStyle.ALIGN_LEFT, true, HSSFColor.BLACK.index);
                var styleValue3 = ceateStyle(wb, 10, false, HSSFCellStyle.ALIGN_RIGHT, true, HSSFColor.BLACK.index);
                sheet1.setDefaultRowHeight(400);
                /*
                 **渲染sheet页1
                 **sheet页为'比价表'
                 **创建新的sheet需要初始化sheetdataNum1=0
                 */
                sheet1 = createContentArray(excelContent1, sheet1, wb);
                //表格数据
                sheet1 = createContentArray(excelData, sheet1, wb);
                //尾部数据
                sheet1 = createContentArray(excelFoot, sheet1, wb, true);
                //保存文件
                var fileOut = new FileOutputStream(parameter.fileRoute);
                wb.write(fileOut);
            }
            
            function createContentArray(array, sheet1, wb, lineSycFlag) {
                var rowIndex = -1,
                    row, cellIndex = 0;
                for (var i = 0;i < array.length;i++) {
                    //确定行数
                    if (lineSycFlag) {
                        array[i].row += sheetdataNum1;
                        array[i].place[0] += sheetdataNum1;
                        array[i].place[1] += sheetdataNum1;
                    }
                    //创建行
                    if (array[i].row != rowIndex) {
                        row = selectRows(array[i].row, sheet1, lineSycFlag);
                        rowIndex = array[i].row;
                    }
                    cellIndex = array[i].place[1];
                    sheet1.addMergedRegion(new Region(array[i].place[0], array[i].place[1], array[i].place[2], array[i].place[3]));
                    var cell1 = row.createCell(cellIndex);
                    cell1.setCellStyle(styleArray[array[i].style]);
                    createBoderComplete(sheet1, array[i], wb);
                    cell1.setCellValue(array[i].content);
                    if ( !! array[i].rowHeight) {
                        row.setHeight(array[i].rowHeight);
                    }
                    if ( !! array[i].columnWidth) {
                        sheet1.setColumnWidth(cellIndex, array[i].columnWidth * 256);
                    }
                }
                return sheet1;
            }
            
            function selectRows(index, sheet) {
                var row = sheet.getRow(index);
                if (row == null) {
                    row = sheet.createRow(index);
                }
                return row;
            }
            //单元格边框问题
            
            function createBoderComplete(sheet, data, wb) {
                for (var i = data.place[0];i <= data.place[2];i++) {
                    var row = sheet.getRow(i);
                    if (row == null) {
                        row = sheet.createRow(i);
                    }
                    for (var j = data.place[1];j <= data.place[3];j++) {
                        var cell = row.getCell(j);
                        if (cell == null) {
                            cell = row.createCell(j);
                            cell.setCellValue("");
                        }
                        cell.setCellStyle(styleArray[data.style]);
                    }
                }
            }
            
            //excel主函数
            createExcel();
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter"/>
</a:service>
