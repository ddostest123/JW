<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lianghuihao 
    $Date: 2018-5  
    $Revision: 1.0  
    $Purpose: 固安捷下正式订单
-->
<a:service xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <p:echo/>
        <a:model-query fetchAll="true" model="cux.KINWONG.api.API1040.api1040_gaj_req_order_query" rootPath="req_infos"/>
        <s:server-script import="request.js"><![CDATA[
            var bm = new ModelService('cux.KINWONG.api.PUBLIC.api_get_request_all');
            var req_infos = $ctx.model.getChild('req_infos').getChildren();
            var price_skus = [];
            for (i = 0;i < req_infos.length;i++) {
                var price_sku = {
                    sku: req_infos[i].sku,
                    num: req_infos[i].quantity,
                    price: req_infos[i].currency_unit_price
                }
                price_skus.push(price_sku);
            }
            //接收传参
            var province = req_infos[0].province_id; //req_infos[0].province_id; //2;
            var city = req_infos[0].city_id; //req_infos[0].city_id; // $ctx.parameter.city; // 2830;
            var county = req_infos[0].county_id; //req_infos[0].county_id; // $ctx.parameter.county; //51800;
            var town = 0; //req_infos[0].town_id; // $ctx.parameter.town; //0
            //var price;
            //校验价格是否变动
            //获取价格地址和参数拼接
            var price_sku = [];
            var skuNums = [];
            var order_sku = []; //'[{ "skuId": 415422,"num": 1,"bNeedAnnex": true}]';
            var orderPriceSnap = []; //[{"skuId": 415422,"price": 39.90}]
            var thirdOrder = req_infos[0].req_number; //$ctx.parameter.req_header_id; //后台直接生成的平台订单号
            $ctx.parameter.req_header_id = req_infos[0].req_header_id;
            
            
            for (var k = 0;k < price_skus.length;k++) {
                price_sku.push(price_skus[k].sku);
                var param = {
                    skuId: price_skus[k].sku,
                    num: price_skus[k].num
                };
                skuNums.push(param);
                var order_skus = {
                    skuId: price_skus[k].sku,
                    num: price_skus[k].num,
                    price: price_skus[k].price
                };
                order_sku.push(order_skus);
                var PriceSnap = {
                    "skuId": price_skus[k].sku,
                    "price": price_skus[k].price
                };
                orderPriceSnap.push(PriceSnap);
            }
            $ctx.parameter.config_code = 'XY_SELL_PRICE';
            var res = bm.queryAsMap();
            var arr = res.getChildren()[0];
            var price_url = arr.URL;
            var price_para = {
                "token": arr.ACCESS_TOKEN,
                "sku": price_sku
            }
            var message;
            var new_price;
            
            
            //库存
            $ctx.parameter.config_code = 'XY_STOCK_BY_SKU';
            var res1 = bm.queryAsMap();
            var arr1 = res1.getChildren()[0];
            var stock_url = arr1.URL;
            var stock_para = {
                "token": arr.ACCESS_TOKEN,
                "skuNums": skuNums,
                "area": province + '_' + city + '_' + county
            }
            var state;
            var desc;
            var name = req_infos[0].contact_name;
            var address = req_infos[0].address_detail; //req_infos[0].address_detail; //详细地址
            var mobile = req_infos[0].mobile_phone; //req_infos[0].mobile_phone;
            var email = req_infos[0].email; //req_infos[0].email;
            var invoiceState = 2; //1为随货开票，0为订单预借，2为集中开票 目前只支持集中开票，选集中开票不需要传以下发票相关信息
            var invoiceType = 2; //1普通发票2增值税发票
            var selectedInvoiceTitle = 5; //发票类型：4个人，5单位
            var companyName = req_infos[0].company_full_name; //  发票抬头  (如果 selectedInvoiceTitle=5 则此字段必须)
            var companyNamestr = companyName.replace('(', '（');
            var companyName_str = companyNamestr.replace(')', '）');
            var invoiceContent = 1; //1; //1:明细，3：电脑配件，19:耗材，22：办公用品备注:若增值发票则只能选 1 明细
            var paymentType = 101; // （成功 金禾：5） 101 账期金彩支付方式 (1：货到付款，2：邮局付款，4：余额支付，5：公司转账（公对公转账），7：网银钱包，101：金采支付)
            var isUseBalance = 0; //101 时为0 （成功 金禾：1）
            var submitState = 1; //1为正式订单模式
            var zip = '200000'; //收货邮编
            var phone = req_infos[0].mobile_phone; //$ctx.parameter.phone; //收货电话
            var regCode = 0; //$ctx.parameter.regCode;
            var reservingDate = -1; // -1
            var installDate = 0; // 0
            var needInstall = false; // false
            var promiseTimeRange = ''; //''
            var promiseTimeRangeCode = 0 //0
            var doOrderPriceMode = 1; //1
            var remark = req_infos[0].header_comments;
            var timestamp = req_infos[0].timestamp;
            var purchase_id = req_infos[0].purchase_id;
            var promiseDate = 1; //1：工作日送货2：任意时间送货不传默认工作日送货
            $ctx.parameter.api_code = 'GAJ_SUBMIT_ORDER';
            var res2 = bm.queryAsMap();
            
            var arr2 = res2.getChildren()[0];
            var order_url = arr2.API_URL;
            //为了参数清晰，挺low的写法
            var order_para = {
                appkey: "45b5f8509dd4d67c7b43f29f279191a9",
                serialnumber: "sjd79and83cgem",
                timestamp: timestamp,
                orderCompany: companyName_str,
                token: arr2.ACCESS_TOKEN,
                thirdOrder: thirdOrder,
                sku: order_sku,
                name: name,
                province: province,
                city: city,
                county: county,
                town: town,
                address: address,
                zip: zip,
                phone: phone,
                remark: remark,
                mobile: mobile,
                email: email,
                purchaseName: companyName_str,
                purchaseId: purchase_id,
                purchaseAccount: name,
                purchaseMobile: phone,
                invoiceState: invoiceState,
                invoiceType: invoiceType,
                invoiceName: name,
                invoicePhone: mobile,
                selectedInvoiceTitle: selectedInvoiceTitle,
                companyName: companyName_str,
                paymentType: paymentType,
                submitState: submitState,
                promiseDate: promiseDate,
                doOrderPriceMode: doOrderPriceMode
            };
            //println(JSON.stringify(order_para));
            var order_result;
            $ctx.parameter.order_response = [];
            
            request({
                url: order_url,
                para: JSON.stringify(order_para),
                success: function(args) {
                    var rec = {
                        'history_id': arr2.HISTORY_ID,
                        'url': arr2.API_URL,
                        'config_id': arr2.CONFIG_ID,
                        'api_id': arr2.API_ID,
                        'request_data': JSON.stringify(order_para),
                        'response_data': args
                    };
                    $bm("api.PUBLIC.api_exec_process").insert(rec);
                    var data = JSON.parse(args);
                    if (data['success'] == true) {
                        run_fun(data, arr2);
                    }
                },
                failure: function(args) {
                    raise_app_error(args.error.message);
                }
            });
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/"/>
</a:service>
