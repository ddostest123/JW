<?xml version="1.0" encoding="UTF-8"?>
<a:service xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="cux.KINWONG.api.API1020.api1020_oms_message_handle" rootPath="message"/>
        <s:server-script import="request2.js"><![CDATA[
            // 2代表商品协议价格、史泰博价格变更
            // 3代表商品库存变更
            // 4代表商品上下架变更
            // 5代表该订单已妥投
            // 6代表添加、删除、更新商品池内商品
            // 13取消订单通知消息
            var handle_message = $ctx.model.getChild('message').getChildren();
            var bm = new ModelService('cux.KINWONG.api.PUBLIC.api_get_request_all');
            var status;
            var message;
            //订单查询接口，修改父子订单映射关系
            
            function oms_sub_order_query(porder) {
                $ctx.parameter.api_code = 'OMS_QUERY_SUB_ORDER';
                var record = bm.queryAsMap();
                var arr = record.getChildren()[0];
                var para_str = '?token=' + arr.ACCESS_TOKEN + '&supplierOrderId=' + porder;
                if (arr.API_URL) {
                    request({
                        url: arr.API_URL,
                        para: para_str,
                        success: function(args) {
                            var rec = {
                                'history_id': arr.HISTORY_ID,
                                'url': arr.API_URL,
                                'config_id': arr.CONFIG_ID,
                                'api_id': arr.API_ID,
                                'request_data': JSON.stringify(para_str),
                                'response_data': args
                            };
                            $bm("api.PUBLIC.api_exec_process").insert(rec);
                            var data = JSON.parse(args);
                            if (data['success'] == true || data['success'] == 'true') {
                                run_fun(data, arr);
                            }
                        },
                        failure: function(args) {
                            raise_app_error(args.error.message);
                        }
                    });
                }
            }
            //详情接口，修改详情数据
            
            function oms_detail(sku) {
                $ctx.parameter.api_code = 'OMS_PRODUCT_DETAIL_MS';
                var record = bm.queryAsMap();
                var arr = record.getChildren()[0];
                var para_str = arr.REQUEST_DATA + sku;
                if (arr.API_URL) {
                    request({
                        url: arr.API_URL,
                        para: para_str,
                        success: function(args) {
                            var rec = {
                                'history_id': arr.HISTORY_ID,
                                'url': arr.API_URL,
                                'config_id': arr.CONFIG_ID,
                                'api_id': arr.API_ID,
                                'request_data': JSON.stringify(para_str),
                                'response_data': args
                            };
                            $bm("api.PUBLIC.api_exec_process").insert(rec);
                            var data = JSON.parse(args);
                            if (data['success'] == true || data['success'] == 'true') {
                                run_fun(data, arr);
                            }
                        },
                        failure: function(args) {
                            raise_app_error(args.error.message);
                        }
                    });
                }
            }
            //价格接口，修改价格数据
            
            function oms_price(sku) {
                $ctx.parameter.api_code = 'OMS_SELL_PRICE_MS';
                var record = bm.queryAsMap();
                var arr = record.getChildren()[0];
                var para_str = arr.REQUEST_DATA + sku;
                if (arr.API_URL) {
                    request({
                        url: arr.API_URL,
                        para: para_str,
                        success: function(args) {
                            var rec = {
                                'history_id': arr.HISTORY_ID,
                                'url': arr.API_URL,
                                'config_id': arr.CONFIG_ID,
                                'api_id': arr.API_ID,
                                'request_data': JSON.stringify(para_str),
                                'response_data': args
                            };
                            $bm("api.PUBLIC.api_exec_process").insert(rec);
                            var data = JSON.parse(args);
                            if (data['success'] == true || data['success'] == 'true') {
                                run_fun(data, arr);
                            }
                        },
                        failure: function(args) {
                            raise_app_error(args.error.message);
                        }
                    });
                }
            }
            
            //将已处理的消息修改状态，归档，del
            
            function message_last_status(message, id) {
                if (message) {
                    //特殊的错误，token已过期在处理
                    if (message == '2007') {
                        var start_para = {
                            id: id,
                            handle_status: 'NEW',
                            error_msg: ''
                        }
                        $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").update(start_para);
                    } else if (message == 'aurora.plugin.script.engine.InterruptException: 该商品不存在') {
                        log('将消息状态改为已处理！')
                        var last_para = {
                            id: id,
                            handle_status: 'HANDLED',
                            error_msg: ''
                        };
                        $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").update(last_para);
                    } else {
                        log('将消息状态改为错误！')
                        var last_para = {
                            id: id,
                            handle_status: 'ERROR',
                            error_msg: message
                        };
                        $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").update(last_para);
                    }
            
                } else {
                    log('将消息状态改为已处理！')
                    var last_para = {
                        id: id,
                        handle_status: 'HANDLED',
                        error_msg: ''
                    };
                    $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").update(last_para);
                }
            }
            
            if (handle_message.length) {
                for (i = 0;i < handle_message.length;i++) {
                    var record = handle_message[i];
                    var start_para = {
                        id: record.id,
                        handle_status: 'HANDLEING',
                        error_msg: ''
                    }
                    $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").update(start_para);
                    if (record.type == 1) {
                        message = '';
                        //订单拆分
                        try {
                            var result2 = JSON.parse(record.result);
                            log(result2);
                            oms_sub_order_query(result2.pOrderId);
                        } catch (e) {
                            status = 'failure';
                            message = e.message;
                            result = false;
                        } finally {
                            message_last_status(message, record.id);
                        }
                    } else if (record.type == 5) {
                        //妥投信息在获取日期后处理
                        var result5 = JSON.parse(record.result);
                        message = '';
                        var page = {
                            orderid: result5.orderId,
                            state: result5.state
                        };
                        //处理池内商品数据
                        $bm("cux.KINWONG.api.API1020.api1020_oms_order_check").update(page);
                        message_last_status(message, record.id);
                    } else if (record.type == 2) {
                        message = '';
                        //价格变更
                        try {
                            var result2 = JSON.parse(record.result);
                            oms_price(result2.sku);
                        } catch (e) {
                            status = 'failure';
                            message = e.message;
                            result = false;
                        } finally {
                            message_last_status(message, record.id);
                        }
                    } else if (record.type == 4) {
                        message = '';
                        //商品上下架变更消息;
                        try {
                            var result4 = JSON.parse(record.result);
                            $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle").delete(result4);
                        } catch (e) {
                            status = 'failure';
                            message = e.message;
                            result = false;
                        } finally {
                            message_last_status(message, record.id);
                        }
                    } else if (record.type == 6) {
                        message = '';
                        // 代表添加、删除商品池内商品;
                        var result6 = JSON.parse(record.result);
                        try {
                            if (result6.state == 1) {
                                //先将商品同步
                                oms_detail(result6.sku);
                                oms_price(result6.sku);
                                var page = {
                                    sku: result6.sku,
                                    type: 1
                                }
                                //处理池内商品数据
                                $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle_page").update(page);
                            } else if (result6.state == 2) {
                                var page = {
                                    sku: result6.sku,
                                    type: 2
                                }
                                $bm("cux.KINWONG.api.API1020.api1020_oms_message_handle_page").update(page);
                            }
                        } catch (e) {
                            status = 'failure';
                            message = e.message;
                            result = false;
                        } finally {
                            message_last_status(message, record.id);
                        }
                    }
                }
            } else {
                log('暂无待处理消息！')
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output/>
</a:service>
