<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query model="cux.KINWONG.pur.pur_quota.pur_quota_query" rootPath="column_name"/>
        <a:model-query model="cux.KINWONG.pur.pur_quota.pur_quota_vendor_all_query" rootPath="vendor_all"/>
        <a:model-query model="cux.KINWONG.pur.pur_quota.pur_quota_init_date" rootPath="init_date_all"/>
        <s:server-script import="lib.js"><![CDATA[
            var array = $ctx.get('/model/column_name').getChildren();
            var vendor_array = $ctx.get('/model/vendor_all').getChildren();
            var columns = CompositeUtil.findChild(config, 'grid', 'id', 'pur_quota_temp_result_grid').getChild('columns');
            for (var i = 0;i < array.length;i++) {
                if (i == array.length - 1 || array[i].property_name != array[i + 1].property_name) {
                    var first_node = {
                        'prompt': array[i].property_name,
                        'align': 'center',
                        'resizable': "center",
                        'autoadjust': "true",
                        'name': array[i].colunmn_name
                    };
                    var column = addAllProperty(new CompositeMap('column'), first_node);
                    columns.addChild(column.getData());
                }
            }
            var parent_node = {
                'prompt': '价格水平',
                'align': 'center',
                'resizable': "center",
                'autoadjust': "true",
            };
            var parent_column = addAllProperty(new CompositeMap('column'), parent_node);
            for (var i = 0;i < vendor_array.length;i++) {
                var first_node = {
                    'prompt': vendor_array[i].vendor_name,
                    'align': 'center',
                    'resizable': "center",
                    'autoadjust': "true",
                    'name': vendor_array[i].vendor_id + '_score'
                };
                var column = addAllProperty(new CompositeMap('column'), first_node);
                parent_column.addChild(column.getData());
            }
            columns.addChild(parent_column.getData());
            
            var parent_node = {
                'prompt': '金额',
                'align': 'center',
                'resizable': "center",
                'autoadjust': "true",
            };
            var parent_column = addAllProperty(new CompositeMap('a','http://www.aurora-framework.org/application','column'), parent_node);
            for (var i = 0;i < vendor_array.length;i++) {
                var first_node = {
                    'prompt': vendor_array[i].vendor_name,
                    'align': 'center',
                    'resizable': "center",
                    'autoadjust': "true",
                    'name': vendor_array[i].vendor_id + '_price',
                    'footerrenderer' : 'price_all_render'
                };
                var column = addAllProperty(new CompositeMap('a','http://www.aurora-framework.org/application','column'), first_node);
                parent_column.addChild(column.getData());
            }
            columns.addChild(parent_column.getData());
            
            var parent_node = {
                'prompt': '订单配比',
                'align': 'center',
                'resizable': "center",
                'autoadjust': "true",
            };
            var parent_column = addAllProperty(new CompositeMap('column'), parent_node);
            for (var i = 0;i < vendor_array.length;i++) {
                var first_node = {
                    'prompt': vendor_array[i].vendor_name,
                    'align': 'center',
                    'resizable': "center",
                    'autoadjust': "true",
                    'name': vendor_array[i].vendor_id + '_quota'
                };
                var column = addAllProperty(new CompositeMap('column'), first_node);
                parent_column.addChild(column.getData());
            }
            columns.addChild(parent_column.getData());
            
            var parent_node = {
                'prompt': '调整后订单配比',
                'align': 'center',
                'resizable': "center",
                'autoadjust': "true",
            };
            var parent_column = addAllProperty(new CompositeMap('column'), parent_node);
            for (var i = 0;i < vendor_array.length;i++) {
                
                
                var first_node = {
                    'prompt': vendor_array[i].vendor_name,
                    'align': 'center',
                    'resizable': "center",
                    'autoadjust': "true",
                    'name': vendor_array[i].vendor_id + '_actualquota',
                    'editor': 'pur_quota_temp_nmb',
                    'renderer': 'foot_editor_func'
                };
                var column = addAllProperty(new CompositeMap('column'), first_node);
                parent_column.addChild(column.getData());
            }
            columns.addChild(parent_column.getData());
            
            log(config.toXML());
        ]]></s:server-script>
    </a:init-procedure>
    <a:view>
        <a:link id="pur_quota_submit_link" url="${/request/@context_path}/modules/cux/KINWONG/pur/pur_quota/pur_quota_submit_for_approved.svc"/>
        <a:link id="save_quota_link" model="cux.KINWONG.pur.pur_quota.pur_quota_temp_query" modelaction="batch_update"/>
        <a:link id="pur5130_agreement_delay_edit_release_link" model="cux.KINWONG.pur.pur_quota.pur_quota_apply_headers" modelaction="execute"/>
        <script><![CDATA[
           function foot_editor_func(value, record, name){
               var file_name =  name.split('_')[1];
               if((record.get('status_desc') == '已提交' ||
                   record.get('status_desc') == '已审批'   ) && 
                   file_name == 'actualquota'){
                  record.getField(name).setReadOnly(true);
               }
                return value;
           }
        
            function price_all_render(datas, name) {
                if (name == 'price') {
                    var all_price = 0;
                    for (var i = 0;i < datas.length;i++) {
                        all_price += delcommafy(datas[i].get('price'));
                    }
                    return toThousands(all_price);
                    // return all_price;
                } else if (name == 'category_code_3') {
                    return '总金额';
                } else {
                    var all_price = 0;
                    var cur_price = 0;
                    for (var i = 0;i < datas.length;i++) {
                        all_price += delcommafy(datas[i].get('price'));
                        if (datas[i].get(name)) {
                            cur_price += delcommafy(datas[i].get(name));
                        }
                    }
                    return cur_price / all_price;
            
                }
                return '';
            }
 
            
             function save_all() {
                var ds = $('pur_quota_temp_result_ds');
                var datas = ds.getJsonData();
                var send_datas = [];
                console.log(datas);
                for (var i = 0;i < datas.length;i++) {
                    debugger;
                    var data = {};
                    for (var j in datas[i]) {
                        var temp = j.split('_');
                        if (temp[1] == 'actualquota' && temp[0]) {
                            if (!data[temp[0]]) {
                                data[temp[0]] = {};                                
                                data[temp[0]]['actualquota'] = datas[i][j];
                                data[temp[0]]['status'] = datas[i]['status'];
                                data[temp[0]]['status_desc'] = datas[i]['status_desc'];
                                data[temp[0]]['business_unit_id'] = datas[i]['business_unit_id'];
                                data[temp[0]]['business_unit_name'] = datas[i]['business_unit_name'];
                                data[temp[0]]['rating_code'] = datas[i]['rating_code'];
                                data[temp[0]]['category_code_3'] = datas[i]['category_code_3'];
                                data[temp[0]]['create_date_num'] = datas[i]['create_date_num'];
                                data[temp[0]]['n_Attribute1'] = datas[i]['n_Attribute1'];
                            
                            } else {
                                data[temp[0]]['actualquota'] = datas[i][j];
                            }
                        } else if (temp[1] == 'quotaid' && temp[0]) {
                            if (!data[temp[0]]) {
                                data[temp[0]] = {};
                                data[temp[0]]['quotaid'] = datas[i][j];
                                data[temp[0]]['status'] = datas[i]['status'];
                                data[temp[0]]['status_desc'] = datas[i]['status_desc'];
                                data[temp[0]]['business_unit_id'] = datas[i]['business_unit_id'];
                                data[temp[0]]['business_unit_name'] = datas[i]['business_unit_name'];
                                data[temp[0]]['rating_code'] = datas[i]['rating_code'];
                                data[temp[0]]['category_code_3'] = datas[i]['category_code_3'];
                                data[temp[0]]['create_date_num'] = datas[i]['create_date_num'];
                                data[temp[0]]['n_Attribute1'] = datas[i]['n_Attribute1'];
                            } else {
                                data[temp[0]]['quotaid'] = datas[i][j];
                            }
                        }
                    }
                    console.log(data);
                    for (rec in data) {
                        var temp_data = {};
                        temp_data['vendor_id'] = rec;
                        temp_data['actualquota'] = data[rec]['actualquota'];
                        temp_data['quotaid'] = data[rec]['quotaid'];
                        if (temp_data['quotaid'] == '' || temp_data['quotaid'] == null)
                        {
                          temp_data['_status'] = 'insert';  
                          temp_data['status'] = data[rec]['status']; 
                          temp_data['status_desc'] = data[rec]['status_desc']; 
                          temp_data['business_unit_id'] = data[rec]['business_unit_id']; 
                          temp_data['business_unit_name'] = data[rec]['business_unit_name']; 
                          temp_data['rating_code'] = data[rec]['rating_code']; 
                          temp_data['category_code_3'] = data[rec]['category_code_3'];  
                          temp_data['create_date_num'] = data[rec]['create_date_num'];   
                          temp_data['n_Attribute1'] = data[rec]['n_Attribute1']; 
                        }else
                        {
                            temp_data['_status'] = 'update';
                        }
                        
                      //  temp_data['_status'] = 'update';
                        send_datas.push(temp_data);
                    }
                }
                console.log(send_datas);
                Aurora.Masker.mask(Ext.getBody(), '${l:LOADING}');
                Aurora.request({
                    url: $('save_quota_link').getUrl(),
                    para: send_datas,
                    success: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                        Aurora.showMessage('${l:PROMPT}', '保存成功', function() {
                            $('pur_quota_temp_result_ds').query();
                        });
                    },
                    error: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    failure: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            function pur5130_agreement_delay_edit_release() {
                debugger;
                //   var ds = $('pur5130_agreement_delay_header_ds');
                //   var line_ds = $('pur5130_agreement_delay_lines_ds');
                var ds = $('pur_quota_temp_result_ds');
                if (!$('pur_quota_temp_result_ds').validate()) {
                    return false;
                }
                if (ds.isModified()) {
                    Aurora.showMessage('${l:PROMPT}', '请先保存再提交发布！');
                    return;
                }
            
                //  var ds = $('pur_quota_temp_result_ds');
                var records = ds.getSelected();
            
                if (records.length == 0) {
                    Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SELECT_ONE_RECORD_AT_LEAST}');
                    return false;
                }
                //       var submit_group_id = records[1].get('submit_group_id');
            
                 Aurora.showConfirm('${l:PROMPT}', '确认提交执行配额审批申请？', function() {
            
            
                    var contact_records = $('pur_quota_temp_result_ds').getSelected();
                    //   var delete_flag = 'N';
                    var los = [];
                   
                    for (var i = 0;i < contact_records.length;i++) {

                     var quota_id_arr = contact_records[i].get('quota_id_arr').split(',');
                      for (k = 0 ;k < quota_id_arr.length;k++){
                       var quota_id = quota_id_arr[k];
            	        var llo = {};
                        if (quota_id == null || quota_id == '' || quota_id == 'undefined') {
                            $('pur_quota_temp_result_ds').remove(contact_records[i]);
            	         
                        } else {
                            llo['quota_id'] =quota_id ; //contact_records[i].get('quota_id');
                            llo['_status'] = 'update';
                            los.push(llo);
                           //   delete_flag = 'Y';
            
                        }
                        
                        } 
                        
                      }
                  
                  
                   
                
                
                      Aurora.Masker.mask(Ext.getBody(), '${l:LOADING}');
                    Aurora.request({
                        url: $('pur_quota_submit_link').getUrl(),
                        para: los,
                        success: function(res) {
                            pur5130_agreement_delay_edit_back();
                            Aurora.showMessage('${l:PROMPT}', '提交成功！');
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        failure: function(res) {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function(res) {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });   
            
                });
            }
            
            function pur5130_agreement_delay_edit_back() {
                $('pur_quota_temp_result_ds').query();
            }
            
            /**
             * 去除千分位
             *@param{Object}num
             */
            
            function delcommafy(num) {
                console.log('hello1:' + num);
                if ((num + "").trim() == "" || Aurora.isEmpty(num)) {
            
                    return 0;
            
                }
            
                num = num.replace(/,/gi, '');
            
                return Math.round(num);
            
            }
            
            function toThousands(num) {
                console.log('hello2:' + num);
                if ((num + "").trim() == "" || Aurora.isEmpty(num)) {
            
                    return "";
            
                }
                console.log('hello2-1:' + num);
            
                return (num || 0).toString().replace(/(\d)(?=(?:\d{3})+$)/g, '$1,');
                //return (num || 0).replace(/(\d)(?=(?:\d{3})+$)/g, '$1,');
            }
            
            
            // function ves1070_quality_price_deleteFun() {
            
            // var ds = $('ves1070_quality_price_ds');
            // var records = ds.getSelected();
            
            // if (records.length == 0) {
            // Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SELECT_ONE_RECORD_AT_LEAST}');
            // return false;
            // }
            
            // Aurora.showMessage('${l:PROMPT}', '${l:PUR5730.CONFIRM_TO_DELETE_DATA}', function() {
            // var contact_records = $('ves1070_quality_price_ds').getSelected();
            // var delete_flag = 'N';
            // var los = [];
            // // var llo = {};
            
            
            // for (var i = 0;i < contact_records.length;i++) {
            
            // var llo = {};
            
            // var pur_group_id = contact_records[i].get('pur_group_id');
            
            // if (pur_group_id == null || pur_group_id == '' || pur_group_id == 'undefined') {
            // $('ves1070_quality_price_ds').remove(contact_records[i]);
            
            // } else {
            // llo['pur_group_id'] = contact_records[i].get('pur_group_id');
            // llo['_status'] = 'delete';
            // los.push(llo);
            // delete_flag = 'Y';
            
            // }
            // }
            
            // if (delete_flag == 'Y') {
            // Aurora.request({
            // url: $('ves1070_quality_price_save_link').getUrl(),
            // para: los,
            // success: function(result) {
            // $('ves1070_quality_price_ds').query();
            // },
            // failure: function() {},
            // error: function() {},
            // scope: this
            // });
            // }
            // });
            // }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="pur_quota_query_temp_ds">
                <a:fields>
                    <a:field name="rating_classify_code" defaultValue="${/parameter/@rating_classify_code}"/>
                    <a:field name="create_date_num" defaultValue="${/model/init_date_all/record/@cur_year_month}"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="pur_quota_temp_result_ds" autoCount="true" queryDataSet="pur_quota_query_temp_ds" queryUrl="${/request/@context_path}/modules/cux/KINWONG/pur/pur_quota/pur_quota_temp_query.svc" selectable="true"/>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:toolbarButton click="pur5130_agreement_delay_edit_release" text="HAP_SUBMIT" width="100"/>
            </a:screenTopToolbar>
            <a:queryForm bindTarget="pur_quota_query_temp_ds" resultTarget="pur_quota_temp_result_ds" style="width:100%;">
                <a:formToolBar>
                    <a:hBox labelWidth="100">
                        <a:textField name="business_unit_name" prompt="OU"/>
                        <a:textField name="rating_code" prompt="评级分组"/>
                        <a:textField name="create_date_num" prompt="创建期间"/>
                    </a:hBox>
                </a:formToolBar>
            </a:queryForm>
            <a:grid id="pur_quota_temp_result_grid" autoAppend="false" bindTarget="pur_quota_temp_result_ds" marginHeight="80" marginWidth="80" navBar="true">
                <a:toolBar>
                    <a:button click="save_all" text="保存"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="status_desc" align="center" prompt="状态"/>
                    <a:column name="business_unit_name" align="center" prompt="OU"/>
                    <a:column name="rating_code" align="center" prompt="评级分组"/>
                    <a:column name="category_code_3" align="center" footerRenderer="price_all_render" prompt="三级品类"/>
                    <a:column name="price" align="center" footerRenderer="price_all_render" prompt="金额"/>
                </a:columns>
                <a:editors>
                    <a:numberField id="pur_quota_temp_nmb" allowDecimals="true" decimalPrecision="2"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
