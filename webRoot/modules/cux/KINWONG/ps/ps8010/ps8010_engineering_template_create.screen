<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: 孙超超  
    $Date: 2018-12-13 下午3:09:48  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:view>
        <a:link id="ps8010_template_insert_link" url="${/request/@context_path}/modules/cux/KINWONG/ps/ps8010/ps8010_template_insert.svc"/>
        <a:link id="ps8010_template_update_link" url="${/request/@context_path}/modules/cux/KINWONG/ps/ps8010/ps8010_template_update.svc"/>
        <script><![CDATA[
            var mix = 0;
            var sum = 0;
            var subtotal = 0;
            var total = 0;
            var sum_quantities_stack = {};
            var sum_subtotal = 0;
            var sum_total = 0;
            var map = {
                'risk_cost': 0,
                'materials_cost': 0,
                'artificial_cost': 0,
                'mechanical_cost': 0,
                'management_cost': 0,
                'profits': 0
            };
            
            function ps8010_init() {
                var template_head_id = '${/parameter/@template_head_id}';
                if (template_head_id) {
                    $('ps8010_engineering_template_head_ds').setQueryParameter('template_head_id', template_head_id);
                    $('ps8010_engineering_template_head_ds').query();
                    $('ps8010_engineering_template_line_ds').setQueryParameter('template_head_id', template_head_id);
                    $('ps8010_engineering_template_line_ds').query();
                }
            }
            
            
            
            
            //加法
            
            function ps8010_accAdd(arg1, arg2) {
                var r1, r2, m, c;
                try {
                    r1 = arg1.toString().split(".")[1].length;
                } catch (e) {
                    r1 = 0;
                }
                try {
                    r2 = arg2.toString().split(".")[1].length;
                } catch (e) {
                    r2 = 0;
                }
                c = Math.abs(r1 - r2);
                m = Math.pow(10, Math.max(r1, r2));
                if (c > 0) {
                    var cm = Math.pow(10, c);
                    if (r1 > r2) {
                        arg1 = Number(arg1.toString().replace(".", ""));
                        arg2 = Number(arg2.toString().replace(".", "")) * cm;
                    } else {
                        arg1 = Number(arg1.toString().replace(".", "")) * cm;
                        arg2 = Number(arg2.toString().replace(".", ""));
                    }
                } else {
                    arg1 = Number(arg1.toString().replace(".", ""));
                    arg2 = Number(arg2.toString().replace(".", ""));
                }
                return (arg1 + arg2) / m;
            
            }
            
            //乘法
            
            function ps8010_accMul(arg1, arg2) {
                var m = 0,
                    s1 = arg1.toString(),
                    s2 = arg2.toString();
                try {
                    m += s1.split(".")[1].length
                } catch (e) {}
                try {
                    m += s2.split(".")[1].length
                } catch (e) {}
                return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);
            
            }
            //取精度
            
            function ps8010_js_round(para1, para2) {
                return Math.round(ps8010_accMul(para1, Math.pow(10, para2))) / Math.pow(10, para2);
            }
            
            //除法
            
            
            
            function ps8010_accDiv(arg1, arg2) {
                var t1 = 0,
                    t2 = 0,
                    r1, r2;
                try {
                    t1 = arg1.toString().split(".")[1].length
                } catch (e) {}
                try {
                    t2 = arg2.toString().split(".")[1].length
                } catch (e) {}
                with(Math) {
                    r1 = Number(arg1.toString().replace(".", ""))
                    r2 = Number(arg2.toString().replace(".", ""))
                    return ps8010_js_round((r1 / r2) * pow(10, t2 - t1), 8);
                }
            
            }
            
            
            
            
            // function ps8010_template_up_hd(dataSet, record, name, value, oldvalue) {
                // // debugger;
                // var category_level = record.get('category_level');
                // var ps8010_engineering_template_head_ds = $('ps8010_engineering_template_head_ds').getCurrentRecord();
                // var template_head_id = ps8010_engineering_template_head_ds.get('template_head_id');
                // var artificial_cost = record.get('artificial_cost');
                // var materials_cost = record.get('materials_cost');
                // var mechanical_cost = record.get('mechanical_cost');
                // var management_cost = record.get('management_cost');
                // var quantities = record.get('quantities');
                // var profits = record.get('profits');
                // var risk_cost = record.get('risk_cost');
                // var subtotal = record.get('subtotal');
                // var total = record.get('total');
                // var data_id = record.get('data_id');
                // var parent_data_id = record.get('project_code') +  record.get('matching_code');
                // var engineering_template_line_ds = $('ps8010_engineering_template_line_ds');
            
                // // if (name == 'project_code') {
                // // $('ps8010_engineering_ds').setQueryUrl("${/request/@context_path}/autocrud/bid.BID8010.bid8010_engineering_main/query?data_id=" + data_id);
                // // $('ps8010_engineering_ds').query();
                // // console.log(engineering_template_line_ds.getAll());
                // // }
                // if (category_level == 2) {
                    // if (name == 'quantities') {
                        // var parentrecord = getParentrecord(record.get('parent_data_id'), dataSet.getAll());
                        // var line_ds = dataSet.getAll();
                        // mix = value;
                        // for (var i = 0;i < line_ds.length;i++) {
                            // if (line_ds[i].get('category_level') == 2 && line_ds[i].get('parent_data_id') == record.get('parent_data_id')) {
                                // if (mix > line_ds[i].get('quantities')) {
                                    // mix = line_ds[i].get('quantities');
                                // }
                            // }
                        // }
                        // parentrecord.set('quantities', mix);
                    // }
                    // if (name == 'artificial_cost' || name == 'materials_cost' || name == 'mechanical_cost' || name == 'management_cost' || name == 'profits' || name == 'risk_cost') {
                        // debugger;
                        // sum = 0;
                        // var parentrecord = getParentrecord(record.get('parent_data_id'), dataSet.getAll());
                        // var line_ds = dataSet.getAll();
                        // for (var i = 0;i < line_ds.length;i++) {
                            // if (line_ds[i].get('category_level') == 2 && line_ds[i].get('parent_data_id') == record.get('parent_data_id')) {
                                // if (typeof(line_ds[i].get('quantities')) != 'undefined' && !Ext.isEmpty(line_ds[i].get('quantities')) && typeof(line_ds[i].get(name)) != 'undefined' && !Ext.isEmpty(line_ds[i].get(name))) {
                                    // sum = ps8010_accAdd(sum, ps8010_accMul(line_ds[i].get('quantities'), line_ds[i].get(name)));
                                // }
                            // }
                        // }
                        // subtotal = ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(getnumber('artificial_cost', record), getnumber('materials_cost', record)), getnumber('mechanical_cost', record)), getnumber('management_cost', record)), getnumber('profits', record)), getnumber('risk_cost', record));
                        // record.set('subtotal', subtotal);
                        // record.set('total', ps8010_accMul(subtotal, record.get('quantities')));
                        // if (typeof(parentrecord.get('quantities')) != 'undefined' && !Ext.isEmpty(parentrecord.get('quantities'))) {
                            // parentrecord.set(name, ps8010_accDiv(sum, parentrecord.get('quantities')));
                            // subtotal = ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(ps8010_accAdd(getnumber('artificial_cost', parentrecord), getnumber('materials_cost', parentrecord)), getnumber('mechanical_cost', parentrecord)), getnumber('management_cost', parentrecord)), getnumber('profits', parentrecord)), getnumber('risk_cost', parentrecord));
                            // parentrecord.set('subtotal', subtotal);
                            // parentrecord.set('total', ps8010_accMul(subtotal, parentrecord.get('quantities')));
                        // }
                    // }
                // }
            // }
            
            
            function declim2(sum) {
                return Math.round(sum * 100) / 100;
            }
            
            function getSum(val, oldVal, sum_x) {
                if (!oldVal) {
                    sum_x += val;
                } else {
                    sum_x += val - oldVal;
                }
                return sum_x;
            }
            
            function getParentrecord(parent_data_id, records) {
                for (i = 0;i < records.length;i++) {
                    if (records[i].get('matching_code') == parent_data_id) {
                        return records[i];
                    }
                }
                return null;
            }
            
            function getnumber(name, record) {
                if (typeof(record.get(name)) != 'undefined' && !Ext.isEmpty(record.get(name))) {
                    return record.get(name);
                } else {
                    return 0;
                }
            }
            
            //保存
            
            function ps8010_save() {
                var ds = $('ps8010_engineering_template_head_ds');
                var lines_ds = $('ps8010_engineering_template_line_ds');
            
                if (ds.validate() && lines_ds.validate()) {
                    var record = ds.getCurrentRecord();
                    var records1 = lines_ds.getAll();
                    var para = record.data;
                    para['lines'] = lines_ds.getJsonData(false);
                    var url;
            
                    if (record.get('template_head_id')) {
                        url = $('ps8010_template_update_link').getUrl();
                    } else {
                        //新建
                        url = $('ps8010_template_insert_link').getUrl();
                    }
            
                    Aurora.Masker.mask($('ps8010_template_create_window').wrap, '正在提交...');
                    Aurora.request({
                        url: url,
                        para: para,
                        success: function(res) {
                            var template_head_id = res.result.template_head_id ? res.result.template_head_id : '${/parameter/@template_head_id}';
                            Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SAVE_SUCCESS}', function() {
                                ds.setQueryParameter('template_head_id', template_head_id);
                                ds.query();
                                lines_ds.setQueryParameter('template_head_id', template_head_id);
                                lines_ds.query();
            
                                Aurora.Masker.unmask($('ps8010_template_create_window').wrap);
                            });
                        },
                        error: function() {
                            Aurora.Masker.unmask($('ps8010_template_create_window').wrap);
                        },
                        failure: function() {
                            Aurora.Masker.unmask($('ps8010_template_create_window').wrap);
                        },
                        scope: this
                    });
                }
            }
            
            function ps8010_back() {
                query_ps8010_template_result_ds();
                $('ps8010_template_create_window').close();
            }
            
            // function ps8010_engineering_load_handler(ds) {
            // var ps8010_engineering_template_head_ds = $('ps8010_engineering_template_head_ds').getCurrentRecord();
            // var template_head_id = ps8010_engineering_template_head_ds.get('template_head_id');
            // var engineering_ds = ds.getAll();
            // var engineering_template_line_ds = $('ps8010_engineering_template_line_ds');
            // for (var t = 0;t < engineering_ds.length;t++) {
            // var flag = 0;
            // var line_ds = engineering_template_line_ds.getAll();
            // for (var i = 0;i < line_ds.length;i++) {
            // if (engineering_ds[t].get('data_id') == line_ds[i].get('data_id')) {
            // flag = 1;
            // return;
            // }
            // }
            // if (flag == 0) {
            // engineering_template_line_ds.create({
            // 'template_head_id': template_head_id,
            // 'project_code': engineering_ds[t].get('project_code'),
            // 'expanded': 'Y',
            // 'project_name': engineering_ds[t].get('project_name'),
            // 'category_level': engineering_ds[t].get('category_level'),
            // 'parent_data_id': engineering_ds[t].get('parent_date_id'),
            // 'data_id': engineering_ds[t].get('data_id'),
            // 'project_uom_name': engineering_ds[t].get('project_uom_name'),
            // 'project_characteristi': engineering_ds[t].get('project_characteristi'),
            // 'project_uom_code': engineering_ds[t].get('project_uom_code')
            // });
            // }
            // }
            // for (var i = 0;i < engineering_ds.length;i++) {
            // engineering_template_line_ds.pre();
            // }
            // }
            
            function ps8010_EngTemplateTreegridEditorFunction(record, name) {
            
                var level = record.get('category_level');
                if (level == '1') {
                    if (name == 'quantities') {
                        return 'ps8010_template_line_nf4';
                    } else if (name == 'artificial_cost') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'materials_cost') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'mechanical_cost') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'management_cost') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'profits') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'risk_cost') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'subtotal') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'total') {
                        return 'ps8010_template_line_nf3';
                    } else if (name == 'project_code') {
                        return 'ps8010_template_line_lov';
                    }
                } else if (level == '2') {
                    if (name == 'quantities') {
                        return 'ps8010_template_line_nf2';
                    } else if (name == 'artificial_cost') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'materials_cost') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'mechanical_cost') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'management_cost') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'profits') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'risk_cost') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'subtotal') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'total') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'project_code') {
                        return 'ps8010_template_line_lov';
                    }
                } else if (level == '主材') {
                    if (name == 'quantities') {
                        return 'ps8010_template_line_nf2';
                    } else if (name == 'main_material_name') {
                        return 'ps8010_template_line_lov';
                    } else if (name == 'main_material_model_desc') {
                        return 'ps8010_template_line_tf';
                    } else if (name == 'main_material_loss_rate') {
                        return 'ps8010_template_line_nf1';
                    } else if (name == 'main_material_unit_price') {
                        return 'ps8010_template_line_nf1';
                    }
                }
            }
            
            function ps8010_engineering_template_head_load_handler(ds) {
                ds.getCurrentRecord().getField('project_type_desc').setReadOnly(true);
            }
            
            
            function add_l1_project() {
                var ds = $('ps8010_engineering_template_line_ds');
                var new_rec = ds.create({
                    'category_level': '1'
                });
            }
            
            function add_l2_project(project_code) {
                var ds = $('ps8010_engineering_template_line_ds');
                var new_rec = ds.create({
                    'category_level': '2',
                    'matching_code': project_code
                });
            }
            
            function add_l3_project(project_code, matching_code) {
                var ds = $('ps8010_engineering_template_line_ds');
                var new_rec = ds.create({
                    'category_level': '主材',
                    'matching_code': matching_code + project_code
                });
            }
            
            function ps8010_PreschemeGridRendererFunction(value, record, name) {
                var level = record.get('category_level');
                var project_code = record.get('project_code');
                var matching_code = record.get('matching_code');
                if (!Aurora.isEmpty(project_code)) {
                    if (name == 'add') {
                        if (level == '1') {
                            return '<a href="javascript:add_l2_project(\'' + project_code + '\')">新增</a>';
                        } else if (level == '2') {
                            return '<a href="javascript:add_l3_project(\'' + project_code + '\',\'' + matching_code + '\')">新增</a>';
                        } else {
                            return '';
                        }
                    }
                }
            }
        ]]></script>
        <a:dataSets>
            <!--  <a:dataSet id="ps8010_engineering_ds" fetchAll="true" model="bid.BID8010.bid8010_engineering_main">
                <a:events>
                    <a:event name="load" handler="ps8010_engineering_load_handler"/>
                </a:events>
            </a:dataSet> -->
            <a:dataSet id="ps8010_engineering_template_head_ds" autoCount="false" autoCreate="true" fetchAll="true" model="cux.KINWONG.ps.ps8010.ps8010_engineering_template_head">
                <a:fields>
                    <a:field name="template_head_id"/>
                    <a:field name="template_code" readOnly="true"/>
                    <a:field name="project_type_desc" lovAutoQuery="true" lovGridHeight="300" lovHeight="450" lovLabelWidth="100" lovService="cux.KINWONG.ps.ps7010.ps7010_project_type_lov" lovWidth="500" required="true" title="项目工程选择">
                        <a:mapping>
                            <a:map from="entrustment_type_desc" to="project_type_desc"/>
                            <a:map from="entrustment_type_id" to="project_type_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="project_type_id"/>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="ps8010_engineering_template_head_load_handler"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="ps8010_engineering_template_line_ds" autoCount="true" autoPageSize="true" fetchAll="true" model="cux.KINWONG.ps.ps8010.ps8010_engineering_template_line" selectable="true">
                <a:fields>
                    <a:field name="template_line_id"/>
                    <a:field name="template_head_id" defaultValue="${/parameter/@template_head_id}"/>
                    <a:field name="project_code" lovAutoQuery="true" lovGridHeight="300" lovHeight="450" lovLabelWidth="100" lovService="cux.KINWONG.ps.ps7010.ps7010_prescheme_project_lov" lovWidth="500" title="项目工程选择">
                        <a:mapping>
                            <a:map from="data_id" to="data_id"/>
                            <a:map from="category_level" to="category_level"/>
                            <a:map from="parent_date_id" to="parent_data_id"/>
                            <a:map from="expanded" to="expanded"/>
                            <a:map from="project_name" to="project_name"/>
                            <a:map from="project_characteristi" to="project_characteristi"/>
                            <a:map from="project_uom_name" to="project_uom_name"/>
                            <a:map from="project_uom_code" to="project_uom_code"/>
                            <a:map from="project_code" to="project_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="rate" lovAutoQuery="true" lovGridHeight="300" lovHeight="450" lovLabelWidth="100" lovService="cux.KINWONG.ps.ps7010.ps7010_rate_lov" lovWidth="500" title="税率选择">
                        <a:mapping>
                            <a:map from="bg_tax_type_rate" to="rate"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="expanded" checkedValue="Y" uncheckedValue="N"/>
                    <a:field name="project_name"/>
                    <a:field name="category_level"/>
                    <a:field name="parent_data_id"/>
                    <a:field name="data_id"/>
                    <a:field name="project_uom_name" lovAutoQuery="true" lovGridHeight="300" lovHeight="450" lovLabelWidth="100" lovService="bid.BID8010.bid8010_uom_code_lov" lovWidth="500" required="true" title="计量单位查询">
                        <a:mapping>
                            <a:map from="uom_code" to="project_uom_code"/>
                            <a:map from="uom_name" to="project_uom_name"/>
                            <a:map from="class_name" to="project_uom_class_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="main_material_name" lovService="cux.KINWONG.ps.ps7010.ps7010_main_material_lov" lovWidth="500">
                        <a:mapping>
                            <a:map from="main_material_name" to="main_material_name"/>
                            <a:map from="main_material_model" to="main_material_model"/>
                            <a:map from="main_material_loss_rate" to="main_material_loss_rate"/>
                            <a:map from="project_uom_code" to="project_uom"/>
                            <a:map from="project_uom_desc" to="project_uom_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="project_characteristi"/>
                    <a:field name="brand"/>
                    <a:field name="project_uom_code"/>
                    <a:field name="quantities"/>
                    <a:field name="artificial_cost"/>
                    <a:field name="materials_cost"/>
                    <a:field name="mechanical_cost"/>
                    <a:field name="management_cost"/>
                    <a:field name="profits"/>
                    <a:field name="risk_cost"/>
                    <a:field name="subtotal"/>
                    <a:field name="total"/>
                    <a:field name="comments"/>
                </a:fields>
                <!--  <a:events>
                    <a:event name="update" handler="ps8010_template_up_hd"/>
                </a:events> -->
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:toolbarButton click="ps8010_save" text="PROMPT.SAVE" width="100"/>
                <a:toolbarButton id="ps8010_back_button" click="ps8010_back" text="HAP_BACK" width="100"/>
            </a:screenTopToolbar>
            <a:vBox>
                <a:hBox labelWidth="100">
                    <a:lov name="project_type_desc" bindTarget="ps8010_engineering_template_head_ds" prompt="工程类型" width="410"/>
                    <a:textField name="template_code" bindTarget="ps8010_engineering_template_head_ds" prompt="模版编码" width="410"/>
                </a:hBox>
                <a:treeGrid id="ps8010_engineering_template_ds_treegrid" bindTarget="ps8010_engineering_template_line_ds" expandField="expanded" idField="son_matching_code" marginHeight="160" marginWidth="80" parentField="matching_code" showCheckBox="false">
                    <a:toolBar>
                        <a:button click="add_l1_project" text="新增一级工程"/>
                        <a:button type="delete"/>
                        <a:button type="clear"/>
                    </a:toolBar>
                    <a:columns>
                        <a:column name="project_code" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="项目编码" width="100"/>
                        <a:column name="project_name" align="left" autoAdjust="true" editor="ps8010_template_line_tf" prompt="项目名称" width="200"/>
                        <a:column name="project_characteristi" align="left" autoAdjust="true" editor="ps8010_template_line_tf" prompt="项目特征" width="200"/>
                        <a:column name="main_material_name" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材料名称" width="70"/>
                        <a:column name="main_material_model" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材料规格" width="70"/>
                        <a:column name="main_material_model_desc" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材料规格描述" width="100"/>
                        <a:column name="add" align="center" prompt="下级项目" renderer="ps8010_PreschemeGridRendererFunction" width="40"/>
                        <a:column name="category_level" align="left" prompt="级别" width="40"/>
                        <!-- <a:column name="brand" align="left" autoAdjust="true" editor="ps8010_template_line_tf" prompt="品牌" width="100"/> -->
                        <a:column name="project_uom_name" align="center" autoAdjust="true" editor="ps8010_template_line_lov" prompt="计量单位" width="100"/>
                        <a:column name="quantities" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="工程量" width="80"/>
                        <a:column align="center" prompt="综合单价">
                            <a:column name="artificial_cost" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="人工费" width="80"/>
                            <a:column name="main_material_loss_rate" align="center" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材损耗率" width="80"/>
                            <a:column name="main_material_unit_price" align="center" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材单价" width="80"/>
                            <a:column name="main_material_cost" align="center" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="主材费" width="80"/>
                            <a:column name="mechanical_cost" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="机械费" width="80"/>
                            <a:column name="management_cost" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="管理费" width="80"/>
                            <a:column name="profits" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="利润" width="80"/>
                            <!-- <a:column name="risk_cost" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="风险费用" width="80"/> -->
                            <a:column name="subtotal" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="小计" width="80"/>
                        </a:column>
                        <a:column name="total" align="center" autoAdjust="true" editorFunction="ps8010_EngTemplateTreegridEditorFunction" prompt="合计" width="80"/>
                        <!-- <a:column name="rate" align="center" autoAdjust="true" editor="ps8010_template_line_lov" prompt="税率" width="80"/> -->
                        <a:column name="comments" align="left" autoAdjust="true" editor="ps8010_template_line_tf" prompt="备注" width="200"/>
                    </a:columns>
                    <a:editors>
                        <a:textField id="ps8010_template_line_tf"/>
                        <a:numberField id="ps8010_template_line_nf1" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="8"/>
                        <a:numberField id="ps8010_template_line_nf2" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="8"/>
                        <a:numberField id="ps8010_template_line_nf3" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="8" readOnly="true"/>
                        <a:numberField id="ps8010_template_line_nf4" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="8" readOnly="true"/>
                        <a:lov id="ps8010_template_line_lov"/>
                    </a:editors>
                </a:treeGrid>
            </a:vBox>
        </a:screenBody>
        <script><![CDATA[
        	ps8010_init();
        ]]></script>
    </a:view>
</a:screen>
