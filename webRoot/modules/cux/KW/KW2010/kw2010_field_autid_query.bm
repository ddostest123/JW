<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
		SELECT t.*
		  FROM (SELECT a.application_id,
		               (SELECT v.flex_desc
		                  FROM fnd_flex_values_vl v, fnd_flex_value_sets s
		                 WHERE v.flex_value_set_id = s.flex_value_set_id
		                   AND s.flex_value_set_code = 'SITE_AUDIT_STATUS'
		                   and v.FLEX_VALUE =  a.status) status_desc,
		               a.status,
		               a.application_number,
		               a.vendor_code,
		               a.vendor_name,
		               to_char(a.visit_date, 'yyyy-mm-dd') visit_date,
		               a.visit_date date_from,
		               a.created_by,
		               (SELECT su.user_name FROM sys_user su WHERE su.user_id = a.created_by) user_name,
		               to_char(a.creation_date, 'yyyy-mm-dd hh:mm:ss') creation_date,
		               (SELECT v.flex_desc
		                  FROM fnd_flex_values_vl v, fnd_flex_value_sets s
		                 WHERE v.flex_value_set_id = s.flex_value_set_id
		                   AND s.flex_value_set_code = 'EXAMINE_TYPE'
		                   and v.FLEX_VALUE =  a.examine_type) examine_type,
		               a.examine_type examine_type_code,
		               a.application_reason,
		               a.field_trip_flag,
		               a.comments
		          FROM kw_fnd_scene_audit_header a,
		          	   fnd_companies_vl fc
		         where a.vendor_code = fc.company_code
		           and fc.business_group = ${/session/@business_group}) t
 				#WHERE_CLAUSE#
 				 order by t.application_number desc
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="application_id" input="false" output="true" outputPath="@application_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.create_field_autid(x_application_id           => ${@application_id},
								  					   p_vendor_code        	=> ${@vendor_code},
								                       p_vendor_name         	 => ${@vendor_name},
								                       p_visit_date          	 => to_date(${@visit_date},'yyyy-mm-dd'),
								                       p_examine_type         	 => ${@examine_type_code},
								                       p_field_trip_flag 		=> ${@field_trip_flag},
							                       	   p_application_reason      => ${@application_reason},
								                       p_comments    			=> ${@comments}, 
								                       p_user_id                 => ${/session/@user_id},
                                                       p_review_conclusion       => ${@review_conclusion},
						                               p_plan_visit_date         => to_date(${@plan_visit_date},'yyyy-mm-dd'), 
								                       p_vendor_reply_date      => to_date(${@vendor_reply_date},'yyyy-mm-dd'),
								                       p_vendor_must_reply_date => to_date(${@vendor_must_reply_date},'yyyy-mm-dd') );
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.modify_field_autid(p_application_id           => ${@application_id},
								  					   p_vendor_code        	=> ${@vendor_code},
								                       p_vendor_name         	 => ${@vendor_name},
								                       p_visit_date          	 => to_date(${@visit_date},'yyyy-mm-dd'),
								                       p_examine_type         	 => ${@examine_type_code},
								                       p_field_trip_flag 		=> ${@field_trip_flag},
							                       	   p_application_reason      => ${@application_reason},
								                       p_comments    			=> ${@comments}, 
								                       p_user_id                 => ${/session/@user_id},
                                                       p_review_conclusion       => ${@review_conclusion},
						                               p_plan_visit_date         => to_date(${@plan_visit_date},'yyyy-mm-dd'), 
								                       p_vendor_reply_date      => to_date(${@vendor_reply_date},'yyyy-mm-dd'),
								                       p_vendor_must_reply_date => to_date(${@vendor_must_reply_date},'yyyy-mm-dd'));
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.delete_field_autid(p_application_id           => ${@application_id},
				                       					p_user_id             => ${/session/@user_id});
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.vendor_submit_field_autid(p_application_id           => ${@application_id},
				                        					   p_user_id                  => ${/session/@user_id});
				end;
	    	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="vendor_name" queryExpression="t.vendor_name = ${@vendor_name}"/>
        <bm:query-field name="application_number" queryExpression="t.application_number like &apos;%&apos;||trim(${@application_number})||&apos;%&apos; "/>
        <bm:query-field name="visit_date" queryExpression="trunc(t.date_from) &gt;= to_date(${@visit_date}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="application_id" queryExpression="t.application_id = ${@application_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="filter" expression="t.status in (&apos;20_RELEASED&apos;,&apos;80_RETURN_REPLY&apos;,&apos;90_CONFIRMED&apos;)"/>
    </bm:data-filters>
</bm:model>
