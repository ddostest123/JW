<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
		SELECT t.*
		  FROM (SELECT a.application_id,
		               (SELECT v.flex_desc
		                  FROM fnd_flex_values_vl v, fnd_flex_value_sets s
		                 WHERE v.flex_value_set_id = s.flex_value_set_id
		                   AND s.flex_value_set_code = 'SITE_AUDIT_STATUS'
		                   and v.FLEX_VALUE =  a.status) status_desc,
		               a.status,
		               a.application_number,
		               a.vendor_code,
		               a.vendor_name,
		               to_char(a.visit_date, 'yyyy-mm-dd') visit_date,
		               a.visit_date date_from,
		               a.created_by,
		               (SELECT su.user_name FROM sys_user su WHERE su.user_id = a.created_by) user_name,
		               to_char(a.creation_date, 'yyyy-mm-dd hh:mm:ss') creation_date,
		               (SELECT v.flex_desc
		                  FROM fnd_flex_values_vl v, fnd_flex_value_sets s
		                 WHERE v.flex_value_set_id = s.flex_value_set_id
		                   AND s.flex_value_set_code = 'EXAMINE_TYPE'
		                   and v.FLEX_VALUE =  a.examine_type) examine_type,
		               a.examine_type examine_type_code,
		               a.application_reason,
		               a.field_trip_flag,
		               a.comments,
				       a.service_items,
				       a.auditor,
				       a.audit_team_leader,
				       a.accompanying_person,
				       to_char(a.plan_review_time, 'yyyy-mm-dd') plan_review_time,
				       to_char(a.actual_review_time, 'yyyy-mm-dd') actual_review_time,
				       to_char(a.audit_time, 'yyyy-mm-dd') audit_time,
				       a.delay_date_reason,
				       a.qsa_scores,
				       a.qpa_scores,
				       a.last_review_conclusion,
				       a.total_scores,
   				       a.review_conclusion review_conclusion_code,
				       a.review_conclusion,
   				       to_char(a.plan_visit_date,'yyyy-mm-dd') plan_visit_date,
				       to_char(a.vendor_reply_date,'yyyy-mm-dd') vendor_reply_date,
				       to_char(a.vendor_must_reply_date,'yyyy-mm-dd') vendor_must_reply_date,
				       a.submit_reject_reason,
				       a.feedback_reason
		          FROM kw_fnd_scene_audit_header a,
		          	   fnd_companies_vl fc
		         where fc.company_code = a.vendor_code
		           and fc.business_group = ${/session/@business_group}) t
 				#WHERE_CLAUSE#
 				 order by t.application_number desc
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.modify_field_autid_approve(p_application_id           		   => ${@application_id},
										  					   p_service_items        			   => ${@service_items},
										                       p_auditor         				   => ${@auditor_id},
										                       p_audit_team_leader          	   => ${@audit_team_leader_id},
										                       p_accompanying_person           	   => ${@accompanying_person_id},
										                       p_plan_review_time         		   => to_date(${@plan_review_time},'yyyy-mm-dd'),
									                       	   p_actual_review_time                => to_date(${@actual_review_time},'yyyy-mm-dd'),
										                       p_audit_time    			           => to_date(${@audit_time},'yyyy-mm-dd'), 
										                       p_delay_date_reason                 => ${@delay_date_reason},
										                       p_qsa_scores                        => ${@qsa_scores},
										                       p_qpa_scores                        => ${@qpa_scores},
										                       p_last_review_conclusion            => ${@last_review_conclusion},
										                       p_user_id                 		   => ${/session/@user_id} );
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
	    		begin
				  kw_field_autid_pkg.field_autid_pass_or_reject(p_application_id           => ${@application_id},
				  												p_feedback_reason         => ${@feedback_reason},
				  												p_visit_date              => to_date(${@visit_date},'yyyy-mm-dd'),
				  										        p_check_status            => ${@check_status},
				                        					   p_user_id                  => ${/session/@user_id});
				end;
	    	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="vendor_name" queryExpression="t.vendor_name = ${@vendor_name}"/>
        <bm:query-field name="application_number" queryExpression="t.application_number like &apos;%&apos;||trim(${@application_number})||&apos;%&apos; "/>
        <bm:query-field name="visit_date" queryExpression="trunc(t.date_from) &gt;= to_date(${@visit_date}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="application_id" queryExpression="t.application_id = ${@application_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="filter" expression="t.status in (&apos;70_WAITING_FEEDBACK&apos;,&apos;50_REFORM_REFUSE&apos;)"/>
    </bm:data-filters>
</bm:model>
