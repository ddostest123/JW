<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lianghuihao  
    $Date: 2018年11月1日20:32:06  
    $Revision: 1.0  
    $Purpose: 
-->
<a:service xmlns:t="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <p:echo/>
        <a:model-query fetchAll="true" model="cux.NEWHOPE.PUR.PUR7041.pur_item_generate_application_details" rootPath="details"/>
        <a:model-query fetchAll="true" model="pur.PUR5240.pur_rfx_geturl_to_oa" rootPath="url"/>
        <a:model-query fetchAll="true" model="cux.NEWHOPE.PUR.PUR7041.pur7041_application_get_tcode_to_oa" rootPath="tcode"/>
        <a:rest-invoker acceptLanguage="zh-CN,zh;q=0.8" cacheControl="no-cache" contentType="application/json;charset=UTF-8" raiseExceptionOnError="true" requestMethod="GET" returnPath="/soapResponse/USER" url="${/model/url/record/@get_user_url}"/>
        <a:model-execute model="cux.NEWHOPE.PUR.PUR7041.pur_application_header_submit"/>
        <p:set field="/parameter/@userName" sourceField="/soapResponse/USER/@userName"/>
        <s:server-script><![CDATA[
            var logger = $logger('server-script');
            
            function log(msg) {
                logger.info(msg);
            }
            var para = $ctx.parameter;
            log($ctx.model.getChild('details').toXML);
            var dataList = $ctx.model.getChild('details').getChildren();
            var data = [];
            
            // for (var i = 0;i < dataList.length;i++) {
            // data[dataList[i].vendor_desc] = [];
            // }
            // for (var i = 0;i < dataList.length;i++) {
            // data[dataList[i].vendor_desc].push(dataList[i]);
            // }
            for (var i = 0;i < dataList.length;i++) {
                data.push(dataList[i]);
            }
            var tableListAll = new CompositeMap('tableListAll');
            var record = new CompositeMap('record');
            var tableList = new CompositeMap('TableList');
            var loginName = new CompositeMap('loginName');
            loginName.setText(para.userName);
            var tCode = new CompositeMap('tCode');
            var tcodeValue = $ctx.model.getChild('tcode').getChild('record').quote_code;
            tCode.setText(tcodeValue);
            var title_text = '电商采购申请单' + data[0].req_number;
            var title = new CompositeMap('title');
            title.setText(title_text);
            tableList.addChild(loginName);
            tableList.addChild(tCode);
            tableList.addChild(title);
            var table1 = new CompositeMap('Table');
            table1['isson'] = '1';
            tableList.addChild(table1);
            var nameList = {
                "流水号": data[0].req_number,
                "申请时间": data[0].creation_date,
                "币种": 'CNY',
                "采购供应商": data[0].data_source_desc
            };
            for (var tempName in nameList) {
                var field = new CompositeMap('Field');
                field.name = tempName;
                if (nameList[tempName]) {
                    field.value = nameList[tempName];
                } else {
                    field.value = '';
                }
                table1.addChild(field);
            }
            var table2 = new CompositeMap('Table');
            table2['isson'] = '2';
            tableList.addChild(table2);
            var row = [];
            var row_num = -1;
            var temp_i = 0;
            for (var i = 0;i < data.length;i++) {
                row.push(new CompositeMap('row'));
                row_num = row_num + 1;
                table2.addChild(row[row_num]);
                temp_i = temp_i + 1;
                var nameList1 = {
                    "序号": '' + temp_i,
                    "物料编码": data[i].item_code,
                    "物料名称": data[i].item_desc,
                    "物料类型": data[i].item_category_desc,
                    "参照行": '主行',
                    "SKU": data[i].catalog_item_code,
                    "数量": data[i].quantity,
                    "单位": data[i].uom_desc,
                    "单价": data[i].price,
                    "金额": data[i].line_amount,
                    "采购提前期": data[i].delivery_time,
                    "预计到货时间": data[i].arrival_time,
                    "对比供应商": data[i].vendor_name_1,
                    "电商物料描述": data[i].vendor_item_name_1,
                    "对比单价": data[i].vendor_price_1,
                    "对比采购提前期": data[i].vendor_delivery_time_1,
                    "价格对比": data[i].vendor_radio_1,
                    "备注说明": data[i].line_comments,
                    "保固期": null,
                    "对比保固期": null,
                    "前三位": data[i].thr_item_code,
                    "前五位": data[i].fiv_item_code
                };
                for (var tempName in nameList1) {
                    var field = new CompositeMap('Field');
                    field.name = tempName;
                    if (nameList1[tempName]) {
                        field.value = nameList1[tempName];
                    } else {
                        field.value = '';
                    }
                    row[row_num].addChild(field);
                }
                
               if  (data[i].vendor_name_2 != null ){
	                row_num = row_num + 1;
	                row.push(new CompositeMap('row'));
	                table2.addChild(row[row_num]);
	                temp_i = temp_i + 1;
	                var nameList2 = {
	                    "序号": '' + temp_i,
	                    "参照行": '参考行',
	                    "物料编码": data[i].item_code,
	                    "物料名称": data[i].item_desc,
	                    "物料类型": data[i].item_category_desc,
	                    "SKU": data[i].catalog_item_code,
	                    "数量": data[i].quantity,
	                    "单位": data[i].uom_desc,
	                    "单价": data[i].price,
	                    "金额": data[i].line_amount,
	                    "采购提前期": data[i].delivery_time,
	                    "预计到货时间": data[i].arrival_time,
	                    "对比供应商": data[i].vendor_name_2,
	                    "电商物料描述": data[i].vendor_item_name_2,
	                    "对比单价": data[i].vendor_price_2,
	                    "对比采购提前期": data[i].vendor_delivery_time_2,
	                    "价格对比": data[i].vendor_radio_2,
	                    "备注说明": data[i].line_comments,
	                    "保固期": null,
	                    "对比保固期": null,
	                    "前三位": data[i].thr_item_code,
	                    "前五位": data[i].fiv_item_code
	                };
	                for (var tempName in nameList2) {
	                    var field2 = new CompositeMap('Field');
	                    field2.name = tempName;
	                    if (nameList2[tempName]) {
	                        field2.value = nameList2[tempName];
	                    } else {
	                        field2.value = '';
	                    }
	                    row[row_num].addChild(field2);
	                }
               }
                
            }
            
            record.setText(tableList.toXML());
            log(tableList.toXML());
            tableListAll.addChild(record);
            var url = $ctx.model.getChild('url').getChild('record').post_url + '&key=BD2B0CCCBC954FA6';
            try {
                var is = Packages.com.hand.jw_webservice.HttpUtils.urlPost(url, tableList.toXML(), 'text/xml;charset=utf8', "POST", "UTF-8", "", "");
                var ret = Packages.com.hand.jw_webservice.IOUtilsEx.newString(is, "UTF-8");
                log(ret);
                ret = JSON.parse(ret);
                if (ret.status == 'S') {
                    $ctx.put('/soapResponse/RESPONSE/@status', ret.status);
                } else if (ret.status == 'E') {
                    $ctx.put('/soapResponse/RESPONSE/@status', ret.status);
                    $ctx.put('/soapResponse/RESPONSE/@message', ret.message);
                }
            } catch (e) {
                log(e)
            }
        ]]></s:server-script>
        <p:echo/>
        <t:test field="/soapResponse/RESPONSE/@status" message="${/soapResponse/RESPONSE/@message}" operator="!=" value="S"/>
    </a:init-procedure>
</a:service>
