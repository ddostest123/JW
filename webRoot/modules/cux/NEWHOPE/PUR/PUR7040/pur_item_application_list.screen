<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="cux.NEWHOPE.PUR.PUR7040.pur_catelog_query" rootPath="catelog_info"/>
    </a:init-procedure>
    <a:view>
        <meta CONTENT="no-cache" HTTP-EQUIV="Pragma"/>
        <meta CONTENT="no-cache" HTTP-EQUIV="Cache-Control"/>
        <meta CONTENT="0" HTTP-EQUIV="Expires"/>
        <meta charset="UTF-8"/>
        <a:link id="pur_shopping_cart_update_link" model="cux.NEWHOPE.PUR.PUR7040.pur_item_catelog_application" modelaction="batch_update"/>
        <a:link id="pur_reflash_sn_link" url="${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_reflash_sn.svc"/>
        <a:link id="pur_catlog_item_detail_link" url="${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_catlog_item_preview.screen"/>
        <a:link id="pur_shopping_cart_validate_no" model="cux.NEWHOPE.PUR.PUR7040.pur_catelog_add_no_validate" modelaction="execute"/>
        <a:link id="pur_generate_application_link" url="${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_generate_application.screen"/>
        <link href="${/request/@context_path}/css/font-awesome-4.7.0/css/font-awesome.min.css?v=1.1" rel="stylesheet" type="text/css"/>
        <link href="${/request/@context_path}/css/pur/catelog_shopping_cart.css?v=201711122150" rel="stylesheet" type="text/css"/>
        <script src="${/request/@context_path}/javascripts/jquery-3.1.0.min.js"/>
        <script><![CDATA[
        	var jQuery = $.noConflict();
        ]]></script>
        <a:script><![CDATA[
            var shopping_cart_id;
            var catalog_company_id = Aurora.getCookie('catalog_company_id');
            var catalog_company_name = Aurora.getCookie('catalog_company_name');
            
            function shopping_cart_close() {
                $('pur_catlog_shopping_cart_window').close();
            }
            
            function search(no, catelog_udf_id, item_catority_name) {
                var item_detail = document.getElementById('search-text').value;
            
                Aurora.setCookie('reload_flag', 'Y');
                var url = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_catelog_purchase.screen?search=Y&item_detail=' + encodeURIComponent(item_detail) + '&catelog_udf_id=' + -1;
                if (!Aurora.isEmpty(catelog_udf_id)) {
                    url = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_catelog_purchase.screen?search=Y&item_detail=' + encodeURIComponent(item_detail) + '&catelog_udf_id=' + catelog_udf_id;
                }
                window.location.href = url;
            }
            
            // 分类查询
            
            function on_pur7040_catelog_name_ds_load(ds) {
                var records = ds.getAll();
                var length = records.length;
                var catelog_level = [];
                for (var i = 0;i < length;i++) {
                    catelog_level[i] = records[i].data.catelog_level;
                    if (catelog_level[i] === 0) {
            
                       } else if (catelog_level[i] === 1) {
                        loadCatalogLevelOne(records[i]);
                    } else if (catelog_level[i] === 2) {
                        loadCatalogLevelTwo(records[i]);
                    } else if (catelog_level[i] === 3) {
                        loadCatalogLevelThree(records[i]);
                    }
                }
            
                NavLiHover();
            }
            
            function on_pur7040_company_query_ds_add(dataSet, record, index) {
                record.set('company_full_name', catalog_company_name);
            }
            
            function on_pur7040_company_query_ds_update( dataSet , record, name, value, oldvalue) {
                if (name == 'company_id') {
                    var ul = document.getElementById('catalog-submenu-ul');
                    ul.innerHTML = '';
                    if (record.get('company_id')) {
            
                        catalog_company_id = record.get('company_id');
                        Aurora.setCookie('catalog_company_id', catalog_company_id);
            
                        $("pur7040_catelog_name_ds").setQueryParameter('company_id', catalog_company_id);
                        $("pur7040_catelog_name_ds").query();
                    } else {
                        $("pur7040_catelog_name_ds").setQueryParameter('company_id', '');
                        $("pur7040_catelog_name_ds").query();
                    }
                } else if (name == 'company_full_name') {
                    catalog_company_name = record.get('company_full_name');
                    Aurora.setCookie('catalog_company_name', catalog_company_name);
                }
            }
            // 1级分类
            
            function loadCatalogLevelOne(record) {
                var name = record.data.catelog_name;
                var catid = record.data.catelog_udf_id;
                var TagLi, TagI, TagH5, div;
                div = window.document.createElement('div');
                div.className = 'menu-item';
                div.id = 'menu-item-' + catid;
                document.getElementById('menu-content').appendChild(div);
            
                TagLi = window.document.createElement('li');
                TagLi.className = 'nav-li';
                TagLi.id = catid;
                TagH5 = window.document.createElement('h5');
                TagH5.className = 'nav-li-h5';
                TagH5.innerHTML = name;
                TagI = window.document.createElement('i');
                TagI.className = 'fa fa-angle-right';
                TagLi.appendChild(TagH5);
                TagLi.appendChild(TagI);
            
                document.getElementById('catalog-submenu-ul').appendChild(TagLi);
            
            }
            // 2级分类
            
            function loadCatalogLevelTwo(record) {
                var parent = record.data.parent_catelog_udf_id;
                var catId = record.data.catelog_udf_id;
                var keyword_2 = record.data.catelog_name;
                var dl = window.document.createElement('dl');
                var div = document.getElementById('menu-item-' + parent);
                dl.className = 'shopping-item-dl';
                var dt = window.document.createElement('dt');
                dt.className = 'shopping-item-dt';
                dt.setAttribute('title', keyword_2);
                dt.id = catId;
                var dd = window.document.createElement('dd');
                dd.className = 'shopping-item-dd';
                dd.id = catId + '-dd';
                var da = window.document.createElement('a');
                da.className = 'shopping-item-dt-a';
                da.innerHTML = keyword_2;
                da.setAttribute('href', 'javascript:search(1,' + '"' + catId + '"' + ',' + '"' + keyword_2 + '"' + ')');
                var TagI = window.document.createElement('i');
                TagI.className = 'fa fa-angle-right';
                dt.appendChild(da);
                dt.appendChild(TagI);
                dl.appendChild(dt);
                dl.appendChild(dd);
                div.appendChild(dl);
            }
            // 3级分类
            
            function loadCatalogLevelThree(record) {
                var parent = record.data.parent_catelog_udf_id;
                var cat_id3 = record.data.catelog_udf_id;
                var dd_1 = document.getElementById(parent + '-dd');
            
                var keyword_3 = record.data.catelog_name;
            
                var TagAS = window.document.createElement('a');
                TagAS.className = 'shopping-item-a';
                TagAS.setAttribute('title', keyword_3);
                TagAS.innerHTML = keyword_3;
                TagAS.setAttribute('href', 'javascript:search(1,' + '"' + cat_id3 + '"' + ',' + '"' + keyword_3 + '"' + ')');
            
                // dd.appendChild(TagAS);
                if (dd_1) {
                    dd_1.appendChild(TagAS);
                }
            }
            
            function NavLiHover() {
                jQuery('.catalog-title').hover(function() {
                    jQuery('.catalog-submenu').css('display', 'block');
                }, function() {
                    jQuery('.catalog-submenu').css('display', 'none');
                });
                jQuery('.nav-li').hover(function() {
                    var index = jQuery(this).index();
                    jQuery(jQuery(this).children()[2]).removeClass('fa fa-angle-right');
                    show(index);
                }, function() {
                    hide();
                    jQuery(jQuery(this).children()[2]).addClass('fa fa-angle-right');
                });
            
                jQuery('.menu').hover(function() {
                    jQuery('.sub-menu').css('display', 'block');
                    //jQuery('.menu .fa-angle-up').css('transform', 'scale(1) rotate(180deg)');
                }, function() {
                    jQuery('.sub-menu').css('display', 'none');
                    //jQuery('.menu .fa-angle-up').css('transform', 'none');
                });
            
                jQuery('.sub-menu').hover(function() {
                    jQuery('.sub-menu').css('display', 'block');
                    //jQuery('.menu .fa-angle-up').css('transform', 'scale(1) rotate(180deg)');
                }, function() {
                    jQuery('.sub-menu').css('display', 'none');
                    //jQuery('.menu .fa-angle-up').css('transform', 'none');
                });
            
                jQuery('.menu-item').hover(function() {
                    jQuery('.menu-content').css('display', 'block');
                    jQuery('.sub-menu').css('display', 'block');
                    jQuery(this).css('display', 'block');
                    //jQuery('.menu .fa-angle-up').css('transform', 'scale(1) rotate(180deg)');
                }, function() {
                    jQuery('.menu-content').css('display', 'none');
                    jQuery('.sub-menu').css('display', 'none');
                    jQuery(this).css('display', 'none');
                    //jQuery('.menu .fa-angle-up').css('transform', 'none');
                });
            
                jQuery('.menu-content').hover(function() {
                    jQuery('.catalog-submenu').css('display', 'block');
                }, function() {
                    jQuery('.catalog-submenu').css('display', 'none');
                });
            }
            
            function show(index) {
                jQuery('.catalog-submenu').css('display', 'block');
                jQuery('.menu-item').css('display', 'none');
                jQuery('.menu-content').css('display', 'block');
                jQuery('.menu-item')[index].style.display = 'block';
            
            }
            
            function hide() {
                jQuery('.catalog-submenu').css('display', 'none');
                jQuery('.menu-item').css('display', 'none');
                jQuery('.menu-content').css('display', 'none');
            }
            
            function pur_shopping_cart_Load(ds) {
                var records = ds.getAll();
                var quantity = records[0] ? format_number(records[0].data.quantity, 2) : 0;
                var product_species = records[0] ? format_number(records[0].data.product_species, 2) : 0;
                var amount = records[0] ? format_number(records[0].data.amount, 2) : 0;
                document.getElementById('product-number').innerHTML = quantity;
                document.getElementById('price-number').innerHTML = amount;
            }
            
            function pur_shopping_cart_details_Load(ds) {
                var records = ds.getAll();
                jQuery('.shopping-cart-none').css('display', 'none');
                jQuery('.shopping-carts-title-div').css('display', 'block');
                jQuery('#total-div').css('display', 'block');
                jQuery('.price-div').css('display', 'block');
                for (var i = 0;i < records.length;i++) {
                    js_shopping_cart_details_li(records[i], i);
                }
            
                var next = jQuery('.shopping-carts-li').next();
                jQuery(next).find('.triangle').css('display', 'block');
            }
            
            function js_shopping_cart_details_li(record, index) {
                var item_id = record.data.item_id;
                var details_quantity = record.data.quantity;
                var price = record.data.price;
                var title = record.data.item_name;
                var image_url = record.data.image_url;
                var data_source = record.data.data_source;
                var item_category_id = record.data.item_category_id;
                var shopping_cart_id = parseInt(record.data.shopping_cart_id);
                var city_id = record.data.city_id;
                var county_id = record.data.county_id;
                var county_name = record.data.county_name;
                var vendor_id = record.data.vendor_id;
                var vendor_name = record.data.vendor_name;
                var address = record.data.address;
                var uom_desc = record.data.uom_desc;
                var div = document.getElementById('shopping-carts-content');
                //数据加载
                var ul = window.document.createElement('ul');
                ul.id = 'shopping-carts-' + shopping_cart_id;
                ul.setAttribute('data-pro', item_id);
                ul.className = 'shopping-carts-ul';
                var li = window.document.createElement('li');
                li.className = 'shopping-carts-li';
                //是否选中
                var checked_span = window.document.createElement('span');
                checked_span.className = 'checked-span';
                var checked_img = window.document.createElement('img');
                checked_img.className = 'checked-img';
                checked_img.src = '${/request/@context_path}/images/main/checked-non.png';
                checked_img.setAttribute('onclick', 'javascript:checked(this);');
                checked_img.setAttribute('click_times', '0');
                checked_span.appendChild(checked_img);
                //商品图片
                var span_total_products, span_product_logo, a_product_logo_a, img;
                img = window.document.createElement('img');
                img.setAttribute('onclick', 'javascript:open_product_details("item_id=' + item_id + '&data_source=' + data_source + '&item_category_id=' + item_category_id + '")');
                img.src = image_url;
                a_product_logo_a = window.document.createElement('a');
                a_product_logo_a.className = 'product-logo-a';
                a_product_logo_a.href = 'javascript:open_product_details("item_id=' + item_id + '&data_source=' + data_source + '&item_category_id=' + item_category_id + '")';
                span_product_logo = window.document.createElement('span');
                span_product_logo.className = 'product-logo';
                span_total_products = window.document.createElement('span');
                span_total_products.className = 'total-products';
                a_product_logo_a.appendChild(img);
                span_product_logo.appendChild(a_product_logo_a);
                span_total_products.appendChild(span_product_logo);
            
                //商品标题
                var span_shopping_cart_name, a_shopping_cart_a_name;
                span_shopping_cart_name = window.document.createElement('span');
                span_shopping_cart_name.className = 'shopping-cart-name';
                a_shopping_cart_a_name = window.document.createElement('a');
                a_shopping_cart_a_name.className = 'shopping-cart-a-name';
                a_shopping_cart_a_name.href = 'javascript:open_product_details("item_id=' + item_id + '&data_source=' + data_source + '&item_category_id=' + item_category_id + '")';
                a_shopping_cart_a_name.innerHTML = title;
                var vendor_name_span = window.document.createElement('span');
                vendor_name_span.className = 'vendor-name-span';
                vendor_name_span.innerHTML = '供应商：' + vendor_name;
                var address_span = window.document.createElement('span');
                address_span.className = 'address-span';
                address_span.innerHTML = '配送至：' + address;
            
                span_shopping_cart_name.appendChild(a_shopping_cart_a_name);
                span_shopping_cart_name.appendChild(vendor_name_span);
                span_shopping_cart_name.appendChild(address_span);
            
                //商品单价
                var product_price = window.document.createElement('span');
                product_price.className = 'price';
                product_price.innerHTML = format_number(price, 2);
            
            
                //商品数量
                var span_number, span_sub, input_numbers, span_plus;
                span_number = window.document.createElement('span');
                span_number.className = 'number';
                span_sub = '<span class="fl subtraction" onclick="javascript:numbers_sub(' + 'this' + ',' + shopping_cart_id + ',' + index + ',' + price + ',' + item_id + ');">' + '-' + '</span>';
                input_numbers = '<input type="text" class="fl numbers" id="numbers_' + index + '" value="' + details_quantity + '" />';
                span_plus = '<span class="fl plus" onclick="javascript:numbers_plus(' + 'this' + ',' + shopping_cart_id + ',' + index + ',' + price + ',' + item_id + ');">' + '+' + '</span>';
                span_number.innerHTML = span_sub + input_numbers + span_plus;
            
                //单位
                var uom = window.document.createElement('span');
                uom.className = 'uom';
                uom.innerHTML = uom_desc;
                //商品小计
                var product_total = window.document.createElement('span');
                product_total.className = 'product-total';
                product_total.innerHTML = '￥' + format_number(price * details_quantity, 2);
            
                //删除商品
                var span_delete, a_fl_remove, i_fa_remove;
                span_delete = window.document.createElement('span');
                span_delete.className = 'delete';
                a_fl_remove = window.document.createElement('a');
                a_fl_remove.className = 'fl remove';
                a_fl_remove.href = 'javascript:product_delete(' + shopping_cart_id + ');';
                i_fa_remove = window.document.createElement('i');
                i_fa_remove.className = 'fl fa fa-remove';
                a_fl_remove.appendChild(i_fa_remove);
                span_delete.appendChild(a_fl_remove);
            
                //将数据插入li标签中
                li.appendChild(checked_span);
                li.appendChild(span_total_products);
                li.appendChild(span_shopping_cart_name);
                li.appendChild(product_price);
                li.appendChild(span_number);
                li.appendChild(uom);
                li.appendChild(product_total);
                li.appendChild(span_delete);
            
                //商品列表
                ul.appendChild(li);
                div.appendChild(ul);
            
                jQuery('#numbers_' + index).change(function() {
                    var value = parseInt(jQuery('#numbers_' + index).val());
                    var prev_value = this.getAttribute('value');
            
                    if (!isNaN(value)) {
                        if (value < 1) {
                            value = 1;
                        } else {
                            if (value - prev_value > 0) {
                                quantity_change(this, shopping_cart_id, 'plus', value);
                            } else {
                                quantity_change(this, shopping_cart_id, 'sub', value);
                            }
                        }
                    }
                });
            }
            
            // 是否勾选
            
            function checked(_this) {
                var t = _this;
                var className = t.getAttribute('class');
                // 获取小计价格
                var single_price_a = jQuery(t).parent().parent()[0];
                var single_price_b = jQuery(single_price_a).find('.product-total')[0];
                var single_price_c = single_price_b.innerText;
                var am = single_price_c.replace('￥', '');
                var single_price_d = am.split(',');
                var total_number = parseFloat(single_price_d.join(''));
            
                if (className == 'checked-img') {
                    t.setAttribute('src', '${/request/@context_path}/images/main/checked-on.png');
                    document.getElementById('product-number').innerHTML = Number(document.getElementById('product-number').innerHTML) + 1;
                    var m = document.getElementById('price-number').innerText.replace('￥', '');
                    var n = m.split(',');
                    var price_total = n.join('');
                    document.getElementById('price-number').innerHTML = '￥' + format_number(Number(price_total) + (total_number), 2);
                    jQuery(t).addClass('checked');
                } else if (className == 'checked-img checked') {
                    t.setAttribute('src', '${/request/@context_path}/images/main/checked-non.png');
                    var mm = document.getElementById('price-number').innerText.replace('￥', '');
                    var nn = mm.split(',');
                    var price_totals = nn.join('');
                    jQuery(t).removeClass('checked');
                    document.getElementById('price-number').innerHTML = '￥' + format_number(Number(price_totals) - (total_number), 2);
                    document.getElementById('product-number').innerHTML = Number(document.getElementById('product-number').innerHTML) - 1;
                }
            
                var checked_length = document.getElementsByClassName('checked-img checked').length;
                var li_length = document.getElementsByClassName('shopping-carts-li').length - 1;
                if (checked_length == li_length) {
                    jQuery('.total-checked-img').addClass('checked');
                    jQuery('.total-checked-img').attr('src', '${/request/@context_path}/images/main/checked-on.png');
                } else {
                    jQuery('.total-checked-img').removeClass('checked');
                    jQuery('.total-checked-img').attr('src', '${/request/@context_path}/images/main/checked-non.png');
                }
            }
            
            function open_product_details(param) {
            
                Aurora.setCookie('reload_flag', 'Y');
                var url = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_catelog_purchase.screen?open_detail=Y&' + param;
                window.location.href = url;
            }
            
            //苏宁刷新价格
            
            function shopping_cart_reflash_price(city_id) {
                Aurora.Masker.mask(Ext.getBody());
                Aurora.request({
                    url: $('pur_reflash_sn_link').getUrl(),
                    para: {
                        'item_id': '${/parameter/@item_id}',
                        'city_id': city_id,
                        'api_code': 'SN_PRODPRICE'
                    },
                    success: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                        price = res.result.price;
                        $('pur_catlog_req_ds').getAt(0).set('price', price);
                        document.getElementById('gb-price').innerHTML = '￥' + format_number(price, 2);
                    },
                    failure: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    error: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            //保存到数据库
            
            function save_shopping_cart(shopping_cart_id, quantity) {
                Aurora.Masker.mask(Ext.getBody(), '...');
                Aurora.request({
                    url: $('pur_shopping_cart_update_link').getUrl(),
                    para: [{
                        'shopping_cart_id': shopping_cart_id,
                        'quantity': quantity,
                        '_status': 'update'
                    }],
                    success: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                        return 'Y';
                    },
                    failure: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                        return 'N';
                    },
                    error: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                        return 'N';
                    },
                    scope: this
                });
            }
            
            //数量更新失败
            
            function quantity_change_failed(shopping_cart_id, original_quantity) {
            
                //记录里的数据还原
                $('pur_shopping_cart_details_ds').find('shopping_cart_id', shopping_cart_id).set('quantity', original_quantity);
            
                document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('numbers')[0].value = original_quantity;
                document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.backgroundColor = '#fff';
                document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.cursor = 'pointer';
            }
            
            //数量更新
            
            function quantity_change(_this, shopping_cart_id, operation, quantity) {
            
                //记录里的数据先更新
                $('pur_shopping_cart_details_ds').find('shopping_cart_id', shopping_cart_id).set('quantity', quantity);
            
                var flag = save_shopping_cart(shopping_cart_id, quantity);
                if (flag == 'N') {
                    quantity_change_failed(shopping_cart_id, original_quantity)
                } else {
            
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('numbers')[0].value = quantity;
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.backgroundColor = '#fff';
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.cursor = 'pointer';
                    var price = $('pur_shopping_cart_details_ds').find('shopping_cart_id', shopping_cart_id).get('price');
                    var t_price = format_number(quantity * price, 2);
                    var className = _this.parentNode.parentNode.childNodes[0].childNodes[0].getAttribute('class');
            
                    // 单条商品的小计价格
                    var total_price_a = jQuery(_this).parent().parent()[0];
                    var total_price_b = jQuery(total_price_a).find('.product-total')[0];
                    var total_price_c = total_price_b.innerText;
                    var am = total_price_c.replace('￥', '');
                    var total_price_d = am.split(',');
                    var total_number = parseFloat(total_price_d.join(''));
            
                    // 单条商品的单价
                    var price_a = jQuery(total_price_a).find('.price')[0];
                    var price_b = price_a.innerText;
                    var price_c = price_b.split(',');
                    var this_price = parseFloat(price_c.join(''));
            
                    var this_number_a = jQuery(total_price_a).find('.number')[0];
                    var this_number_b = jQuery(this_number_a).find('.numbers')[0];
                    var number = parseFloat(this_number_b.value);
                    _this.setAttribute('value', number);
            
                    var this_total_price = number * this_price;
                    var this_total_price_span = jQuery(total_price_a).find('.product-total')[0];
                    this_total_price_span.innerHTML = '￥' + format_number(this_total_price, 2);
                    if (className == 'checked-img checked') {
                        var m = document.getElementById('price-number').innerText.replace('￥', '');
                        var n = m.split(',');
                        var price_total = n.join('');
                        if (operation == 'plus') {
                            document.getElementById('price-number').innerHTML = format_number(Number(price_total) + (this_price), 2);
                        } else {
                            document.getElementById('price-number').innerHTML = format_number(Number(price_total) - (this_price), 2);
                        }
                    }
                }
            }
            
            //苏宁刷新库存
            
            function shopping_cart_reflash_stock(_this, shopping_cart_id, item_id, city_id, county_id, operation, quantity, original_quantity) {
                Aurora.Masker.mask(Ext.getBody());
                Aurora.request({
                    url: $('pur_reflash_sn_link').getUrl(),
                    para: {
                        'item_id': item_id,
                        'city_id': city_id,
                        'county_id': county_id,
                        'quantity': quantity,
                        'api_code': 'SN_STOCK_PRECISE'
                    },
                    success: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                        var stage = res.result.state;
                        if (stage == '00') {
                            quantity_change(_this, shopping_cart_id, operation, quantity)
                        } else {
                            Aurora.showErrorMessage('${l:PROMPT}', '苏宁反馈：库存不足！');
                            quantity_change_failed(shopping_cart_id, original_quantity);
                        }
                    },
                    failure: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    error: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            
            //数量变更，校验库存
            
            function shopping_cart_quantity_change() {
            
                var quantity = parseInt(document.getElementById('shopping-number').value);
            
                if (isNaN(quantity)) {
                    quantity = 1;
                    document.getElementById('shopping-number').value = 1;
                }
            
                if (typeof(quantity) != 'number') {
                    quantity = 1;
                    document.getElementById('shopping-number').value = 1;
                }
            
                if (Aurora.isEmpty(quantity) || quantity == '' || quantity == null || quantity == 'undefined') {
                    quantity = 1;
                    document.getElementById('shopping-number').value = 1;
                }
            
                if (quantity < 1) {
                    quantity = 1;
                    document.getElementById('shopping-number').value = 1;
                }
            
                document.getElementById('shopping-number').value = quantity;
            
                if ('${/parameter/@data_source}' == 'SN') {
                    var record = $('pur_catlog_req_ds').getAt(0);
                    var city_id = record.get('city_id');
                    var county_id = record.get('county_id');
                    if (Aurora.isEmpty(county_id)) {
                        document.getElementById('stock-stage').innerHTML = '';
                    } else {
                        reflash_stock(city_id, county_id);
                    }
                }
            }
            
            function format_number(value, decimalprecision) {
                if (Ext.isEmpty(value)) return '';
                value = String(value).replace(/,/g, '');
                if (isNaN(value)) return '';
                if (decimalprecision || decimalprecision === 0) var point_value = value.split('.');
                var in_length = (point_value.length == 2) ? '.' + point_value[1] : '';
                if (in_length.length - 1 < decimalprecision) {
                    decimalprecision = in_length.length - 1
                };
                if (in_length.length == 0) {
                    decimalprecision = 0;
                }
                value = Number(value).toFixed(decimalprecision);
                var ps = value.split('.');
                var sub = (ps.length == 2) ? '.' + ps[1] : '';
                var whole = ps[0];
                var r = /(\d+)(\d{3})/;
                while (r.test(whole)) {
                    whole = whole.replace(r, '$1' + ',' + '$2');
                }
                Math.round();
                v = whole + sub;
                return v;
            }
            
            function product_delete(shopping_cart_id) {
            
                Aurora.request({
                    url: $('pur_shopping_cart_update_link').getUrl(),
                    para: [{
                        'shopping_cart_id': shopping_cart_id,
                        '_status': 'delete'
                    }],
                    success: function(res) {
                        jQuery('.shopping-carts-title-div').css('display', 'block');
                        jQuery('#total-div').css('display', 'block');
                        jQuery('.shopping-cart-none').css('display', 'none');
                        jQuery('.price-div').css('display', 'block');
                        jQuery('#shopping-carts-' + shopping_cart_id).remove();
                        var img = jQuery('.checked-img.checked').parent().parent().find('.product-total');
                        var length = jQuery('.checked-img.checked').length;
                        var prices = [],
                            price = [];
                        for (var i = 0;i < img.length;i++) {
                            prices[i] = img[i].innerText;
                            price[i] = prices[i].replace('￥', '').split(',').join('');
                        }
                        var total_price = array_add(price);
                        document.getElementById('product-number').innerHTML = length;
                        document.getElementById('price-number').innerHTML = '￥' + total_price;
                    },
                    failure: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    error: function() {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            function delete_selected() {
                var selected = document.getElementsByClassName('checked-img checked');
                var length = selected.length;
                if (length == 0) {
                    Aurora.showMessage('${l:PROMPT}', '未勾选任何商品!');
                } else {
                    Aurora.showConfirm('${l:PROMPT}', '确定要删除全部商品？', function() {
            
                        var li = [];
                        var datas = [];
                        for (var i = 0;i < length;i++) {
                            var data = {};
                            li[i] = selected[i].parentNode.parentNode.parentNode;
                            var shopping_cart_id = parseInt(li[i].getAttribute('id').split('-')[2]);
                            data = {
                                'shopping_cart_id': shopping_cart_id,
                                '_status': 'delete'
                            }
                            datas.push(data);
                        }
            
                        Aurora.Masker.mask(Ext.getBody());
                        Aurora.request({
                            url: $('pur_shopping_cart_update_link').getUrl(),
                            para: datas,
                            success: function(res) {
                                Aurora.Masker.unmask(Ext.getBody());
                                window.location.href = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_application_list.screen';
                            },
                            failure: function() {
                                Aurora.Masker.unmask(Ext.getBody());
                            },
                            error: function() {
                                Aurora.Masker.unmask(Ext.getBody());
                            },
                            scope: this
                        });
                    }, null, 200, 80);
                }
            }
            
            function numbers_plus(_this, shopping_cart_id, id, index, price, sku) {
                var original_quantity = parseInt(document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('numbers')[0].value);
                var quantity = original_quantity + 1;
            
                var record = $('pur_shopping_cart_details_ds').find('shopping_cart_id', shopping_cart_id);
                var data_source = record.get('data_source');
                var item_id = record.get('item_id');
                var city_id = record.get('city_id');
                var county_id = record.get('county_id');
            
                // 单条商品的小计价格
                var total_price_a = jQuery(_this).parent().parent()[0];
                var total_price_b = jQuery(total_price_a).find('.product-total')[0];
                var total_price_c = total_price_b.innerText;
                var am = total_price_c.replace('￥', '');
                var total_price_d = am.split(',');
                var total_number = parseFloat(total_price_d.join(''));
            
                var operation = 'plus';
                if (data_source == 'SN') {
                    shopping_cart_reflash_stock(_this, shopping_cart_id, item_id, city_id, county_id, operation, quantity, original_quantity);
                } else if (data_source == 'SRM') {
                    Aurora.request({
                        url: $('pur_shopping_cart_validate_no').getUrl(),
                        para: {
                            'item_id': item_id
                        },
                        success: function(res) {
                            var can_no = res.result.can_num;
                            var data_type = res.result.data_type;
                            if (data_type == 'KJXY') {
                                var no = can_no - quantity;
                                if (no < 0) {
                                    Aurora.showErrorMessage('${l:PROMPT}', '库存不足！');
                                    quantity_change_failed(shopping_cart_id, original_quantity);
                                } else {
                                    quantity_change(_this, shopping_cart_id, operation, quantity)
                                }
                            } else {
                                quantity_change(_this, shopping_cart_id, operation, quantity)
                            }
                        },
                        failure: function() {
                            null;
                        },
                        error: function() {
                            null
                        },
                    });
                } else {
                    quantity_change(_this, shopping_cart_id, operation, quantity)
                }
            }
            
            function numbers_sub(_this, shopping_cart_id, id, index, price, sku) {
                var original_quantity = parseInt(document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('numbers')[0].value);
                var record = $('pur_shopping_cart_details_ds').find('shopping_cart_id', shopping_cart_id);
                var quantity = original_quantity;
            
                var data_source = record.get('data_source');
                var item_id = record.get('item_id');
                var city_id = record.get('city_id');
                var county_id = record.get('county_id');
                var operation = 'sub';
                if (quantity > 1) {
                    quantity = quantity - 1;
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.cursor = 'pointer';
                    //苏宁的需要校验库存
                    if (data_source == 'SN') {
                        shopping_cart_reflash_stock(_this, shopping_cart_id, item_id, city_id, county_id, quantity, operation, original_quantity);
                    }
                    /* else if (data_source == 'SRM') {
                     Aurora.request({
                     url: $('pur_shopping_cart_validate_no').getUrl(),
                     para: {
                     'item_id': item_id
                     },
                     success: function(res) {
                     var can_no = res.result.can_num;
                     var data_type = res.result.data_type;
                     if (data_type == 'KJXY') {
                     var no = can_no - quantity;
                     if (no < 0) {
                     Aurora.showErrorMessage('${l:PROMPT}', '库存不足！');
                     quantity_change_failed(shopping_cart_id, original_quantity);
                     } else {
                     quantity_change(_this, shopping_cart_id, operation, quantity)
                     }
                     } else {
                     quantity_change(_this, shopping_cart_id, operation, quantity)
                     }
                     },
                     failure: function() {
                     null;
                     },
                     error: function() {
                     null
                     },
                     });
                     }  */
                    else {
                        quantity_change(_this, shopping_cart_id, operation, quantity)
                    }
                } else if (quantity <= 1) {
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.backgroundColor = '#ddd';
                    document.getElementById('shopping-carts-' + shopping_cart_id).getElementsByClassName('subtraction')[0].style.cursor = 'default';
                }
            }
            
            function checked_all(_this) {
                var t = _this;
                var className = t.getAttribute('class');
                var times = parseInt(t.getAttribute('click_times'));
                var next_times = times + 1;
                var price = [];
                var price_total = [];
                var n = [];
                var click_times = parseInt(t.getAttribute('click_times'));
                var click_times_next = click_times + 1;
                var total_price = jQuery('.shopping-carts-li .product-total');
                var length = total_price.length;
                var imgs = jQuery('.checked-span').find('img');
                for (var i = 1;i < total_price.length;i++) {
                    price[i - 1] = total_price[i].innerText.replace('￥', '');
                    n[i - 1] = price[i - 1].split(',');
                    price_total[i - 1] = n[i - 1].join('');
                }
                var price_total_all = array_add(price_total);
                if (className == 'total-checked-img') {
                    for (var imgs_length = 0;imgs_length < imgs.length;imgs_length++) {
                        imgs[imgs_length].src = '${/request/@context_path}/images/main/checked-on.png';
                    }
                    document.getElementById('product-number').innerHTML = format_number(length - 1, 2);
                    document.getElementById('price-number').innerHTML = '￥' + format_number(price_total_all, 2);
                    jQuery('.total-checked-img').addClass('checked');
                    jQuery('.checked-img').addClass('checked');
                } else if (className == 'total-checked-img checked') {
                    for (var imgs_length = 0;imgs_length < imgs.length;imgs_length++) {
                        imgs[imgs_length].src = '${/request/@context_path}/images/main/checked-non.png';
                    }
                    document.getElementById('product-number').innerHTML = 0;
                    document.getElementById('price-number').innerHTML = '￥0';
                    jQuery('.total-checked-img').removeClass('checked');
                    jQuery('.checked-img').removeClass('checked');
                }
                jQuery('.total-checked-img').attr('click_times', next_times);
            }
            
            function array_add(array) {
                var result = 0;
                var number = [];
                for (var j = 0;j < array.length;j++) {
                    number[j] = parseFloat(array[j]);
                    result += number[j];
                }
                return result;
            }
            
            // 将js对象转成url jquery实现
            var parseParam = function(paramObj, key) {
                    var paramStr = "";
                    if (paramObj instanceof String || paramObj instanceof Number || paramObj instanceof Boolean) {
                        paramStr += "&" + key + "=" + encodeURIComponent(paramObj);
                    } else {
                        jQuery.each(paramObj, function(i) {
                            var k = key == null ? i : key + (paramObj instanceof Array ? i : "." + i);
                            paramStr += '&' + parseParam(this, k);
                        });
                    }
                    return paramStr.substr(1);
                };
            
            /**
             * paramObj 将要转为URL参数字符串的对象
             * key URL参数字符串的前缀
             * encode true/false 是否进行URL编码,默认为true
             * js实现
             * return URL参数字符串
             */
            var urlEncode = function(paramObj, key, encode) {
                    if (paramObj == null) return '';
                    var paramStr = '';
                    var t = typeof(paramObj);
                    if (t == 'string' || t == 'number' || t == 'boolean') {
                        paramStr += '&' + key + '=' + ((encode == null || encode) ? encodeURIComponent(paramObj) : paramObj);
                    } else {
                        for (var i in paramObj) {
                            var k = key == null ? i : key + (paramObj instanceof Array ? '[' + i + ']' : '.' + i);
                            paramStr += urlEncode(paramObj[i], k, encode);
                        }
                    }
                    return paramStr;
                };
            
            
            function shopping_cart_submit() {
            
                var selected = document.getElementsByClassName('checked-img checked');
                var length = selected.length;
                if (length == 0) {
                    new Aurora.Window({
                        id: 'pur_generate_application_window',
                        url: $('pur_generate_application_link').getUrl(),
                        title: '采购申请预览',
                        fullScreen: true
                    }).on('beforeclose', function() {
                        window.location.href = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_application_list.screen';
                    });
                } else {
            
                    var li = [];
                    var ids = '';
                    for (var i = 0;i < length;i++) {
                        li[i] = selected[i].parentNode.parentNode.parentNode;
                        var shopping_cart_id = parseInt(li[i].getAttribute('id').split('-')[2]);
            
                        if (i == 0) {
                            ids = shopping_cart_id;
                        } else {
                            ids = ids + ',' + shopping_cart_id;
                        }
                    }
            
                    Aurora.Masker.mask(Ext.getBody());
                    Aurora.request({
                        url: $('pur_shopping_cart_update_link').getUrl(),
                        para: [{
                            'ids': ids,
                            'data_type': 'CATALOG',
                            '_status': 'execute'
                        }],
                        success: function(res) {
                            Aurora.Masker.unmask(Ext.getBody());
            
                            jQuery('.shopping-carts-title-div').css('display', 'block');
                            jQuery('#total-div').css('display', 'block');
                            jQuery('.shopping-cart-none').css('display', 'none');
                            jQuery('.price-div').css('display', 'block');
                            jQuery('#shopping-carts-' + shopping_cart_id).remove();
                            var img = jQuery('.checked-img.checked').parent().parent().find('.product-total');
                            var length = jQuery('.checked-img.checked').length;
                            var prices = [],
                                price = [];
                            for (var i = 0;i < img.length;i++) {
                                prices[i] = img[i].innerText;
                                price[i] = prices[i].replace('￥', '').split(',').join('');
                            }
                            var total_price = array_add(price);
                            document.getElementById('product-number').innerHTML = length;
                            document.getElementById('price-number').innerHTML = '￥' + total_price;
            
                            new Aurora.Window({
                                id: 'pur_generate_application_window',
                                url: $('pur_generate_application_link').getUrl(),
                                title: '采购申请预览',
                                fullScreen: true
                            }).on('beforeclose', function() {
                                window.location.href = '${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_application_list.screen';
                            });
                        },
                        failure: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                }
            }
            
            function css_box_shadow(data_pro) {
                jQuery('#shopping-carts-content').find('ul[data-pro="' + data_pro + '"]').css('box-shadow', '0 0 1px red');
            }
            
            function add_selected_data(element) {
                var selected_pro = {};
                var details_ids = [];
                shopping_cart_id = element.parentNode.parentNode.parentNode.getAttribute('data-pro');
                selected_pro.sku = details_ids;
                selected_pro.num = jQuery(element.parentNode.parentNode).find('span[class="number"]')[0].childNodes[1].getAttribute('value');
                var _price = [];
                _price = jQuery(element.parentNode.parentNode).find('span[class="price"]')[0].innerHTML.split(',').join('');
                selected_pro.price = _price;
            
                return selected_pro;
            }
        ]]></a:script>
        <a:dataSets>
            <a:dataSet id="pur7040_company_ds" autoQuery="true" model="public.fnd_companies_lov"/>
            <a:dataSet id="pur7040_catelog_name_ds" model="cux.NEWHOPE.PUR.PUR7040.pur_catelog_query">
                <a:fields>
                    <a:field name="catelog_udf_id" readOnly="true"/>
                    <a:field name="catelog_name" readOnly="true"/>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="on_pur7040_catelog_name_ds_load"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pur7040_company_query_ds" autoCreate="true">
                <a:fields>
                    <a:field name="company_full_name" displayField="company_full_name" options="pur7040_company_ds" readOnly="true" required="true" requiredMessage="请选择公司">
                        <a:mapping>
                            <a:map from="company_id" to="company_id"/>
                            <a:map from="company_full_name" to="company_full_name"/>
                        </a:mapping>
                    </a:field>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="on_pur7040_company_query_ds_add"/>
                    <a:event name="update" handler="on_pur7040_company_query_ds_update"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pur_shopping_cart_details_ds" autoQuery="true" fetchAll="true" model="cux.NEWHOPE.PUR.PUR7040.pur_item_catelog_application">
                <a:events>
                    <a:event name="load" handler="pur_shopping_cart_details_Load"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <Body id="body-4" class="show">
            <div class="content">
                <div class="head">
                    <div>
                        <div class="head-content">
                            <!-- <div class="fl logo">
                                <div class="fl logo-text"><![CDATA[购物车]]></div>
                            </div> -->
                            <div id="catalog-menu" class="fl catalog-menu">
                                <div class="catalog-title" onclick="search(1,-1)"><![CDATA[全部分类]]></div>
                                <a:comboBox name="company_full_name" bindTarget="pur7040_company_query_ds" prompt="公司" style="float:left;margin: 5px 0 0 40px;" width="200"/>
                                <div class="catalog-submenu">
                                    <ul id="catalog-submenu-ul" class="catalog-submenu-ul"/>
                                </div>
                            </div>
                            <div class="fr search">
                                <input id="search-text" class="fl search-text" placeholder="请输入搜索关键字" type="text"/>
                                <div class="fl search-btn" onclick="javascript:search();">
                                    <i class="fa fa-2x fa-search"/>
                                </div>
                            </div>
                            <div id="menu-content" class="menu-content"/>
                        </div>
                    </div>
                </div>
                <div id="shopping-carts-title-div" class="shopping-carts-title-div">
                    <div class="shopping-carts-li shopping-carts-title">
                        <span class="checked-span">
                            <img class="total-checked-img" click_times="0" onclick="javascript:checked_all(this)" src="${/request/@context_path}/images/main/checked-non.png"/>
                            <span class="checked-text"><![CDATA[全选]]></span>
                        </span>
                        <span class="shopping-cart-name"><![CDATA[商品名称]]></span>
                        <span class="price"><![CDATA[单价]]></span>
                        <span class="number"><![CDATA[数量]]></span>
                        <span class="uom"><![CDATA[单位]]></span>
                        <span class="product-total"><![CDATA[小计]]></span>
                        <span class="delete"><![CDATA[操作]]></span>
                    </div>
                </div>
                <div class="shopping-cart">
                    <div id="shopping-carts-content" class="shopping-carts-content">
                        <ul id="shopping-carts-ul">
                            <div class="shopping-cart-none">
                                <span class="cart-none-img">
                                    <img src="${/request/@context_path}/images/pur/no-product.jpg?v=1.1"/>
                                </span>
                                <span class="cart-none-text">
                                    <span class="cart-none-texts"><![CDATA[购物车中还没有商品,赶紧去选购吧]]></span>
                                    <a class="cart-none-text-a" href="${/request/@context_path}/modules/cux/NEWHOPE/PUR/PUR7040/pur_item_catelog_purchase.screen"><![CDATA[去逛逛]]></a>
                                </span>
                            </div>
                        </ul>
                    </div>
                    <div id="total-div" class="total">
                        <span class="total-div">
                            <span class="checked-span img-span">
                                <img class="total-checked-img" click_times="0" onclick="javascript:checked_all(this)" src="${/request/@context_path}/images/main/checked-non.png"/>
                                <span class="checked-text"><![CDATA[全选]]></span>
                            </span>
                            <span class="checked-span">
                                <a class="checked-text" href="javascript:delete_selected();"><![CDATA[删除选中的商品]]></a>
                            </span>
                        </span>
                        <span class="buy">
                            <a class="back go-price" href="javascript:shopping_cart_submit();">
                                <span class="back-text"><![CDATA[预生成采购申请]]></span>
                                <i class="fa fa-arrow-right"/>
                            </a>
                        </span>
                        <span class="price-div">
                            <span class="fr price-total">
                                <span class="fl product-text"><![CDATA[总计：]]></span>
                                <span id="price-number" class="fl price-number"><![CDATA[￥0]]></span>
                            </span>
                            <span class="fr product-total">
                                <span class="fl product-text"><![CDATA[已勾选]]></span>
                                <span id="product-number" class="fl price-number"><![CDATA[0]]></span>
                                <span class="product-text"><![CDATA[种商品]]></span>
                            </span>
                        </span>
                    </div>
                </div>
            </div>
            <div id="back"/>
            <script src="${/request/@context_path}/javascripts/jquery-3.1.0.min.js"/>
            <script><![CDATA[
                var jQuery = $.noConflict();
                
                jQuery("#search-text").focus(function() {
                    document.onkeydown = function(event) {
                        var e = event || window.event || arguments.callee.caller.arguments[0];
                        if (e && e.keyCode == 13) { // 按 回车键
                            search();
                        }
                    };
                });
                
                $("pur7040_catelog_name_ds").setQueryParameter('company_id', catalog_company_id);
                $("pur7040_catelog_name_ds").query();
            ]]></script>
        </Body>
    </a:view>
</a:screen>
