<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangcheng6595  
    $Date: 2014-11-25 20:19:46
    $Revision: 1.0  
    $Purpose: APP，登录后首页，待接收、待发货、待付款、待开票
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.bm部分需改为相应系统的逻辑，此处逻辑为hr系统，仅供参考
             *2.session、cookie部分不用修改，如果出现session、cookie方面的问题，可检查此处的session、cookie(如'/session/@session_id'是否有值)
             *3.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
                var result;
            
                // var parameter = $ctx.parameter;
                // parameter.user_language = 'ZHS';
                // parameter.user_name = '11598060';
                // parameter.user_password = '111111';
            
                // var bm_login = new ModelService('app.login.app_sys_user_login_with_userid');
                // bm_login.execute();
            
                var get_enable_amount_bm = new ModelService('app.main.app_get_enable_amount');
                var param = {
                    business_group: $session.business_group,
                    user_id: $session.user_id
                };
                var get_enable_amount_records = get_enable_amount_bm.queryAsMap(param).getChildren();
                var datasets = [];
                for (var i = 0;i < get_enable_amount_records.length;i++) {
	                var dataset = {};
                    dataset.enable_segment = get_enable_amount_records[i].enable_segment;
                    dataset.enable_amount = get_enable_amount_records[i].enable_amount;
                    datasets.push(dataset);
                }
                
                result = {
                    head: {
                        message: "请求成功",
                        code: 'ok'
                    },
                    body: datasets
                };
            
            } catch (e) {
                var serviceContext = Packages.aurora.service.ServiceContext.createServiceContext($ctx.getData());
                var ed = $instance('aurora.service.exception.IExceptionDescriptor');
                var map = new CompositeMap(ed.process(serviceContext, e.javaException));
                result = {
                    head: {
                        message: map.message,
                        code: 'failure'
                    },
                    body: {}
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
