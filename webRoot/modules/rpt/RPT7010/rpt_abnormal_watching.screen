<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: hansen  
    $Date: 2015-5-6 下午1:59:39  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:view>
        <a:link id="rpt7010_abnormal_set_link" url="${/request/@context_path}/modules/rpt/RPT7010/pur_po_rpt_set.svc"/>
        <script><![CDATA[
            var error_setting = {
                unit_price_error_from:100000,
                unit_price_error_to:null,
                line_amount_error_from:100000,
                line_amount_error_to:null
            };
            
            function rpt7010_abnormal_query() {
                $('rpt7010_abnormal_result_ds').query();
            }
            
            function rpt7010_abnormal_rsLoad() {
                var record = $('rpt7010_abnormal_query_ds').getAt(0);
                var data = record.data;
                error_setting.unit_price_error_from = data.unit_price_error_from;
                error_setting.unit_price_error_to = data.unit_price_error_to;
                error_setting.line_amount_error_from = data.line_amount_error_from;
                error_setting.line_amount_error_to = data.line_amount_error_to;
            }
            
            function initQuerySet() {
                var record = $('rpt7010_abnormal_query_ds').getAt(0);
                record.getField('unit_price_error_from').setReadOnly(true);
                record.getField('unit_price_error_to').setReadOnly(true);
                record.getField('line_amount_error_from').setReadOnly(true);
                record.getField('line_amount_error_to').setReadOnly(true);
            }
            
            function rpt7010_query_update(ds, record, name, value) {
                if (name == 'error_type_code') {
                    initQuerySet();
                    if (value == 'unit_price') {
                        record.getField('unit_price_error_from').setReadOnly(false);
                        record.getField('unit_price_error_to').setReadOnly(false);
                    } else if (value == 'line_amount') {
                        record.getField('line_amount_error_from').setReadOnly(false);
                        record.getField('line_amount_error_to').setReadOnly(false);
                    }
                }else if(name == 'unit_price_error_from' || name == 'unit_price_error_to'){
                    record.validate((name == 'unit_price_error_from')?'unit_price_error_to':'unit_price_error_from');
                }else if(name == 'line_amount_error_from' || name == 'line_amount_error_to'){
                    record.validate((name == 'line_amount_error_from')?'line_amount_error_to':'line_amount_error_from');
                }
            }
            
            function rpt7010_query_validate(record,name,value){
                var data = record.data;
                if(name == 'unit_price_error_from' || name == 'unit_price_error_to'){
                    if(data.unit_price_error_from > data.unit_price_error_to){
                        return '单价从不能大于单价至';
                    }else{
                        return true;
                    }
                }else if(name == 'line_amount_error_from' || name == 'line_amount_error_to'){
                    if(data.line_amount_error_from > data.line_amount_error_to){
                        return '行金额从不能大于行金额至';
                    }else{
                        return true;
                    }
                }
            }
            
            //行数量异常
            
            function rpt7010_abnormalGrid_render_line_quantity(value, record, name) {
                if (name == 'quantity') {
                    if (record.get('quantity') <= 0) {
                        return '<div style="background-color:green;color:#fff"><i onclick="rpt7010_abnormal_showError(' + 1 + ')" style="cursor:pointer;float:left;margin-top:0px" class="icon-exclamation-sign"></i>' + value + '</div>';
                    } else {
                        return value;
                    }
                }
            }
            //数量的异常用红色标注
            
            function rpt7010_abnormalGrid_render_quantity(value, record, name) {
                if (name == 'location_quantity' || name == 'asn_quantity') {
                    if (record.get('asn_quantity') > record.get('location_quantity') || (record.get('quantity') <= 0 && name == 'quantity')) {
                        return '<div style="background-color:red;color:#fff"><i onclick="rpt7010_abnormal_showError(' + 2 + ')" style="cursor:pointer;float:left;margin-top:0px" class="icon-exclamation-sign"></i>' + value + '</div>';
                    } else {
                        return value;
                    }
                }
            }
            //单价的异常用黄色标注
            
            function judgeUnitPriceError(value){
                var from_flag = true,to_flag = true;
                if(!Aurora.isEmpty(error_setting.unit_price_error_from)){
                    if(value < error_setting.unit_price_error_from){
                        from_flag = false;
                    }
                }
                if(!Aurora.isEmpty(error_setting.unit_price_error_to)){
                    if(value > error_setting.unit_price_error_to){
                        to_flag = false;
                    }
                }
                if(from_flag && to_flag){
                    return true;
                }else{
                    return false;
                }
            }
            
            function rpt7010_abnormalGrid_render_price(value, record, name) {
                if (name == 'unit_price') {
                    if (judgeUnitPriceError(value)) {
                        return '<div style="background-color:yellow"><i onclick="rpt7010_abnormal_showError(' + 3 + ')" style="cursor:pointer;float:left;margin-top:0px;color:#484b50" class="icon-exclamation-sign"></i>' + Aurora.formatMoney(value) + '</div>';
                    } else {
                        return Aurora.formatMoney(value);
                    }
                }
            }
            //总价的异常用蓝色
            function judgeLineAmountError(value){
                var from_flag = true,to_flag = true;
                if(!Aurora.isEmpty(error_setting.line_amount_error_from)){
                    if(value < error_setting.line_amount_error_from){
                        from_flag = false;
                    }
                }
                if(!Aurora.isEmpty(error_setting.line_amount_error_to)){
                    if(value > error_setting.line_amount_error_to){
                        to_flag = false;
                    }
                }
                if(from_flag && to_flag){
                    return true;
                }else{
                    return false;
                }
            }
            
            function rpt7010_abnormalGrid_render_amount(value, record, name) {
                if (name == 'amount') {
                    if (judgeLineAmountError(value)) {
                        return '<div style="background-color:blue;color:#fff"><i onclick="rpt7010_abnormal_showError(' + 4 + ')" style="cursor:pointer;float:left;margin-top:0px" class="icon-exclamation-sign"></i>' + Aurora.formatMoney(value) + '</div>';
                    } else {
                        return Aurora.formatMoney(value);
                    }
                }
            }
            
            function rpt7010_abnormalGrid_handle(value, record, name) {
                if (value == 'Y') {
                    return '<i class="icon-ok" style="color:red;font-size:18px"/>';
                } else {
                    return '';
                }
            }
            
            function rpt7010_abnormal_showError(type) {
                var message;
                switch (type) {
                case 1:
                    message = '行数量小于0';
                    break;
                case 2:
                    message = '发运行数量小于送货单行的发运数量';
                    break;
                case 3:
                    if(!Aurora.isEmpty(error_setting.unit_price_error_from)){
                        message = '单价大于' + error_setting.unit_price_error_from;
                    }
                    if(!Aurora.isEmpty(error_setting.unit_price_error_to)){
                        message += '且单价小于' + error_setting.unit_price_error_to;
                    }
                    break;
                case 4:
                    if(!Aurora.isEmpty(error_setting.line_amount_error_from)){
                        message = '总价大于' + error_setting.line_amount_error_from;
                    }
                    if(!Aurora.isEmpty(error_setting.line_amount_error_to)){
                        message += '且总价小于' + error_setting.line_amount_error_to;
                    }
                    break;
                default:
                    message = '未找到异常';
                }
                Aurora.showMessage('提示', message);
            }
            //判断是否可选，已处理的订单不可选
            
            
            function rpt7010_selectFunction(record) {
                if (record.get('line_abnormal_flag') == 'Y') {
                    return false;
                } else {
                    return true;
                }
            }
            
            //处理掉异常的订单（在报表里）
            
            function rpt7010_abnormalSet_toRpt() {
                Aurora.Masker.mask(Ext.getBody(), '..');
                var rs = $('rpt7010_abnormal_result_ds').getSelected();
                var data = [];
                if (rs.length > 0) {
                    for (var i = 0;i < rs.length;i++) {
                        data.push({
                            'pur_line_id': rs[i].get('pur_line_id')
                        });
                    }
                    Aurora.request({
                        url: $('rpt7010_abnormal_set_link').getUrl(),
                        para: data,
                        success: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                            Aurora.showMessage('提示', '操作成功');
                            $('rpt7010_abnormal_result_ds').query();
                        },
                        failure: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                } else {
                    Aurora.showMessage('提示', '至少选择一行数据');
                }
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="rpt7010_abnormal_type_ds">
                <a:datas>
                    <a:record name="显示行数量异常" error_type_code="line_quantity"/>
                    <a:record name="显示发运行数量异常" error_type_code="location_quantity"/>
                    <a:record name="显示单价异常" error_type_code="unit_price"/>
                    <a:record name="显示行金额异常" error_type_code="line_amount"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="rpt7010_abnormal_query_ds">
                <a:fields>
                    <a:field name="owner_business_group" autoComplete="true" autoCompleteField="business_group_code" lovHeight="500" lovService="public.fnd_business_group_lov" lovWidth="690" title="采购方">
                        <a:mapping>
                            <a:map from="business_group_id" to="owner_business_group_id"/>
                            <a:map from="business_group_code" to="owner_business_group_code"/>
                            <a:map from="business_group_name" to="owner_business_group"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="error_type" displayField="name" options="rpt7010_abnormal_type_ds" required="true" returnField="error_type_code" valueField="error_type_code"/>
                    <a:field name="erp_date_from"/>
                    <a:field name="erp_date_to"/>
                    <a:field name="line_abnormal_flag" checkedValue="Y" uncheckedValue="N"/>
                    <a:field name="line_quantity_error_from" readOnly="true"/>
                    <a:field name="line_quantity_error_to" defaultValue="0" readOnly="true"/>
                    <a:field name="unit_price_error_from" defaultValue="100000" readOnly="true" validator="rpt7010_query_validate"/>
                    <a:field name="unit_price_error_to" readOnly="true" validator="rpt7010_query_validate"/>
                    <a:field name="line_amount_error_from" defaultValue="1000000" readOnly="true" validator="rpt7010_query_validate"/>
                    <a:field name="line_amount_error_to" readOnly="true" validator="rpt7010_query_validate"/>
                    <a:field name="location_quantity" defaultValue="订单发运行数量小于送货单发运总数" readOnly="true"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="rpt7010_query_update"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="rpt7010_abnormal_result_ds" autoCount="true" autoPageSize="true" autoQuery="false" fetchAll="false" model="rpt.RPT7010.rpt_abnormal_watching" queryDataSet="rpt7010_abnormal_query_ds" selectFunction="rpt7010_selectFunction" selectable="true" sortType="local">
                <a:events>
                    <a:event name="load" handler="rpt7010_abnormal_rsLoad"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:toolbarButton click="rpt7010_abnormalSet_toRpt" style="margin-left:5px;" text="处理异常订单" width="100"/>
            </a:screenTopToolbar>
            <a:queryForm bindTarget="rpt7010_abnormal_query_ds" resultTarget="rpt7010_abnormal_result_ds" style="border:none">
                <a:formToolBar>
                    <a:hBox labelWidth="100">
                        <a:lov name="owner_business_group" bindTarget="rpt7010_abnormal_query_ds" prompt="采购方" width="120">
                            <a:events>
                                <a:event name="enterdown" handler="rpt7010_abnormal_query"/>
                            </a:events>
                        </a:lov>
                        <a:comboBox name="error_type" bindTarget="rpt7010_abnormal_query_ds" prompt="异常类型" width="120"/>
                        <a:datePicker name="erp_date_from" bindTarget="rpt7010_abnormal_query_ds" prompt="时间从" width="100">
                            <a:events>
                                <a:event name="enterdown" handler="rpt7010_abnormal_query"/>
                            </a:events>
                        </a:datePicker>
                        <a:datePicker name="erp_date_to" bindTarget="rpt7010_abnormal_query_ds" prompt="时间至" width="100">
                            <a:events>
                                <a:event name="enterdown" handler="rpt7010_abnormal_query"/>
                            </a:events>
                        </a:datePicker>
                        <a:checkBox name="line_abnormal_flag" bindTarget="rpt7010_abnormal_query_ds" prompt="过滤已处理" width="100">
                            <a:events>
                                <a:event name="enterdown" handler="rpt7010_abnormal_query"/>
                            </a:events>
                        </a:checkBox>
                    </a:hBox>
                </a:formToolBar>
                <a:formBody>
                    <a:hBox labelWidth="100">
                        <a:numberField name="line_quantity_error_from" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行数量从"/>
                        <a:numberField name="line_quantity_error_to" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行行量至"/>
                        <a:numberField name="unit_price_error_from" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行单价从"/>
                        <a:numberField name="unit_price_error_to" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行单价至"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:numberField name="line_amount_error_from" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行金额从"/>
                        <a:numberField name="line_amount_error_to" bindTarget="rpt7010_abnormal_query_ds" prompt="监控行金额至"/>
                        <a:textField name="location_quantity" bindTarget="rpt7010_abnormal_query_ds" prompt="监控发运行数量" width="408"/>
                    </a:hBox>
                </a:formBody>
            </a:queryForm>
            <!-- <a:form marginWidth="100" >
                <div style="float:left;width:25%">
                    <div style="float:left;width:50%">行金额异常</div>
                    <div style="float:left;width:50%;background-color:green"></div>
                </div>
            </a:form> -->
            <a:grid id="rpt7010_abnormal_grid" bindTarget="rpt7010_abnormal_result_ds" marginHeight="200" marginWidth="80" navBar="true">
                <a:columns>
                    <a:column name="owner_bg_name" align="left" prompt="采购方" width="100"/>
                    <a:column name="display_po_number" align="left" prompt="订单号" width="80"/>
                    <a:column name="line_num" align="right" prompt="行号" width="40"/>
                    <a:column name="shipment_num" align="right" prompt="发运号" width="40"/>
                    <a:column name="quantity" align="right" prompt="行数量" renderer="rpt7010_abnormalGrid_render_line_quantity" sortable="true" width="60"/>
                    <a:column name="location_quantity" align="right" prompt="发运行数量" renderer="rpt7010_abnormalGrid_render_quantity" sortable="true" width="60"/>
                    <a:column name="asn_quantity" align="right" prompt="发运数量" renderer="rpt7010_abnormalGrid_render_quantity" sortable="true" width="60"/>
                    <a:column name="unit_price" align="right" prompt="行单价" renderer="rpt7010_abnormalGrid_render_price" sortable="true" width="80"/>
                    <a:column name="amount" align="right" prompt="行金额" renderer="rpt7010_abnormalGrid_render_amount" sortable="true" width="100"/>
                    <a:column name="erp_creation_date" align="left" prompt="时间" sortable="true" width="100"/>
                    <a:column name="line_abnormal_flag" align="center" prompt="处理标志" renderer="rpt7010_abnormalGrid_handle" width="40"/>
                </a:columns>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
