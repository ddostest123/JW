<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lianghuihao  
    $Date: 2018年11月1日20:32:06  
    $Revision: 1.0  
    $Purpose: 
-->
<a:service xmlns:t="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <p:echo/>
        <a:model-query fetchAll="true" model="pur.PUR9050.pur9050_vendor_modify_detail" rootPath="detail"/>
        <a:model-query fetchAll="true" model="pur.PUR9050.pur9050_vendor_modify_account" rootPath="account"/>
        <a:model-query fetchAll="true" model="pur.PUR9050.pur9050_vendor_modify_address" rootPath="address"/>
        <a:model-query fetchAll="true" model="pur.PUR9050.pur9050_vendor_modify_supply_temp" rootPath="supply"/>
        <a:model-query fetchAll="true" model="pur.PUR5240.pur_rfx_geturl_to_oa" rootPath="url"/>
        <a:model-query fetchAll="true" model="pur.PUR9050.pur9050_get_tcode_to_oa" rootPath="tcode"/>
        <a:rest-invoker acceptLanguage="zh-CN,zh;q=0.8" cacheControl="no-cache" contentType="application/json;charset=UTF-8" raiseExceptionOnError="true" requestMethod="GET" returnPath="/soapResponse/USER" url="${/model/url/record/@get_user_url}"/>
        <a:model-execute model="pur.PUR9050.pur9010_vendor_modify_query"/>
        <p:set field="/parameter/@userName" sourceField="/soapResponse/USER/@userName"/>
        <s:server-script><![CDATA[
            var logger = $logger('server-script');
            
            function log(msg) {
                logger.info(msg);
            }
            var para = $ctx.parameter;
            log($ctx.model.getChild('detail').toXML);
            var dataList = $ctx.model.getChild('detail').getChildren();
            var data = [];
            
            // for (var i = 0;i < dataList.length;i++) {
            // data[dataList[i].vendor_desc] = [];
            // }
            // for (var i = 0;i < dataList.length;i++) {
            // data[dataList[i].vendor_desc].push(dataList[i]);
            // }
            for (var i = 0;i < dataList.length;i++) {
                data.push(dataList[i]);
            }
            var tableListAll = new CompositeMap('tableListAll');
            var record = new CompositeMap('record');
            var tableList = new CompositeMap('TableList');
            var loginName = new CompositeMap('loginName');
            loginName.setText(para.userName);
            var tCode = new CompositeMap('tCode');
            var tcodeValue = $ctx.model.getChild('tcode').getChild('record').quote_code;
            tCode.setText(tcodeValue);
            var title = new CompositeMap('title');
            title.setText('供应商信息变更申请表');
            tableList.addChild(loginName);
            tableList.addChild(tCode);
            tableList.addChild(title);
            var table1 = new CompositeMap('Table');
            table1['isson'] = '1';
            tableList.addChild(table1);
            var nameList = {
                "申请表编号": data[0].modify_num,
                "供应商名称": data[0].old_vendor_desc,
                "供应商代码": data[0].vendor_code,
                "供应物料": data[0].main_category,
                "供应商信息变更原因综述": data[0].modify_reason,
                "适用PCB": data[0].kw_pcb,
                "适用FPC": data[0].kw_fpc,
                "适用MPCB": data[0].kw_mpcb,
                "供应商类型": data[0].vendor_type,
                "供应商账期变更类型": data[0].account_period_valid,
                "是否包含供应商账期变更": data[0].account_period_oa,
                "供应商银行信息是否变更": data[0].account_ds_oa
            }
            for (var tempName in nameList) {
                var field = new CompositeMap('Field');
                field.name = tempName;
                if (nameList[tempName]) {
                    field.value = nameList[tempName];
                } else {
                    field.value = '';
                }
                table1.addChild(field);
            }
            var table2 = new CompositeMap('Table');
            table2['isson'] = '2';
            tableList.addChild(table2);
            var accountList = $ctx.model.getChild('account').getChildren();
            var account = [];
            for (var i = 0;i < accountList.length;i++) {
                account.push(accountList[i]);
            }
            var row = [];
            for (var i = 0;i < account.length;i++) {
                row.push(new CompositeMap('row'));
                table2.addChild(row[i]);
                var temp_i = i + 1;
                var nameList1 = {
                    "账户币别": account[i].trade_currency_code,
                    "结算方式": account[i].c_attribute2,
                    "银行名称": account[i].bank_branch_name,
                    "银行账户": account[i].bank_account_number,
                    "CNAPS号": account[i].c_attribute1
                }
                for (var tempName in nameList1) {
                    var field = new CompositeMap('Field');
                    field.name = tempName;
                    if (nameList1[tempName]) {
                        field.value = nameList1[tempName];
                    } else {
                        field.value = '';
                    }
                    row[i].addChild(field);
                }
            }
            var table3 = new CompositeMap('Table');
            table3['isson'] = '3';
            tableList.addChild(table3);
            var modify_data = {};
            if (data[0].vendor_desc_flag == 'Y') {
                modify_data['供应商名称变更'] = {};
                modify_data['供应商名称变更']['变更项目'] = '610696837091115033';
                modify_data['供应商名称变更']['变更前'] = data[0].old_vendor_desc;
                modify_data['供应商名称变更']['变更后'] = data[0].new_vendor_desc;
            }
            if (data[0].tax_type_flag == 'Y') {
                modify_data['供应商税率变更'] = {};
                modify_data['供应商税率变更']['变更项目'] = '464331931070578861';
                modify_data['供应商税率变更']['变更前'] = data[0].old_tax_type_id;
                modify_data['供应商税率变更']['变更后'] = data[0].new_tax_type_id;
            }
            if (data[0].account_period_flag == 'Y') {
                modify_data['供应商账期变更'] = {};
                modify_data['供应商账期变更']['变更项目'] = '-5240330253863468673';
                modify_data['供应商账期变更']['变更前'] = data[0].old_account_period;
                modify_data['供应商账期变更']['变更后'] = data[0].new_account_period;
            }
            if (data[0].currency_code_flag == 'Y') {
                modify_data['供应商币种变更'] = {};
                modify_data['供应商币种变更']['变更项目'] = '2959130556008907068';
                modify_data['供应商币种变更']['变更前'] = data[0].old_currency_code;
                modify_data['供应商币种变更']['变更后'] = data[0].new_currency_code;
            }
            if (data[0].payment_method_flag == 'Y') {
                modify_data['供应商付款方式变更'] = {};
                modify_data['供应商付款方式变更']['变更项目'] = '2959130556008907068';
                modify_data['供应商付款方式变更']['变更前'] = data[0].old_payment_method;
                modify_data['供应商付款方式变更']['变更后'] = data[0].new_payment_method;
            }
            var row = [];
            var temp_i = 0;
            for (var modifyName in modify_data) {
                row.push(new CompositeMap('row'));
                table3.addChild(row[temp_i]);
                var modify = modify_data[modifyName];
                log(modify.length);
                log(modify_data[modifyName]);
                for (var tempName in modify) {
                    var field = new CompositeMap('Field');
                    field.name = tempName;
                    if (modify[tempName]) {
                        field.value = modify[tempName];
                    } else {
                        field.value = '';
                    }
                    row[temp_i].addChild(field);
                }
                temp_i += 1;
            }
            
            var supplyList = $ctx.model.getChild('supply').getChildren();
            if (supplyList.length > 0) {
                var supply = [];
                for (var i = 0;i < supplyList.length;i++) {
                    supply.push(supplyList[i]);
                }
                var row = [];
                for (var i = 0;i < supply.length;i++) {
                    row.push(new CompositeMap('row'));
                    table3.addChild(row[i]);
                    var nameListSupply = {
                        '变更项目': '2959130556008907068',
                        '变更前': '',
                        '变更后': supply[i].new_category_name
                    }
                    for (var tempName in nameListSupply) {
                        var field = new CompositeMap('Field');
                        field.name = tempName;
                        if (nameListSupply[tempName]) {
                            field.value = nameListSupply[tempName];
                        } else {
                            field.value = '';
                        }
                        row[i].addChild(field);
                    }
                }
            }
            
            if (data[0].address_ds_flag == 'Y') {
                var addressList = $ctx.model.getChild('address').getChildren();
                var address = [];
                for (var i = 0;i < addressList.length;i++) {
                    address.push(addressList[i]);
                }
                var row = [];
                for (var i = 0;i < address.length;i++) {
                    row.push(new CompositeMap('row'));
                    table3.addChild(row[i]);
                    var nameList2 = {
                        '变更项目': '1438302128530211309',
                        '变更前': address[i].old_address_detail,
                        '变更后': address[i].new_address_detail
                    }
                    for (var tempName in nameList2) {
                        var field = new CompositeMap('Field');
                        field.name = tempName;
                        if (nameList2[tempName]) {
                            field.value = nameList2[tempName];
                        } else {
                            field.value = '';
                        }
                        row[i].addChild(field);
                    }
                }
            }
            record.setText(tableList.toXML());
            log(tableList.toXML());
            tableListAll.addChild(record);
            var url = $ctx.model.getChild('url').getChild('record').post_url + '&key=BD2B0CCCBC954FA6';
            try {
                var is = Packages.com.hand.jw_webservice.HttpUtils.urlPost(url, tableList.toXML(), 'text/xml;charset=utf8', "POST", "UTF-8", "", "");
                var ret = Packages.com.hand.jw_webservice.IOUtilsEx.newString(is, "UTF-8");
                log(ret);
                ret = JSON.parse(ret);
                if (ret.status == 'S') {
                    $ctx.put('/soapResponse/RESPONSE/@status', ret.status);
                } else if (ret.status == 'E') {
                    $ctx.put('/soapResponse/RESPONSE/@status', ret.status);
                    $ctx.put('/soapResponse/RESPONSE/@message', ret.message);
                }
            } catch (e) {
                log(e)
            }
        ]]></s:server-script>
        <p:echo/>
        <t:test field="/soapResponse/RESPONSE/@status" message="${/soapResponse/RESPONSE/@message}" operator="!=" value="S"/>
    </a:init-procedure>
</a:service>
