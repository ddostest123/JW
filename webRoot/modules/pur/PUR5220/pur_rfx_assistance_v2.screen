<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: hansen  
    $Date: 2015-9-24 下午1:23:48  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view>
        <script src="${/request/@context_path}/index/js/echarts-all.js" type="text/javascript"/>
        <link href="${/request/@context_path}/index/css/rfx_assistance.css?v=1.2" rel="stylesheet" type="text/css"/>
        <script language="JavaScript" src="${/request/@context_path}/index/js/jquery-1.8.3.min.js"/>
        <script><![CDATA[jQuery.noConflict();]]></script>
        <link href="${/request/@context_path}/component/Font-Awesome-3.2.1/css/font-awesome.min.css?v=2.13" rel="stylesheet" type="text/css"/>
        <link href="${/request/@context_path}/component/Font-Awesome-3.2.1/css/font-awesome-ie7.min.css" rel="stylesheet" type="text/css"/>
        <script><![CDATA[
            //全局变量
            var g_eChart = {}; //echart 初始化的配置数组
            
            function getId(id) {
                return document.getElementById(id);
            }
            //页面初始化
            
            function pur5220_assistance_init() {
                Aurora.Masker.mask($('pur5220_rfx_assistance_window').wrap, '请等待...');
                init_tabUl();
                //init_echart();
            }
            
            //截取字符串
            
            function getStr(str, length) {
                if (Aurora.isEmpty(str)) {
                    return '';
                }
                var substr;
                var word_sum = 0;
                var len = 0;
                var str_length = str.length;
                if (str_length * 2 <= length) {
                    return str;
                }
                //判断中文字符所占的空间大小
                for (var i = 0;i < str.length;i++) {
                    //中文字符
                    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) == 94) {
                        len += 2;
                        word_sum++;
                    } else {
                        //英文字符
                        len++;
                        word_sum++;
                    }
                    if (len > length) {
                        return str.substr(0, word_sum) + '...';
                    } else if (len == length) {
                        return str.substr(0, word_sum);
                    }
                }
                return str;
            }
            
            function judgeNullBack(value, back) {
                if (Aurora.isEmpty(value)) {
                    return back;
                }
                return value;
            }
            //item的load事件
            
            function pur5220_as_item_load() {
                var records = $('pur5220_rfx_as_item_ds').getAll();
                var data = [];
                var _d = [];
                var _v = [];
                for (var i = 0;i < records.length;i++) {
                    data.push({
                        text: records[i].get('item_desc'),
                        code: (Aurora.isEmpty(records[i].get('item_code'))) ? '' : records[i].get('item_code'),
                        item_line_id: records[i].get('rfx_line_item_id')
                    });
                    var item_name = records[i].get('item_desc') + records[i].get('rfx_line_item_id');
                    _d.push(item_name);
                    _v.push({
                        name: item_name,
                        value: records[i].get('quantity')
                    });
                }
                g_eChart['item_name'] = data;
                g_eChart['item'] = _d;
                g_eChart['item_value'] = _v;
                //查询询报价信息
                var ds = $('pur5220_rfx_as_bargain_ds');
                ds.setQueryParameter('version', records[0].get('version'));
                ds.query();
            
                $('pur5220_rfx_history_ds').query();
                $('pur5220_pur_history_ds').query();
            }
            
            //vendor的load事件
            
            function pur5220_as_vendor_load() {
                var records = $('pur5220_rfx_as_vendors_ds').getAll();
                var _d = [];
                for (var i = 0;i < records.length;i++) {
                    _d.push(records[i].get('vendor_desc'));
                }
                g_eChart['vendor'] = _d;
            }
            
            //供应商报价的load事件
            
            function pur5220_as_vendorBargain_load() {
                var records = $('pur5220_rfx_as_bargain_ds').getAll();
                var data = [];
                var value = [];
                var v_name = [];
                var set_value = [];
                var vs; //对应物料下的最低供应商报价
                var max = 999999999;
                for (var i = 0;i < g_eChart.item_name.length;i++) {
                    vs = max;
                    for (var j = 0;j < records.length;j++) {
                        if (records[j].get('rfx_line_item_id') == g_eChart.item_name[i].item_line_id) {
                            var p = Aurora.isEmpty(records[j].get('valid_fb_retail_price')) ? 0 : parseInt(records[j].get('valid_fb_retail_price'));
                            v_name.push(records[j].get('vendor_desc'));
                            value.push(p);
                            set_value.push({
                                xAxis: set_value.length,
                                y: p,
                                name: records[j].get('vendor_desc'),
                                symbolSize: 0
                            });
                            //判断此物料下的供应商最低报价
                            if (p < vs) {
                                vs = p;
                            }
                        }
                    }
                    if (value.length > 0) {
                        data.push({
                            value: value,
                            name: g_eChart.item_name[i].text,
                            v_name: v_name,
                            set_value: set_value
                        });
                    }
                    if (vs == max) {
                        vs = 1;
                    }
                    //将此物料下的最低供应商报价乘以物料数量重写如g_eChart['item_value']
                    var v = g_eChart['item_value'][i].value;
                    g_eChart['item_value'][i].value = v * vs;
                    //同一物料下，更具供应商报价从低到高排序
                    //pur5220_iV_sort(data[data.length - 1]);
                    //置空
                    value = [];
                    v_name = [];
                    set_value = [];
                }
                g_eChart['series'] = data;
                //将供应商按照报价从低到高排序
                pur5220_vendor_sort('down');
                //初始化表格
                pur5220_intiTable();
                //初始化echart报表
                init_echart();
                //初始化历史版本报价
                init_version();
                //解频
                Aurora.Masker.unmask($('pur5220_rfx_assistance_window').wrap);
            }
            //将供应商按照报总价从低到高排序
            
            function pur5220_vendor_sort(type) {
                var v = g_eChart['vendor'];
                var s = [];
                var _v = [];
                var c;
                var n;
                var max = 9999999999;
                var min = -9999999999;
                for (var i = 0;i < v.length;i++) {
                    s.push(parseInt(pur5220_getTotalPrice(v[i])));
                }
                for (i = 0;i < v.length;i++) {
                    c = s[i];
                    n = i;
                    for (var j = 0;j < v.length;j++) {
                        if ((s[j] < c && type == 'down') || (s[j] > c && type == 'up')) {
                            c = s[j];
                            n = j;
                        }
                    }
                    _v.push(v[n]);
                    s[n] = (type == 'down') ? max : min;
                }
                g_eChart['vendor'] = _v;
            }
            //渲染table
            
            function pur5220_intiTable() {
                var table = getId('pur5220_assistanceV2_table');
                var html = '';
                table.innerHTML = html;
                //渲染头部标题
                pur5220_intiTT(table);
                //渲染表格数据
                pur5220_initTC(table);
                //渲染表格脚
                pur5220_initTF(table);
            }
            //渲染table的头部
            
            function pur5220_intiTT(table) {
                var tr = table.insertRow(table.rows.length);
                tr.className = 'title';
                var html = '<tr class="title"><td width="149px">#</td>';
                for (var i = 0;i < g_eChart.vendor.length;i++) {
                    html += '<td>' + g_eChart.vendor[i] + '</td>';
                }
                //html += '<td>成本结构</td></tr>';
                tr.innerHTML += html;
            }
            //渲染table内部的数据
            
            function pur5220_initTC(table) {
                var html = '';
                var tr;
                var p;
                var value = [];
                var index;
                for (var i = 0;i < g_eChart.item_name.length;i++) {
                    tr = table.insertRow(table.rows.length);
                    html = '<td class="item" line_id="' + g_eChart.item_name[i].item_line_id　 + '"><div class="name">' + g_eChart.item_name[i].code + '</div><div class="direction"><i onclick="dynamic_sorting_up(this)" class="icon-angle-up up"></i><i onclick="dynamic_sorting_down(this)" class="icon-angle-down down"></i></div><div class="name">' + g_eChart.item_name[i].text + '</div></td>';
                    for (var j = 0;j < g_eChart.vendor.length;j++) {
                        p = pur5220_getItemPrice(g_eChart.item_name[i].item_line_id, g_eChart.vendor[j]);
                        if (p==-1) {
                            html += '<td status="1" class="grey">放弃</td>';
                            value.push(-1);
                        } else if (isNaN(p)) {
                            html += '<td status="0">' + p + '</td>';
                            value.push(-1);
                        } else {
                            html += '<td status="2">' + p + '</td>';
                            value.push(p);
                        }
                        //value.push((Aurora.isEmpty(p)) ? 0 : parseInt(p));
                    }
                    tr.innerHTML = html;
                    //找到最高和最低的价格
                    index = get_HighOrLow(value, 1);
                    if (index != -1) {
                        tr.children[index + 1].className = 'red';
                    }
                    index = get_HighOrLow(value, 2);
                    if (index != -1) {
                        tr.children[index + 1].className = 'green';
                    }
                    value = [];
                }
            }
            //动态排序-升序
            
            function dynamic_sorting_up(_this) {
                var p = _this.parentNode.parentNode;
                var line_id = p.getAttribute('line_id');
                if (line_id == '-1') {
                    pur5220_vendor_sort('up');
                } else {
                    vender_sorting_by_item(line_id, 'up');
                }
                pur5220_intiTable();
            }
            //动态排序-降序
            
            function dynamic_sorting_down(_this) {
                var p = _this.parentNode.parentNode;
                var line_id = p.getAttribute('line_id');
                if (line_id == '-1') {
                    pur5220_vendor_sort('down');
                } else {
                    vender_sorting_by_item(line_id, 'down');
                }
                pur5220_intiTable();
            }
            //将供应商按照指定物料，指定顺序进行排序
            
            function vender_sorting_by_item(item_line_id, type) {
                var _v = [];
                var p = [];
                var index;
                var max = 9999999999;
                var min = -9999999999;
                for (var i = 0;i < g_eChart.vendor.length;i++) {
                    var t = pur5220_getItemPrice(item_line_id, g_eChart.vendor[i]);
                    p.push((!isNaN(t)) ? t : 0);
                }
                for (i = 0;i < p.length;i++) {
                    s = p[i];
                    index = i;
                    for (var j = 0;j < p.length;j++) {
                        if (((s < p[j] && type == 'up') || (s > p[j] && type == 'down')) && p[j] > 0) {
                            s = p[j];
                            index = j;
                        }
                    }
                    p[index] = (type == 'up') ? min : max;
                    _v.push(g_eChart.vendor[index]);
                }
                g_eChart.vendor = _v;
            }
            //渲染表格脚
            
            function pur5220_initTF(table) {
                var tr = table.insertRow(table.rows.length);
                var html = '<td class="item" line_id="-1"><div class="name">合计</div><div class="direction"><i onclick="dynamic_sorting_up(this)" class="icon-angle-up up"></i><i onclick="dynamic_sorting_down(this)" class="icon-angle-down down"></i></div><div class="name">(单价*需求数量)</div></td>';
                var sum;
                var value = [];
                var index;
                for (var i = 0;i < g_eChart.vendor.length;i++) {
                    sum = pur5220_getTotalPrice(g_eChart.vendor[i]);
                    html += '<td>' + sum + '</td>';
                    value.push((sum == 0) ? -1 : parseInt(sum));
                }
                tr.innerHTML = html;
                //找到最高和最低的价格
                index = get_HighOrLow(value, 1);
                if (index > 0) {
                    tr.children[index + 1].className = 'red';
                }
                index = get_HighOrLow(value, 2);
                if (index > 0) {
                    tr.children[index + 1].className = 'green';
                }
                value = [];
            }
            //寻找item对应的vendor的报价
            
            function pur5220_getItemPrice(item, vendor) {
                var records = $('pur5220_rfx_as_bargain_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.rfx_line_item_id == item && data.vendor_desc == vendor) {
                        return Aurora.isEmpty(data.valid_fb_retail_price) ? -1 : data.valid_fb_retail_price;
                    }
                }
                return '';
            }
            //寻找供应商的所有物料总价
            
            function pur5220_getTotalPrice(vendor) {
                var records = $('pur5220_rfx_as_bargain_ds').getAll();
                var sum = 0;
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.vendor_desc == vendor) {
                        sum += parseInt(Aurora.isEmpty(data.valid_fb_retail_price) ? 0 : data.valid_fb_retail_price * data.quantity);
                    }
                }
                return (sum == 0) ? '' : sum;
            }
            //寻找最高价格或最低价格
            
            function get_HighOrLow(array, type) {
                var amount;
                var index;
                if (array.length < 1) {
                    return;
                }
                //取到第一个是数字的值
                for (var a = 0;a < array.length;a++) {
                    if (array[a] >= 0) {
                        amount = array[a];
                        index = a;
                        break;
                    }
                }
                //找不到数据即为(全是无效数据，直接退出)
                if (Aurora.isEmpty(amount)) {
                    return -1;
                }
                for (var i = 1;i < array.length;i++) {
                    if (array[i] >= 0 && ((type == 1 && array[i] > amount) || (type == 2 && array[i] < amount))) {
                        amount = array[i];
                        index = i;
                    }
                }
                return index;
            }
            //页面向切换-右
            
            /* function pur5220_turn_right(num) {
             var h = jQuery('#pur5220_as_tab1');
             var s = jQuery('#pur5220_as_tab' + num);
             s.css('display', 'block');
             h.animate({
             'left': -848 + 'px'
             }, {
             queue: false,
             duration: 500
             });
             s.animate({
             'left': 0 + 'px'
             }, {
             queue: false,
             duration: 500
             });
             }
             function pur5220_turn_left(num) {
             var h = jQuery('#pur5220_as_tab1');
             var s = jQuery('#pur5220_as_tab' + num);
             s.animate({
             'left': 848 + 'px'
             }, {
             queue: false,
             duration: 500
             });
             h.animate({
             'left': 0 + 'px'
             }, {
             queue: false,
             duration: 500,
             complete: function() {
             s.css('display', 'none');
             }
             });
             } */
            
            //底部页面切换
            var targetPage = {
                li: null,
                div: null
            };
            
            function init_tabUl() {
                var ul = getId('pur5220_changePageUl');
                var li = ul.children[0];
                var id = li.getAttribute('content_id');
                targetPage.li = li;
                targetPage.div = getId(id);
            }
            
            function rfxShowDataTypeSwitch(_this) {
                var id = _this.getAttribute('content_id');
                var div = getId(id);
                div.style.display = 'block';
                targetPage.div.style.display = 'none';
                targetPage.div = div;
            }
            
            function pur5220_icon_turnPage(e) {
                var tgr = e.target || e.srcElement;
                if (tgr.tagName == 'LI') {
                    var id = tgr.getAttribute('content_id');
                    var aim = getId(id);
                    if (tgr != targetPage.li) {
                        aim.style.display = 'block';
                        tgr.className = 'acitve';
                        targetPage.li.className = '';
                        targetPage.div.style.display = 'none';
                        targetPage.li = tgr;
                        targetPage.div = aim;
                    }
                }
            }
            //报表配置
            var myChart;
            var myChart2;
            var item_click;
            
            function init_echart() {
                if (g_eChart['series'].length < 1) {
                    return;
                }
                echarts_inti2(0);
                //绑定echarts点击事件
            }
            
            function pur5220_item_click(_this) {
                item_click.className = '';
                _this.className = 'active';
                item_click = _this;
                var index = _this.getAttribute('index');
                echarts_inti2(index);
            }
            
            function echarts2GetValue(vendor, item) {
                var records = $('pur5220_rfx_as_bargain_ds').getAll();
                for (var j = 0;j < records.length;j++) {
                    var data = records[j].data;
                    if (data.vendor_desc == vendor && data.item_desc + data.rfx_line_item_id == item) {
                        var p = Aurora.isEmpty(data.valid_fb_retail_price) ? 0 : parseInt(data.valid_fb_retail_price);
                        return p;
                    }
                }
                return 0;
            }
            
            function echarts_inti2(index) {
                var records = $('pur5220_rfx_as_bargain_ds').getAll();
                var series = [];
                var value = [];
                for (var i = 0;i < g_eChart['vendor'].length;i++) {
                    value = [];
                    for (var t = 0;t < g_eChart['item'].length;t++) {
                        value.push(echarts2GetValue(g_eChart['vendor'][i], g_eChart['item'][t]));
                    }
                    series.push({
                        name: g_eChart['vendor'][i],
                        type: 'bar',
                        //stack: '总量',
                        data: value,
                        barMaxWidth: 100
                    });
                }
                option = {
                    tooltip: {
                        trigger: 'axis',
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        formatter: function(a) {
                            var str = a[0].name;
                            for (var j = 0;j < g_eChart['item_name'].length;j++) {
                                if (g_eChart['item_name'][j].text + g_eChart['item_name'][j].item_line_id == str) {
                                    str = g_eChart['item_name'][j].text;
                                    break;
                                }
                            }
                            for (var i = 0;i < a.length;i++) {
                                var name = a[i].seriesName;
                                var value = a[i].value;
                                var item_name = '';
                                str += '<br/>' + name + ':' + value;
                            }
                            return str;
                        }
                    },
                    legend: {
                        data: g_eChart['vendor'],
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        formatter: function(name) {
                            return getStr(name, 16);
                        }
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {
                                show: false,
                                readOnly: false
                            },
                            magicType: {
                                show: true,
                                type: ['line', 'bar']
                            },
                            restore: {
                                show: true
                            },
                            saveAsImage: {
                                show: true
                            }
                        }
                    },
                    //calculable: true,
                    xAxis: [{
                        type: 'category',
                        name: '物料',
                        boundaryGap: true,
                        data: g_eChart['item'],
                        axisLabel: {
                            interval: '0',
                            formatter: function(a) {
                                for (var i = 0;i < g_eChart['item_name'].length;i++) {
                                    if (g_eChart['item_name'][i].text + g_eChart['item_name'][i].item_line_id == a) {
                                        return getStr(g_eChart['item_name'][i].code, 14) + '\n' + getStr(g_eChart['item_name'][i].text, 14);
                                    }
                                }
                                return getStr(a, 14);
                            },
                            textStyle: {
                                fontFamily: 'Microsoft YaHei'
                            }
                        },
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        }
                    }],
                    yAxis: [{
                        type: 'value',
                        name: '报价',
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        }
                    }],
                    series: series
                };
            
                //加载
                myChart2 = echarts.init(document.getElementById('pur5220_assist2_rpt2'));
                myChart2.setOption(option);
            }
            //结构报价
            
            function pur5220_showDetailPrice(item_line_id) {
                pur5220_turn_right(3);
                Aurora.Masker.mask($('pur5220_rfx_assistance_window').wrap, '请等待...');
                var ds = $('pur5220_rfx_quote_ds');
                var records = $('pur5220_rfx_as_item_ds').getAll();
                ds.setQueryParameter('rfx_header_id', '${/parameter/@rfx_header_id}');
                ds.setQueryParameter('rfx_line_item_id', item_line_id);
                ds.setQueryParameter('rfx_version', records[0].get('version'));
                ds.query();
            }
            
            function pur5220_quote_load() {
                var records = $('pur5220_rfx_quote_ds').getAll();
                var table = getId('pur5220_assistanceV2_strucTable');
                table.innerHTML = '';
                //加载头部信息
                var tr = table.insertRow(table.rows.length);
                tr.className = 'title';
                var html = '<td>#</td>';
                for (var i = 0;i < g_eChart.vendor.length;i++) {
                    html += '<td>' + g_eChart.vendor[i] + '</td>';
                }
                tr.innerHTML += html;
                //加载中间内容
                var item_data = pur5220_quote_groupByItem();
                for (i = 0;i < item_data.length;i++) {
                    tr = table.insertRow(table.rows.length);
                    html = '<td>' + item_data[i] + '</td>';
                    for (var j = 0;j < g_eChart.vendor.length;j++) {
                        var price = pur5220_getQuotePrice(item_data[i], g_eChart.vendor[j]);
                        html += '<td>' + price + '</td>';
                    }
                    tr.innerHTML = html;
                }
                //加载尾部内容
                tr = table.insertRow(table.rows.length);
                html = '<td>合计</td>';
                for (i = 0;i < g_eChart.vendor.length;i++) {
                    var total = pur5220_getTotalQuotePrice(g_eChart.vendor[i]);
                    html += '<td>' + total + '</td>';
                }
                tr.innerHTML = html;
                Aurora.Masker.unmask($('pur5220_rfx_assistance_window').wrap);
            }
            
            //结构报价item gruop by结果
            
            function pur5220_quote_groupByItem() {
                var records = $('pur5220_rfx_quote_ds').getAll();
                var item = [];
                var data;
                var flag;
                for (var i = 0;i < records.length;i++) {
                    data = records[i].data;
                    flag = true;
                    for (var j = 0;j < item.length;j++) {
                        if (data.config_item == item[j]) {
                            flag = false;
                        }
                    }
                    if (flag) {
                        item.push(data.config_item);
                    }
                }
                return item;
            }
            
            //寻找对应结构对应供应商的报价
            
            function pur5220_getQuotePrice(config_item, vendor_name) {
                var records = $('pur5220_rfx_quote_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.config_item == config_item && data.vendor_name == vendor_name) {
                        return Aurora.isEmpty(data.valid_price) ? '' : data.valid_price;
                    }
                }
                return '';
            }
            //寻找对应供应商下的结构总报价
            
            function pur5220_getTotalQuotePrice(vendor_name) {
                var records = $('pur5220_rfx_quote_ds').getAll();
                var sum = 0;
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.vendor_name == vendor_name) {
                        sum += Aurora.isEmpty(data.valid_price) ? 0 : data.valid_price;
                    }
                }
                return (sum == 0) ? '' : sum;
            }
            //历史版本报价
            
            
            function init_version() {
                var ds = $('pur5220_rfx_version_ds');
                ds.setQueryParameter('rfx_header_id', '${/parameter/@rfx_header_id}');
                ds.query();
            }
            
            var version_li;
            
            function pur5220_rfx_version_load() {
                var records = $('pur5220_rfx_version_ds').getAll();
                //初始化左侧物料菜单栏
                var ul = getId('pur5220_hItem_version_ul');
                var html = '';
                for (var i = 0;i < g_eChart.item_name.length;i++) {
                    html += '<li onclick="pur5220_version_chart(' + i + ')"><span>' + g_eChart.item_name[i].code　 + '</span><span style="margin-top:5px">' + g_eChart.item_name[i].text + '</span></li>';
                }
                ul.innerHTML = html;
                ul.children[0].className = 'active';
                version_li = ul.children[0];
                //初始化报表
                pur5220_version_chart(0, true);
            }
            
            function pur5220_version_chart(index, initFlag) {
                var records = $('pur5220_rfx_version_ds').getAll();
                var ul = getId('pur5220_hItem_version_ul');
                var li = ul.children[index];
                var x = [];
                var y = [];
                var name = [];
                var xAxis = [];
                var series = [];
                if (li != version_li || initFlag) {
                    version_li.className = '';
                    li.className = 'active';
                    version_li = li;
                    name.push(g_eChart.item_name[index].text);
                    //提取series
                    for (var i = 0;i < g_eChart.vendor.length;i++) {
                        y = [];
                        //提取出x轴值（不重复）
                        x = getLineChartX(records, g_eChart.item_name[index].code, g_eChart.vendor[i]);
                        for (var j = 0;j < x.length;j++) {
                            var value = getLineChartY(records, x[j], g_eChart.vendor[i], g_eChart.item_name[index].code);
                            if (!Aurora.isEmpty(value)) {
                                y.push([x[j], value]);
                            }
                        }
                        series.push({
                            name: g_eChart.vendor[i],
                            type: "line",
                            data: y
                        });
                    }
                    init_line_echart(name, x, series, '历史版本价', 'pur5220_assist2_rpt3', g_eChart.vendor, '版本');
                }
            }
            
            function getLineChartX(records, code, vendor) {
                var x = [];
                var flag;
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.item_code == code && data.vendor_name == vendor) {
                        flag = true;
                        for (var j = 0;j < x.length;j++) {
                            if (x[j] == data.rfx_version) {
                                flag = false;
                            }
                        }
                        if (flag) {
                            x.push(data.rfx_version);
                        }
                    }
                }
                return x;
            }
            
            function getLineChartY(records, x, vendor_name, item_code) {
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.rfx_version == x && data.vendor_name == vendor_name && data.item_code == item_code) {
                        return Aurora.isEmpty(data.valid_fb_retail_price) ? 0 : data.valid_fb_retail_price;
                    }
                }
                return '';
            }
            
            function init_line_echart(name, xAxis, series, title, id, legend, x_name) {
                // 基于准备好的dom，初始化echarts图表
                myChart = echarts.init(getId(id));
                option = {
                    title: {
                        text: title,
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        x: "left"
                    },
                    animation: false,
                    tooltip: {
                        trigger: "item",
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        formatter: function(a) {
                            return a.seriesName + '<br/>' + a.value[1];
                        }
                    },
                    grid: {
                        x: 30,
                        y: 60,
                        x2: 60,
                        y2: 50
                    },
                    legend: {
                        x: 'center',
                        y: 'top',
                        //orient:'vertical',
                        data: legend,
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        formatter: function(name) {
                            return getStr(name, 10);
                        }
                    },
                    xAxis: [{
                        type: "value",
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        name: x_name,
                        splitLine: {
                            show: false
                        }
                    }],
                    yAxis: [{
                        type: "value",
                        name: "价格",
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        }
                    }],
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {
                                show: true,
                                readOnly: true
                            },
                            restore: {
                                show: true
                            },
                            saveAsImage: {
                                show: true
                            }
                        }
                    },
                    calculable: true,
                    series: series
                };
            
                // 为echarts对象加载数据
                myChart.setOption(option);
            }
            //历史价格信息初始化设置
            
            function pur5220_rfx_history_load() {
                var records = $('pur5220_rfx_history_ds').getAll();
                var ds = $('pur5220_pur_history_ds');
                ds.query();
            }
            
            var history_item_li;
            
            function pur5220_pur_history_load() {
                var _records = $('pur5220_rfx_history_ds').getAll();
                var records = $('pur5220_pur_history_ds').getAll();
                //初始化左侧物料菜单栏
                var ul = getId('pur5220_hItem_order_ul');
                var html = '';
                for (var i = 0;i < g_eChart.item_name.length;i++) {
                    html += '<li onclick="init_line_order_history(' + i + ')"><span>' + g_eChart.item_name[i].code　 + '</span><span style="margin-top:5px">' + g_eChart.item_name[i].text + '</span></li>';
                }
                ul.innerHTML = html;
                //if (records.length > 0 || _records.length > 0) {
                ul.children[0].className = 'active';
                history_item_li = ul.children[0];
                //初始化报表
                init_line_order_history(0, true);
                //}
            }
            
            //初始化历史价格报表
            
            function init_line_order_history(index, init_flag) {
                var datas = [];
                datas[0] = $('pur5220_rfx_history_ds').getAll();
                datas[1] = $('pur5220_pur_history_ds').getAll();
                console.log(datas);
                var name = [];
                var x = [];
                x[0] = [];
                x[1] = [];
                var xAxis = [];
                var y = [];
                var series = [];
                var ul = getId('pur5220_hItem_order_ul');
                var li = ul.children[index];
                if (li != history_item_li || init_flag) {
                    history_item_li.className = '';
                    li.className = 'active';
                    history_item_li = li;
                    name.push(g_eChart.item_name[index].text);
                    //提取series
                    for (var i = 0;i < 2;i++) {
                        y = [];
                        for (var j = 0;j < datas[i].length;j++) {
                            if (datas[i][j].data.item_code == g_eChart.item_name[index].code && jude_2x_reset(x[i], datas[i][j].data.time)) {
                                x[i].push(datas[i][j].data.time);
                                var year = datas[i][j].data.year;
                                var month = datas[i][j].data.month;
                                var day = datas[i][j].data.day;
                                y.push([new Date(year, month - 1, day), judgeNullBack(datas[i][j].data.price, 0)]);
                            }
            
                        }
                        if (x[i].length > 0 || (i == 1 && x[0].length == 0)) {
                            series.push({
                                name: (i == 0) ? '历史询价' : '历史采购价',
                                symbol: 'emptyCircle',
                                symbolSize: 4,
                                showAllSymbol: true,
                                type: "line",
                                data: y
                            });
                        }
                    }
                    console.log(series);
                    init_2line_echart(series);
                }
            }
            
            //判断x轴重复
            
            function jude_2x_reset(x, time) {
                for (var i = 0;i < x.length;i++) {
                    if (x[i] == time) {
                        return false;
                    }
                }
                return true;
            }
            //询价提取y轴数据
            
            function getHistoryY(records, x, item_code) {
                for (var i = 0;i < records.length;i++) {
                    var data = records[i].data;
                    if (data.time == x && data.item_code == item_code) {
                        return data.price;
                    }
                }
                return 0;
            }
            
            function init_2line_echart(series) {
                // 基于准备好的dom，初始化echarts图表
                myChart = echarts.init(getId('pur5220_assist2_rpt4'));
                option = {
                    title: {
                        text: '历史询价',
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        x: "left"
                    },
                    tooltip: {
                        trigger: "item",
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        formatter: function(params) {
                            var date = new Date(params.value[0]);
                            data = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
                            return data + '<br/>' + params.seriesName + ':' + params.value[1];
                        }
                    },
                    legend: {
                        x: 'center',
                        y: 'top',
                        textStyle: {
                            fontFamily: 'Microsoft YaHei'
                        },
                        //orient:'vertical',
                        data: ['历史询价', '历史采购价']
                    },
                    grid: {
                        x: 50,
                        y: 60,
                        x2: 60,
                        y2: 50
                    },
                    xAxis: [{
                        type: 'time',
                        name: '时间',
                        //boundaryGap: false,
                        splitLine: {
                            show: false
                        },
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        }
            
                    }],
                    yAxis: [{
                        type: "value",
                        name: "价格",
                        nameTextStyle: {
                            fontFamily: 'Microsoft YaHei'
                        }
                    }],
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {
                                show: true,
                                readOnly: true
                            },
                            restore: {
                                show: true
                            },
                            saveAsImage: {
                                show: true
                            }
                        }
                    },
                    series: series
                };
            
                // 为echarts对象加载数据
                myChart.setOption(option);
            }
        ]]></script>
        <a:dataSets>
            <!-- 物料信息 -->
            <a:dataSet id="pur5220_rfx_as_item_ds" autoQuery="true" fetchAll="true" model="pur.PUR5220.pur_rfx_ln_items" queryUrl="${/request/@context_path}/autocrud/pur.PUR5220.pur_rfx_ln_items/query?rfx_header_id=${/parameter/@rfx_header_id}">
                <a:events>
                    <a:event name="load" handler="pur5220_as_item_load"/>
                </a:events>
            </a:dataSet>
            <!-- 供应商信息 -->
            <a:dataSet id="pur5220_rfx_as_vendors_ds" autoQuery="true" fetchAll="true" model="pur.PUR5220.pur_rfx_ln_vendors" queryUrl="${/request/@context_path}/autocrud/pur.PUR5220.pur_rfx_ln_vendors/query?rfx_header_id=${/parameter/@rfx_header_id}">
                <a:events>
                    <a:event name="load" handler="pur5220_as_vendor_load"/>
                </a:events>
            </a:dataSet>
            <!-- 供应商报价信息 -->
            <a:dataSet id="pur5220_rfx_as_bargain_ds" fetchAll="true" model="pur.PUR5220.pur_rfx_feedback_bargain_details" queryUrl="${/request/@context_path}/autocrud/pur.PUR5220.pur_rfx_feedback_bargain_details/query?rfx_header_id=${/parameter/@rfx_header_id}">
                <a:events>
                    <a:event name="load" handler="pur5220_as_vendorBargain_load"/>
                </a:events>
            </a:dataSet>
            <!-- 结构报价信息 -->
            <a:dataSet id="pur5220_rfx_quote_ds" fetchAll="false" model="pur.public.pur_rfx_quote_vi">
                <a:events>
                    <a:event name="load" handler="pur5220_quote_load"/>
                </a:events>
            </a:dataSet>
            <!-- 历史版本报价信息 -->
            <a:dataSet id="pur5220_rfx_version_ds" fetchAll="true" model="pur.PUR5220.pur_rfx_version_history">
                <a:events>
                    <a:event name="load" handler="pur5220_rfx_version_load"/>
                </a:events>
            </a:dataSet>
            <!-- 历史询价信息 -->
            <a:dataSet id="pur5220_rfx_history_ds" fetchAll="true" model="pur.PUR5220.pur_rfx_history_item" queryUrl="${/request/@context_path}/autocrud/pur.PUR5220.pur_rfx_history_item/query?rfx_header_id=${/parameter/@rfx_header_id}">
                <a:events>
                    <a:event name="load" handler="pur5220_rfx_history_load"/>
                </a:events>
            </a:dataSet>
            <!-- 历史采购价信息 -->
            <a:dataSet id="pur5220_pur_history_ds" fetchAll="true" model="pur.PUR5220.pur_rfx_order_history" queryUrl="${/request/@context_path}/autocrud/pur.PUR5220.pur_rfx_order_history/query?rfx_header_id=${/parameter/@rfx_header_id}">
                <a:events>
                    <a:event name="load" handler="pur5220_pur_history_load"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <div class="body">
            <div class="main-content">
                <div id="pur5220_as_tab1" class="tab-content">
                    <div id="pur5220_page1" class="page-tab" style="display:block">
                        <div class="content">
                            <div class="col-table-whole">
                                <div class="head">
                                    <span><![CDATA[比价-小助手(数据表格版)]]></span>
                                    <span class="right-icon" content_id="pur5220_page4" onclick="rfxShowDataTypeSwitch(this)">
                                        <i class="icon-bar-chart"/>
                                    </span>
                                </div>
                                <div class="col-body">
                                    <table id="pur5220_assistanceV2_table" border="1" class="assistace-table-data"/>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="pur5220_page2" class="page-tab">
                        <div class="item-show-left">
                            <ul id="pur5220_hItem_version_ul"/>
                        </div>
                        <div id="pur5220_assist2_rpt3" style="float:left;width:570px;height:410px;"/>
                    </div>
                    <div id="pur5220_page3" class="page-tab">
                        <div class="item-show-left">
                            <ul id="pur5220_hItem_order_ul"/>
                        </div>
                        <div id="pur5220_assist2_rpt4" style="float:left;width:570px;height:410px;"/>
                    </div>
                    <div id="pur5220_page4" class="page-tab">
                        <div class="page-chart-icon" content_id="pur5220_page1" onclick="rfxShowDataTypeSwitch(this)">
                            <i class="icon-table"/>
                        </div>
                        <div id="pur5220_assist2_rpt2" style="margin:0 auto;width:800px;height:420px;"/>
                    </div>
                    <ul id="pur5220_changePageUl" class="icon-turn" onclick="pur5220_icon_turnPage(event)">
                        <li class="acitve" content_id="pur5220_page1"><![CDATA[最新报价]]></li>
                        <li content_id="pur5220_page3"><![CDATA[历史价格]]></li>
                        <li content_id="pur5220_page2"><![CDATA[历史轮次]]></li>
                    </ul>
                </div>
                <div id="pur5220_as_tab3" class="tab-content structure">
                    <div class="turn-left" onclick="pur5220_turn_left(3)">
                        <i class="icon-angle-left"/>
                    </div>
                    <table id="pur5220_assistanceV2_strucTable" border="1" class="assistace-table-data" style="margin-top:20px"/>
                </div>
            </div>
        </div>
        <script><![CDATA[
            //初始化
            Aurora.onReady(function() {
                pur5220_assistance_init();
            });
        ]]></script>
    </a:view>
</a:screen>
