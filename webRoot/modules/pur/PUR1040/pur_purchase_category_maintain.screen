<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: WangQiaosen  
    $Date: 2013-7-24 上午10:39:18  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view>
        <a:link id="pur1040_pur_purchase_category_disable_link" model="pur.PUR1040.pur_purchase_category_delete" modelaction="delete"/>
        <a:link id="pur1040_pur_purchase_category_enable_link" model="pur.PUR1040.pur_purchase_category_delete" modelaction="update"/>
        <script><![CDATA[
            var max_category_level = 3; //最多定义的品类层数
            
            function pur1040_PurchaseCategoryMaintainEditor(rec, name) {
                if (name == 'purchase_category_code') {
                    if (rec.isNew) {
                        return 'pur1040_purchase_category_tf';
                    } else {
                        return '';
                    }
                }
            }
            
            function pur1040_PurchaseCategoryMaintainOnSubmitsuccess(ds, res) {
                Aurora.SideBar.enable = true;
                Aurora.SideBar.show({
                    msg: '${l:PROMPT.SAVE_SUCCESS}',
                    duration:600
                });
                //ds.query();
            }
            
            function pur1040_PurchaseCategoryMaintainAddRoot() {
                var ds = $('pur1040_purchase_category_maintain_ds');
            
                var new_record = ds.create({
                    'purchase_category_id': '',
                    'expanded': 'Y',
                    'purchase_category_code': '',
                    'category_name_id': '',
                    'purchase_category_name': '',
                    'uom_code': '',
                    'uom_name': '',
                    'flexfield_instance_id': '',
                    'flexfield_instance_code': '',
                    'category_level': 1,
                    'parent_category_id': -1,
                    'enabled_flag': 'Y'
                });
            }
            
            function pur1040_PurchaseCategoryMaintainSave() {
                var ds = $('pur1040_purchase_category_maintain_ds');
                ds.submit();
            }
            
            function pur1040_purchaseCategoryMaintainTreegridRenderer(value, record, name) {
                var category_level = record.get('category_level');
                var purchase_category_id = record.get('purchase_category_id');
                var enabled_flag = record.get('enabled_flag');
                var parent_category_id = record.get('parent_category_id');
                var records = $('pur1040_purchase_category_maintain_ds').getAll();
                if (name == 'addChild') {
                    if (!Aurora.isEmpty(purchase_category_id) && enabled_flag == 'Y' && category_level < max_category_level) {
                        return '<a href="javascript:pur1040_purchaseCategoryMaintainTreegridRendererAddChird(' + category_level + ',' + purchase_category_id + ')">${l:PUR_PURCHASE_CATEGORIES.ADD_CHIRD_CATEGORY}</a>';
                    } else if (enabled_flag == 'N') {
                        return '<div style="background:red">${l:PUR_PURCHASE_CATEGORIES.DIABLE_CATEGORY}</div>';
                    }
                }
            
                if (name == 'removeCategory') {
                    if (!Aurora.isEmpty(purchase_category_id) && enabled_flag == 'Y') {
                        return '<a href="javascript:pur1040_purchaseCategoryMaintainTreegridRendererDisableCategory(' + purchase_category_id + ')">${l:PUR_PURCHASE_CATEGORIES.REMOVE_CATEGORY}</a>';
                    } else if (record.isNew) {
                        return '<a href="javascript:pur1040_purchaseCategoryMaintainTreegridRendererClearCategory()">${l:PUR_PURCHASE_CATEGORIES.CLEAR_LINE}</a>';
                    } else if (enabled_flag == 'N') {
                        if (Aurora.isEmpty(parent_category_id)) { //根级品类
                            return '<a href="javascript:pur1040_purchaseCategoryMaintainTreegridRendererEnableCategory(' + purchase_category_id + ')">${l:PUR_PURCHASE_CATEGORIES.ENABLE_CATEGORY}</a>';
                        } else {
                            for (var i = 0;i < records.length;i++) { //判断上级品类是否启用，启用则显示，禁用则不显示
                                if (parent_category_id == records[i].get('purchase_category_id') && records[i].get('enabled_flag') == 'Y') {
                                    return '<a href="javascript:pur1040_purchaseCategoryMaintainTreegridRendererEnableCategory(' + purchase_category_id + ')">${l:PUR_PURCHASE_CATEGORIES.ENABLE_CATEGORY}</a>';
                                }
                            }
                        }
                    }
                }
            }
            
            function pur1040_purchaseCategoryMaintainTreegridRendererAddChird(category_level, purchase_category_id) {
                var ds = $('pur1040_purchase_category_maintain_ds');
                var new_record = ds.create({
                    'purchase_category_id': '',
                    'expanded': 'Y',
                    'purchase_category_code': '',
                    'category_name_id': '',
                    'purchase_category_name': '',
                    'uom_code': '',
                    'uom_name': '',
                    'flexfield_instance_id': '',
                    'flexfield_instance_code': '',
                    'category_level': category_level + 1,
                    'parent_category_id': purchase_category_id,
                    'enabled_flag': 'Y'
                });
            }
            
            function pur1040_purchaseCategoryMaintainTreegridRendererDisableCategory(purchase_category_id) {
            
                //提交AjAX请求
                Aurora.showConfirm('${l:PROMPT}', '${l:PUR_PURCHASE_CATEGORIES.SURE_TO_DISABLE_CATEGORY}', function() {
                    Aurora.request({
                        url: $('pur1040_pur_purchase_category_disable_link').getUrl(),
                        para: {
                            purchase_category_id: purchase_category_id
                        },
                        success: function() {
                            $('pur1040_purchase_category_maintain_ds').query();
                        },
                        failure: function() {},
                        error: function() {},
                        scope: this
                    });
                });
            }
            
            function pur1040_purchaseCategoryMaintainTreegridRendererEnableCategory(purchase_category_id) {
            
                //提交AjAX请求
                Aurora.showConfirm('${l:PROMPT}', '${l:PUR_PURCHASE_CATEGORIES.SURE_TO_ENABLE_CATEGORY}', function() {
                    Aurora.request({
                        url: $('pur1040_pur_purchase_category_enable_link').getUrl(),
                        para: {
                            purchase_category_id: purchase_category_id
                        },
                        success: function() {
                            $('pur1040_purchase_category_maintain_ds').query();
                        },
                        failure: function() {},
                        error: function() {},
                        scope: this
                    });
                });
            }
            
            function pur1040_purchaseCategoryMaintainTreegridRendererClearCategory() {
                var ds = $('pur1040_purchase_category_maintain_ds');
                var record = ds.getCurrentRecord();
                ds.remove(record);
            }
            
            /*
             ***************************************************************
             * tree型数据查询说明：
             * 	每组树形数据查询所需多个全局变量(多个tree多组变量，分别以_01,_02...表示)
             *	参数1：显示位置（初始为0）
             *	参数2：匹配结果数组
             *	参数3：是否初始化匹配结果数组标识
             ***************************************************************
             */
            var show_index_01 = 0; //显示位置
            var row_list_01 = []; //匹配结果数组
            var init_flag_01 = false; //初始化标识
            
            //初始全局变量
            
            function pur1040_initGlobalPara() {
                show_index_01 = 0;
                row_list_01 = [];
                init_flag_01 = false;
            }
            
            //初始化定位数组
            
            function pur1040_initRowList(para) {
            
                //获取树形结果数据
                var records = $('pur1040_purchase_category_maintain_ds').getAll();
            
                //对数据进行遍历
                for (var i = 0;i < records.length;i++) {
            
                    //判断是否包含当前查询字符，包含则将其位置放入匹配结果数组
                    if (records[i].get('purchase_category_code').indexOf(para) != -1 || records[i].get('purchase_category_name').indexOf(para) != -1) {
                        row_list_01.push($('pur1040_purchase_category_maintain_ds').indexOf(records[i]));
                    }
                }
            
                //改变初始化标识
                init_flag_01 = true;
            }
            
            //采购品类tree查询按钮执行方法
            
            function pur1040_purPurchaseCategoryTreeQuery() {
            
            	// debugger;
                //获取查询条件字符串
                var record = $('pur1040_purchase_category_query_ds').getCurrentRecord();
            
                //判断查询条件的值是否为空，为空不做查询操作
                if (!Aurora.isEmpty(record.get('purchase_category_code_name'))) {
            
                    //判断是否初始化定位数组
                    if (!init_flag_01) {
                        pur1040_initRowList(record.get('purchase_category_code_name'));
                    }
            
                    //结果匹配数组有值时
                    if (row_list_01.length > 0) {
            
                        //显示匹配数组里的位置
                        $('pur1040_purchase_category_maintain_treegrid').selectRow(row_list_01[show_index_01]);
            
                        //判断显示位置是否越界,没有则++，有责回到初始0
                        if (show_index_01 < row_list_01.length - 1) {
                            show_index_01++;
                        } else {
                            show_index_01 = 0;
                        }
                    }
                }
            }
            
            //查询dataset更新事件
            
            function pur1040_onPurchaseCategoryTreeQueryUpdate(ds, record, name, value, oldvalue) {
                $('pur1040_purchase_category_query_ds').getCurrentRecord().dirty = false;
                if (name == 'purchase_category_code_name') {
                    //查询条件改变，重置全局定位变量
                    pur1040_initGlobalPara();
                }
            }
            /*
             ***************************************************************
             * 树形数据查询结束
             ***************************************************************
             */
            
            function pur1040_getLength(str) {
                if (!Aurora.isEmpty(str)) {
                    var realLength = 0,
                        len = str.length,
                        charCode = -1;
                    for (var i = 0;i < len;i++) {
                        charCode = str.charCodeAt(i);
                        if (charCode >= 0 && charCode <= 128) {
                            realLength += 1;
                        } else {
                            realLength += 3;
                        }
                    }
                    return realLength;
                }
                return 0;
            }
            
            function pur1040_purchaseCategoryCodeValidate(record, name, value) {
                var purchase_category_code = record.get('purchase_category_code');
                var purchase_category_name = record.get('purchase_category_name');
                if (name == 'purchase_category_code') {
                    if (pur1040_getLength(purchase_category_code) > 30) {
                        return '${l:PUR1040.PURCHASE_CATEGORY_CODE_OVERLENGTH}';
                    }
                }
                if (name == 'purchase_category_name') {
                    if (pur1040_getLength(purchase_category_name) > 1000) {
                        return '${l:PUR1040.PURCHASE_CATEGORY_NAME_OVERLENGTH}';
                    }
                }
                return true;
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="pur1040_purchase_category_query_ds" autoCreate="true">
                <a:events>
                    <a:event name="update" handler="pur1040_onPurchaseCategoryTreeQueryUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pur1040_purchase_category_maintain_ds" autoQuery="true" fetchAll="true" model="pur.PUR1040.pur_purchase_category_maintain" queryDataSet="pur1040_purchase_category_query_ds">
                <a:fields>
                    <a:field name="parent_category_id"/>
                    <a:field name="purchase_category_code" required="true" requiredMessage="${l:PUR_PURCHASE_CATEGORIES.CATEGORY_CODE_NOT_NULL}" validator="pur1040_purchaseCategoryCodeValidate"/>
                    <a:field name="purchase_category_name" required="true" requiredMessage="${l:PUR_PURCHASE_CATEGORIES.CATEGORY_NAME_NOT_NULL}" validator="pur1040_purchaseCategoryCodeValidate"/>
                    <a:field name="uom_code"/>
                    <a:field name="uom_name" autoComplete="true" autoCompleteField="uom_name" autoCompleteSize="1" lovGridHeight="350" lovHeight="500" lovLabelWidth="100" lovService="pur.PUR1040.pur_purchase_category_uom_lov" lovWidth="600" title="PUR_PURCHASE_CATEGORIES.UOM_NAME">
                        <a:mapping>
                            <a:map from="uom_code" to="uom_code"/>
                            <a:map from="uom_name" to="uom_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="category_level"/>
                    <a:field name="enabled_flag" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="flexfield_instance_code" autoComplete="true" autoCompleteField="template_code" autoCompleteSize="1" lovGridHeight="350" lovHeight="500" lovService="pur.PUR5010.pur_req_flex_templete_lov" lovWidth="500" title="PUR_PURCHASE_CATEGORIES.FLEXFIELD_INSTANCE_CODE">
                        <a:mapping>
                            <a:map from="instance_id" to="flexfield_instance_id"/>
                            <a:map from="template_code" to="flexfield_instance_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="expanded" checkedValue="Y" uncheckedValue="N"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="pur1040_PurchaseCategoryMaintainOnSubmitsuccess"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:defaultScreen>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton className="item-rbtn-blue submit" click="pur1040_PurchaseCategoryMaintainAddRoot" style="margin-left:20px;" text="PUR1040_NEW_TOP_CATEGORY" width="100"/>
                <a:toolbarButton className="item-rbtn-blue button-save" click="pur1040_PurchaseCategoryMaintainSave" style="margin-left:20px;" text="PROMPT.SAVE" width="100"/>
            </a:screenTopToolbar>
            <!-- <a:form row="1">
                <a:textField name="purchase_category_code_name" bindTarget="pur1040_purchase_category_query_ds" emptyText="PUR1040.PURCHASE_CATEGORY_DEFAULT_QUERY_HINT" marginWidth="210"/>
                <a:toolbarButton click="pur1040_purPurchaseCategoryTreeQuery" style="margin-left:20px;" text="HAP_QUERY" width="100"/>
            </a:form> -->
            <a:queryForm bindTarget="pur1040_purchase_category_query_ds" createSearchButton="false" style="width:100%;border:none">
                <a:formToolBar>
                    <a:textField name="purchase_category_code_name" bindTarget="pur1040_purchase_category_query_ds" emptyText="PUR1040.PURCHASE_CATEGORY_DEFAULT_QUERY_HINT" marginWidth="182"/>
                    <a:toolbarButton className="item-rbtn-gray" click="pur1040_purPurchaseCategoryTreeQuery" style="margin-left:20px;" text="HAP_QUERY" width="80"/>
                </a:formToolBar>
            </a:queryForm>
            <a:treeGrid id="pur1040_purchase_category_maintain_treegrid" bindTarget="pur1040_purchase_category_maintain_ds" expandField="expanded" idField="purchase_category_id" marginHeight="160" marginWidth="60" parentField="parent_category_id" showCheckBox="false">
                <a:columns>
                    <a:column name="purchase_category_code" align="left" editorFunction="pur1040_PurchaseCategoryMaintainEditor" width="160"/>
                    <a:column name="purchase_category_name" align="left" editor="pur1040_purchase_category_tf" width="235"/>
                    <a:column name="uom_name" align="left" editor="pur1040_purchase_category_lov" width="50"/>
                    <a:column name="flexfield_instance_code" align="left" editor="pur1040_purchase_category_lov" width="130"/>
                    <a:column name="category_level" width="50"/>
                    <a:column prompt="HAP_OPERATION">
                        <a:column name="addChild" renderer="pur1040_purchaseCategoryMaintainTreegridRenderer" width="70"/>
                        <a:column name="removeCategory" renderer="pur1040_purchaseCategoryMaintainTreegridRenderer" width="90"/>
                    </a:column>
                </a:columns>
                <a:editors>
                    <a:checkBox id="pur1040_purchase_category_cb"/>
                    <a:lov id="pur1040_purchase_category_lov"/>
                    <a:textField id="pur1040_purchase_category_tf"/>
                </a:editors>
            </a:treeGrid>
        </a:defaultScreen>
    </a:view>
</a:screen>
