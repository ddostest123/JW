<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: pccold  
    $Date: 2015-12-9 上午9:59:06  
    $Revision: 1.0  
    $Purpose: 送货单创建，送货单临时头数据查询BM
-->
<a:screen xmlns:c="aurora.application.action" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="asn_header_id in ${:/parameter/@asn_headers}" fetchAll="true" model="pur.newPur.inv_asn_headers_temp" rootPath="inv_asn_headers_temp_path"/>
    </a:init-procedure>
    <a:view-config>
        <c:create-config targetId="dynamic_asn_create_dataset">
            <p:loop source="/model/inv_asn_headers_temp_path">
                <c:process-config>
                    <a:dataSet id="inv5010_asn_create_header_${@asn_header_id}_ds" autoQuery="true" fetchAll="true" model="inv.INV5010.inv_asn_headers_temp" queryUrl="${/request/@context_path}/autocrud/inv.INV5010.inv_asn_headers_temp/query?asn_header_id=${@asn_header_id}" selectable="true">
                        <a:fields>
                            <a:field name="asn_header_id" readOnly="true"/>
                            <a:field name="asn_number" readOnly="true"/>
                            <a:field name="company_name" readOnly="true"/>
                            <a:field name="vendor_name" readOnly="true"/>
                            <a:field name="ship_to_organization_name" readOnly="true"/>
                            <a:field name="location_name" readOnly="true"/>
                            <a:field name="ship_date" required="true" requiredMessage="${l:INV_ASN_HEADERS_TEMP.SHIP_DATE_NOT_NULL}" validator="inv5010_asnCreateHeaderDsValidator"/>
                            <a:field name="expected_date" required="true" requiredMessage="${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}" validator="inv5010_asnCreateHeaderDsValidator"/>
                            <a:field name="vendor_site_name" readOnly="true"/>
                            <a:field name="data_source" readOnly="true"/>
                            <a:field name="header_desc"/>
                            <a:field name="asn_type_code"/>
                            <a:field name="asn_type_name_display" displayField="asn_type_name" options="inv5010_asn_create_type_list_ds" returnField="asn_type_code" valueField="asn_type_code"/>
                            <a:field name="is_immed_shipped_flag_display" readOnly="true"/>
                            <a:field name="actual_receiver_name" readOnly="true"/>
                        </a:fields>
                    </a:dataSet>
                    <a:dataSet id="inv5010_asn_create_line_${@asn_header_id}_ds" autoQuery="true" fetchAll="true" model="inv.INV5010.inv_asn_lines_temp" queryUrl="${/request/@context_path}/autocrud/inv.INV5010.inv_asn_lines_temp/query?asn_header_id=${@asn_header_id}" selectable="false">
                        <a:fields>
                            <a:field name="asn_line_id"/>
                            <a:field name="ship_quantity" required="true" requiredMessage="INV5010.SHIPMENT_QUANTITY_CAN_NOT_BE_BULL_OR_ZERO" validator="inv5010_asnCreateLineDsValidator"/>
                            <a:field name="comments"/>
                            <a:field name="serial_num" requiredMessage="INV5010.SERIAL_NUM_CAN_NOT_NULL"/>
                            <a:field name="lots_num" requiredMessage="INV5010.BATCH_NUM_CAN_NOT_NULL"/>
                            <a:field name="lots_validity_date" requiredMessage="INV5010.DATE_OF_EXPIRY_CAN_NOT_NULL"/>
                        </a:fields>
                        <a:events>
                            <a:event name="load" handler="inv5010_asnCreateLine_loadFun"/>
                        </a:events>
                    </a:dataSet>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamic_asn_create_grid">
            <p:loop source="/model/inv_asn_headers_temp_path">
                <c:process-config>
                    <div id="temp_header_con_${@asn_header_id}_id" class="temp-delivery-details" linedsid="inv5010_asn_create_line_${@asn_header_id}_ds">
                        <a:screenTopToolbar>
                            <!-- <button class="item-rbtn-blue" onclick="queryDelieveryDs(&apos;${@asn_header_id}&apos;);" style="margin-left:20px;" width="100"><![CDATA[刷新数据]]></button> -->
                            <button id="inv5010_inv_asn_header_create_btn_${@asn_header_id}" class="item-rbtn-blue" onclick="inv5010_inv_asn_header_create(&apos;${@asn_header_id}&apos;)" style="margin-left:20px;" width="100"><![CDATA[生成送货单]]></button>
                            <button id="inv5010_inv_asn_header_submit_btn_${@asn_header_id}" class="item-rbtn-blue" onclick="inv5010_inv_asn_header_submit(&apos;${@asn_header_id}&apos;)" style="margin-left:20px;" width="100"><![CDATA[提交送货单]]></button>
                            <a:gridButton bind="inv5010_asn_create_${@asn_header_id}_grid" className="item-rbtn-blue button-excel" type="excel" width="100"/>
                            <!-- <button class="item-rbtn-blue" onclick="openImportData();" style="margin-left:20px;" width="100"><![CDATA[导入]]></button> -->
                            <button class="item-rbtn-blue" onclick="inv5010_inv_asn_header_attachment(&apos;${@asn_header_id}&apos;);" style="margin-left:20px;" width="100"><![CDATA[上传附件]]></button>
                        </a:screenTopToolbar>
                        <a:form marginWidth="70">
                            <a:hBox labelWidth="100">
                                <a:label name="asn_number" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS.ASN_NUMBER" width="200"/>
                                <a:label name="vendor_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="PUR_VENDORS.VENDOR" width="200"/>
                                <a:label name="vendor_site_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS.SHIPMENT_LOCATION" width="200"/>
                                <a:datePicker name="ship_date" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS.SHIP_DATE" width="200"/>
                            </a:hBox>
                            <a:hBox labelWidth="100">
                                <a:label name="company_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS_TEMP.COMPANY_ID" width="200"/>
                                <a:label name="ship_to_organization_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS_TEMP.SHIP_TO_ORGANIZATION_ID" width="200"/>
                                <a:label name="location_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS_TEMP.LOCATION_ID" width="200"/>
                                <a:datePicker name="expected_date" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS_TEMP.EXPECTED_DATE" width="200"/>
                            </a:hBox>
                            <a:hBox labelWidth="100">
                                <a:comboBox name="asn_type_name_display" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS.ASN_TYPE" width="200"/>
                                <!-- <a:label name="is_immed_shipped_flag_display" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="PUR_LINES_ALL.IS_IMMED_SHIPPED_FLAG" width="200"/> -->
                                <a:label name="actual_receiver_name" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="PUR_LINES_ALL.ACTUAL_RECEIVER_NAME" width="200"/>
                                <a:textField name="header_desc" bindTarget="inv5010_asn_create_header_${@asn_header_id}_ds" prompt="INV_ASN_HEADERS.HEADER_DESC" width="506"/>
                            </a:hBox>
                        </a:form>
                        <a:grid id="inv5010_asn_create_${@asn_header_id}_grid" autoAppend="false" bindTarget="inv5010_asn_create_line_${@asn_header_id}_ds" height="200" marginWidth="70" navBar="false" width="940">
                            <a:columns>
                                <a:column name="not_delievery" align="center" lock="true" prompt="PROMPT.OPERATE" renderer="inv_not_delievery" width="50"/>
                                <a:column name="operate" align="center" lock="true" prompt="PROMPT.OPERATE" renderer="inv5010_asnCreateGridRenderer" width="50"/>
                                <a:column name="asn_line_num" align="center" lock="true" prompt="INV_ASN_LINES_TEMP.LINE_NUM" width="50"/>
                                <a:column name="operate" align="center" lock="true" prompt="订单详情" renderer="renderItem_name" width="50"/>
                                <a:column name="require_item_name" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.ITEM_NAME" sortable="true" width="100"/>
                                <a:column name="quantity" align="right" prompt="INV_ASN_LINES_TEMP.QUANTITY" renderer="Aurora.formatNumber" width="50"/>
                                <a:column name="quantity_enable_shipped" align="right" prompt="PUR_LINE_LOCATIONS_ALL.QUANTITY_ENABLE_SHIPPED" renderer="Aurora.formatNumber" width="40"/>
                                <a:column name="ship_quantity" align="right" editor="inv5010_asn_ship_quantity_nf_${@asn_header_id}" prompt="PUR_LINE_LOCATIONS_ALL.SHIPPED_QUANTITY" width="50"/>
                                <a:column name="lots_num" align="center" editor="inv5010_asn_create_grid_tf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.LOTS_NUM" width="50"/>
                                <a:column name="lots_validity_date" align="center" editor="inv5010_asn_create_grid_dp_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.LOTS_VALIDITY_DATE" renderer="Aurora.formatDate" width="60"/>
                                <a:column name="serial_num" align="center" editor="inv5010_asn_create_grid_tf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.SERIAL_NUM" width="50"/>
                                <a:column name="invoice_num" align="center" editor="inv5010_asn_create_grid_tf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.INVOICE_NUM" width="50"/>
                                <a:column name="packet_quantity" align="left" editor="inv5010_asn_ship_quantity_nf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.PACKET_QUANTITY" width="50"/>
                                <a:column name="environmental_batch" align="left" editor="inv5010_asn_create_grid_tf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.ENVIRONMENTAL_BATCH" width="50"/>
                                <a:column name="box_weight" align="left" editor="inv5010_asn_ship_quantity_nf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.BOX_WEIGHT_KG" width="50"/>
                                <a:column name="comments" align="left" editor="inv5010_asn_create_grid_tf_${@asn_header_id}" prompt="INV_ASN_LINES_TEMP.VENDOR_COMMENTS" width="100"/>
                            </a:columns>
                            <a:editors>
                                <a:textField id="inv5010_asn_create_grid_tf_${@asn_header_id}"/>
                                <a:datePicker id="inv5010_asn_create_grid_dp_${@asn_header_id}"/>
                                <a:numberField id="inv5010_asn_ship_quantity_nf_${@asn_header_id}" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="4"/>
                            </a:editors>
                        </a:grid>
                    </div>
                </c:process-config>
            </p:loop>
        </c:create-config>
    </a:view-config>
    <a:view>
        <link href="${/request/@context_path}/css/pur/create_delivery.css?v=1.06" rel="stylesheet"/>
        <a:link id="inv5010_asn_edit_header_line_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_edit_lines.screen"/>
        <a:link id="inv5010_asn_operation_record_link" url="${/request/@context_path}/modules/inv/PUBLIC/inv_asn_operation_record.screen"/>
        <a:link id="inv5010_asn_create_save_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_save.svc"/>
        <a:link id="inv5010_asn_create_submit_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_submit.svc"/>
        <a:link id="inv5010_asn_create_create_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_create.svc"/>
        <a:link id="inv5010_asn_create_edit_lines_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_edit_lines.screen"/>
        <a:link id="inv5010_asn_create_attachment_file_upload_link" url="${/request/@context_path}/attachment_file_upload.screen"/>
        <a:link id="inv5010_asn_edit_header_delete_link" model="inv.INV5010.inv_asn_edit_lines" modelaction="batch_update"/>
        <a:link id="inv5010_asn_edit_header_submit_link" model="inv.INV5010.inv_asn_edit_lines" modelaction="batch_update"/>
        <style><![CDATA[
        	.aawin-wrap, .aaawin-caption, .aaawin-body{
			    //bbbackground-color: #d1eaf5 !important;
			}
        ]]></style>
        <script><![CDATA[
        	function disabledBtn(id){
        	    var btn = (typeof id == 'string') ? document.getElementById(id) : id;
        		btn.className = 'item-rbtn-blue disabled-btn';
        		btn.disabled = true;
        	}
        	function enableBtn(id){
        		var btn = (typeof id == 'string') ? document.getElementById(id) : id;
        		btn.className = 'item-rbtn-blue';
        		btn.disabled = false;
        	}
            // 返回
            function inv5010_inv_asn_header_go_back() {
                $('inv5010_asn_create_window').close();
            }
            
            // 保存当前临时数据
            function inv5010_inv_asn_header_save() {
                inv5010_inv_asn_header_update('10');
            }
            
            // 生成送货单
            function inv5010_inv_asn_header_create(id) {
                inv5010_inv_asn_header_update('20', id);
            }
            
            // 生成并提交送货单
            function inv5010_inv_asn_header_submit(id) {
                inv5010_inv_asn_header_update('30', id);
            }
            
            // 保存动作
            function inv5010_inv_asn_header_update(p_operate, id) {
                var headers_ds = $('inv5010_asn_create_header_' + id + '_ds');
                if (!headers_ds.validate()) {
                    return false;
                }
                var header_record = headers_ds.getCurrentRecord();
            
                if (Aurora.isEmpty(header_record.get('ship_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.SHIP_DATE_NOT_NULL}');
                    return false;
                }
            
                if (Aurora.isEmpty(header_record.get('expected_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}');
                    return false;
                }
            
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    ship_date: header_record.get('ship_date'),
                    expected_date: header_record.get('expected_date'),
                    header_desc: header_record.get('header_desc')
                };
            
                var list_ds = $('inv5010_asn_create_line_' + id + '_ds');
                if (!list_ds.validate()) {
                    return false;
                }
                var records = list_ds.getAll();
            
                var lines = [];
                for (var i = 0;i < records.length;i++) {
                    lines.push(records[i].data);
                }
                datas['lines'] = lines;
            
                disabledBtn('inv5010_inv_asn_header_create_btn_' + id);
                disabledBtn('inv5010_inv_asn_header_submit_btn_' + id);
                
                Aurora.Masker.mask($('inv5010_asn_create_window').wrap, '${l:PROMPT.SUBMITING}');
                Aurora.request({
                    url: $('inv5010_asn_create_save_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        //动作类型,10保存，20生成送货单，30提交送货单
                        if (p_operate == '10') {
                            enableBtn('inv5010_inv_asn_header_create_btn_' + id);
               				enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                            Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                            list_ds.query();
            
                        } else if (p_operate == '20') {
                            inv5010_inv_asn_create(id);
                        } else if (p_operate == '30') {
                            inv5010_inv_asn_submit(id);
                        }
                    },
                    failure: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
           				enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    error: function(res) {
                   		enableBtn('inv5010_inv_asn_header_create_btn_' + id);
       					enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            // 生成动作
            function inv5010_inv_asn_create(id) {
                //校验行上的发运数量等信息
                //var lines_ds = $('inv5010_asn_create_line_' + id + '_ds');
                var lines_ds = $('inv5010_asn_create_line_' + id + '_ds');
                if (!lines_ds.validate()) {
                   	enableBtn('inv5010_inv_asn_header_create_btn_' + id);
   					enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                    Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    return false;
                }
                
                var headers_ds = $('inv5010_asn_create_header_' + id + '_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    asn_type_code: header_record.get('asn_type_code')
                };
                
                Aurora.request({
                    url: $('inv5010_asn_create_create_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                        
                        Aurora.showConfirm('${l:PROMPT}', '${l:INV5010.ASN_HAS_BEEN_GENERATED_EDIT_OR_NOT}', function() {
                            new Aurora.Window({
                                id: 'inv5010_asn_edit_lines_link_window',
                                title: '${l:INV5010.EDIT_LINE_INFO}',
                                url: $('inv5010_asn_create_edit_lines_link').getUrl() + '?asn_header_id=' + header_record.get('asn_header_id'),
                                fullScreen: true
                            }).on('beforeclose', function() {
                                // 判断是否还存在未提交的预览送货单
                                $('inv5010_asn_saved_ds').query();
                                var dom = document.getElementById('temp_header_con_' + id + '_id');
                                dom.parentNode.removeChild(dom);
                                showTotalCount(0, -1);
                            });
            
                        }, function() {
                            $('inv5010_asn_saved_ds').query();
                            var dom = document.getElementById('temp_header_con_' + id + '_id');
                            dom.parentNode.removeChild(dom);
                            showTotalCount(0, -1);
                        }, 300, 150);
                    },
                    failure: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    error: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            // 提交动作
            function inv5010_inv_asn_submit(id) {
                //校验行上的发运数量等信息
                var lines_ds = $('inv5010_asn_create_line_' + id + '_ds');
                if (!lines_ds.validate()) {
                    enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                    enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                    Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    return false;
                }
                
                var headers_ds = $('inv5010_asn_create_header_' + id + '_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    asn_type_code: header_record.get('asn_type_code')
                };
                
                Aurora.request({
                    url: $('inv5010_asn_create_submit_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                        $('inv5010_asn_headers_result_ds').query();
                        var dom = document.getElementById('temp_header_con_' + id + '_id');
                        dom.parentNode.removeChild(dom);
                        showTotalCount(0, -1);
                    },
                    failure: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    error: function(res) {
                        enableBtn('inv5010_inv_asn_header_create_btn_' + id);
                        enableBtn('inv5010_inv_asn_header_submit_btn_' + id);
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            function inv5010_asnCreateHeaderDsValidator(record, name, value) {
                var current_date = Aurora.formatDate(new Date());
                value = Aurora.formatDate(value);
            
                //送货日期
                if (name == 'ship_date') {
                    if (value > current_date) {
                        return '${l:INV5010.DELIVERY_DATE_CAN_NOT_LATER_THAN_SYSDATE}';
                    }
                }
            
                //预计到货日期
                if (name == 'expected_date') {
                    if (value < Aurora.formatDate(record.get('ship_date'))) {
                        return '${l:INV5010_EXPECT_DATE_COMPRE_ERROR}';
                    }
                }
                return true;
            }
            
            //暂时
            function inv_not_delievery(value, record, name){
                //asn_line_id
                return '<a href="javascript:deleteDelieveryLine(' + record.get('asn_line_id') + ',' + record.get('asn_header_id') + ');">暂不发</a>';
            }
            function deleteDelieveryLine(asn_line_id, asn_header_id){
                Aurora.showConfirm('提示', '本次是否不发该行物品？', function(){
	                Aurora.Masker.mask(document.getElementById('inv5010_asn_create_' + asn_header_id + '_grid'), '${l:LOADING}');
	                var url = '${/request/@context_path}/autocrud/inv.INV5010.inv_asn_lines_temp/delete';
	                Aurora.request({
	                	url:url,
	                	para:{asn_line_id:asn_line_id},
	                	success:function(){
	                	    Aurora.Masker.unmask(document.getElementById('inv5010_asn_create_' + asn_header_id + '_grid'));
	                	    Aurora.showMessage('提示', '操作成功！');
	                		$('inv5010_asn_create_line_' + asn_header_id + '_ds').query();
	                	}
	                });
	            }, function (){});
            }
            
            function inv5010_asnCreateGridRenderer(value, record, name) {
                var asn_header_id = record.get('asn_header_id');
                if (name == 'operate') {
                    if (record.get('copy_flag') == 'Y') {
                        if (!Aurora.isEmpty(record.get('asn_line_id'))) {
                            return '<a href="javascript:inv5010_asnCreateGridRendererRemove(' + record.id + ',\'' + asn_header_id + '\')">${l:PROMPT.DELETE}</a>';
                        } else {
                            return '<a href="javascript:inv5010_asnCreateGridRendererClear(' + record.id + ',\'' + asn_header_id + '\')">${l:PROMPT.DELETE}</a>';
                        }
                    } else {
                        return '<a href="javascript:inv5010_asnCreateGridRendererSplit(' + record.id + ',\'' + asn_header_id +'\')">${l:INV5010.ASN_SPLIT}</a>';
                    }
                }
            }
            function inv5010_asnCreateGridRendererRemove(record_id, id) {
                var record = $('inv5010_asn_create_line_' + id + '_ds').findById(record_id);
                $('inv5010_asn_create_line_' + id + '_ds').remove(record);
            }
            function inv5010_asnCreateGridRendererClear(record_id, id) {
                var record = $('inv5010_asn_create_line_' + id + '_ds').findById(record_id);
                $('inv5010_asn_create_line_' + id + '_ds').remove(record);
            }
            function inv5010_asnCreateGridRendererSplit(record_id, id) {
                var max_as_line_num = 0;
                var records = $('inv5010_asn_create_line_' + id + '_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    max_as_line_num = max_as_line_num > records[i].get('asn_line_num') ? max_as_line_num : records[i].get('asn_line_num');
                }
                var old_record = $('inv5010_asn_create_line_' + id + '_ds').findById(record_id);
                var new_record = $('inv5010_asn_create_line_' + id + '_ds').create({
                    'asn_header_id': old_record.get('asn_header_id'),
                    'asn_line_id': old_record.get('asn_line_id'),
                    'asn_line_num': max_as_line_num + 1,
                    'require_item_code': old_record.get('require_item_code'),
                    'require_item_name': old_record.get('require_item_name'),
                    'ean_code': old_record.get('ean_code'),
                    'supply_item_code': old_record.get('supply_item_code'),
                    'supply_item_name': old_record.get('supply_item_name'),
                    'segment1': old_record.get('segment1'),
                    'line_num': old_record.get('line_num'),
                    'shipment_num': old_record.get('shipment_num'),
                    'release_num': old_record.get('release_num'),
                    'revision_num': old_record.get('revision_num'),
                    'unit_meas_lookup_code': old_record.get('unit_meas_lookup_code'),
                    'unit_price': old_record.get('unit_price'),
                    'quantity': old_record.get('quantity'),
                    'ship_quantity': old_record.get('ship_quantity'),
                    'need_by_date': old_record.get('need_by_date'),
                    'request_arrival_date': old_record.get('request_arrival_date'),
                    'contacts_info': old_record.get('contacts_info'),
                    'promised_date': old_record.get('promised_date'),
                    'lots_num': old_record.get('lots_num'),
                    'lots_validity_date': old_record.get('lots_validity_date'),
                    'invoice_num': old_record.get('invoice_num'),
                    'serial_num': old_record.get('serial_num'),
                    'line_desc': old_record.get('line_desc'),
                    'comments': old_record.get('comments'),
                    'copy_flag': 'Y'
                });
            }
            
            
            function renderItem_name(value, record, name){
                return '<div style="color: #1960d2;" onmouseout="onMouseOverItemName(event);" onmouseover="onMouseOverItemName(event);">详情</div>';
            }
            function onMouseOverItemName(e){
            	var target, td, content;
            	
            	target = e.target || e.srcElement;
            	while(target.nodeName.toUpperCase() !== 'TD'){
            		target = target.parentNode;
            	}
            	td = target;
            	
            	while (target.className !== 'temp-delivery-details'){
            		target = target.parentNode;
            	}
            	
            	data = (($(target.getAttribute('linedsid'))).findById(td.getAttribute('recordid'))).data;
				floatWindow(td, getFloatWindowContent(data), jDawn.getEvent(e));           	
            	
            }
            function getFloatWindowContent(data){
                var buffer = new Array();
            	buffer[0] = '<p>商品流通码：' + (data.ean_code || '') + '</p>'; 
            	buffer[1] = '<p>客户物品编码：' + (data.require_item_code || '') + '</p>'; 
            	buffer[2] = '<p>供应商物品编码：' + (data.supply_item_code || '') + '</p>';  
            	buffer[3] = '<p>供应商物品名称：<br/>——' + (data.supply_item_name || '') + '</p>'; 
            	buffer[4] = '<p>单位：' + (data.unit_meas_lookup_code || '') + '</p>';  
            	buffer[5] = '<p>需求日期：' + (data.need_by_date || '') + '</p>'; 
            	buffer[6] = '<p>承诺日期：' + (data.promised_date || '') + '</p>'; 
            	buffer[7] = '<p>采购方行备注：' + (data.line_desc || '') + '</p>';
            	buffer[8] = '<p>联系人信息：' + (data.contacts_info || '') + '</p>'; 
            	buffer[9] = '<p>订单号：' + (data.segment1 || '') + '</p>';
            	buffer[10] = '<p>发放号：' + (data.release_num || '') + '</p>';
            	buffer[11] = '<p>行号：' + (data.line_num || '') + '</p>'; 
            	buffer[12] = '<p>发运号：' + (data.shipment_num || '') + '</p>';
            	buffer[13] = '<p>版本号：' + (data.revision_num || '') + '</p>';
            	return buffer.join("");
            }
            
            //悬浮窗口
            function floatWindow(container, content, e){
                //存在就删除
                var fw;
                fw = container.fw;
                
            	if (fw){
            		if (fw.parentNode){
            		    jDawn.removeClass(fw.parentNode, 'fw-active');
            			fw.parentNode.removeChild(fw);
            		}
            		delete container.fw;
            		fw.body.innerHTML = '';
            	}else{
            	    
            	    fw = this.fw;
            		if (!this.fw){
            			fw = createFloatWindow();
            			this.fw = fw;
            		}
            		
            		var x, y, st, h, bh, y0 = - 50;
            		x = parseInt(container.offsetLeft) + parseInt(container.offsetWidth) + 20;
            		bh = parseInt(document.documentElement.clientHeight);
            		y = e.y;
            		
            		st = fw.style;
            		st.visibility = 'hidden';
            		fw.body.innerHTML = content;
            		
            		container.appendChild(fw);
            		container.fw = fw;
            		h = parseInt(fw.offsetHeight);
            		
            		if (bh < h + y){
            			y0 = bh - h + 2 * y0 / 5;
            		}else{
            			y0 = y + y0;
            		}
            		
            		st.left = x + 'px';
            		st.top = y0 + 'px';
            		st.visibility = 'visible';
            		jDawn.addClass(container, 'fw-active');
            		
            	}
            	
            	//创建悬浮窗口
            	function createFloatWindow(){
            	    var w, dom;
            		
            		w = document.createElement('DIV');
        			w.className = 'cloud-float-window';
        			
        			dom = document.createElement('DIV');
        			dom.className = 'fw-back';
        			w.appendChild(dom);
        			w.back = dom;
        			
        			dom = document.createElement('DIV');
        			dom.className = 'fw-body';
        			w.appendChild(dom);
        			w.body = dom;
        			
        			return w;
            	}
            }
            
            //加载事件
            function inv5010_asnCreateLine_loadFun(ds) {
                var records = ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
            
                    //发运数量为0时默认为待发货数量
                    if (record.get('ship_quantity') == 0) {
                        record.set('ship_quantity', record.get('quantity_enable_shipped'));
                    }
            
                    // if (record.get('serial_required_flag') == 'Y') {
                    // record.getMeta().getField('serial_num').setRequired(true);
                    // } else {
                    // record.getMeta().getField('serial_num').setRequired(false);
                    // }
            
                    // if (record.get('lot_required_flag') == 'Y') {
                    // record.getMeta().getField('lots_num').setRequired(true);
                    // record.getMeta().getField('lots_validity_date').setRequired(true);
                    // } else {
                    // record.getMeta().getField('lots_num').setRequired(false);
                    // record.getMeta().getField('lots_validity_date').setRequired(false);
                    // }
                }
            }
            
            function inv5010_asnCreateLineDsValidator(record, name, value) {
                var quantity_enable_shipped = record.get('quantity_enable_shipped');
                if (name == 'ship_quantity') {
                    if (value == 0) {
                        return '${l:INV5010.SHIPMENT_QUANTITY_CAN_NOT_BE_ZERO}';
                    } else {
                        if (value > quantity_enable_shipped) {
                            return '${l:INV5010.SHIP_NOW_CAN_NOT_GREATER_THAN_AVAILABLE}';
                        }
                    }
                }
                return true;
            }
            
            function inv5010_inv_asn_header_attachment(id) {
                //var headers_ds = $('inv5010_asn_create_header_ds');
                var headers_ds = $('inv5010_asn_create_header_' + id + '_ds');
                var header_record = headers_ds.getCurrentRecord();
                var asn_header_id = header_record.get('asn_header_id');
                if (asn_header_id) {
                    new Aurora.Window({
                        id: 'inv5010_asn_create_attachment_file_upload_link_window',
                        title: '${l:HAP_UPLOAD_TITLE}',
                        url: $('inv5010_asn_create_attachment_file_upload_link').getUrl() + '?pkvalue=' + asn_header_id + '&table_name=INV_ASN_HEADERS',
                        width: 500,
                        height: 500
                    });
                }
            }
            
                  
            function inv_operation_records_render(value, record, name) {
                var asn_header_id = record.get('asn_header_id');
                var asn_line_id = record.get('asn_line_id');
                if(Aurora.isEmpty(record.get('asn_line_id'))){
	                asn_line_id = -1;
                }
                return '<a href="javascript:invgo_operation_records(' + asn_header_id + ',' + asn_line_id + ');">${l:PROMPT.OPERATION_RECORD}</a>';
            }
            
            function invgo_operation_records(asn_header_id, asn_line_id) {
                new Aurora.Window({
                    id: 'inv_asn_operation_record_window',
                    title: '${l:PROMPT.OPERATION_RECORD}',
                    url: $('inv5010_asn_operation_record_link').getUrl() + '?asn_header_id=' + asn_header_id + '&asn_line_id=' + asn_line_id,
                    height: 450,
                    width: 600
                });
            
            }
            
            function inv_asn_render(value, record, name){
                if (name == 'asn_number') {
                    return '<a href="javascript:inv_asn_edit_lines_open(' + record.get('asn_header_id') + ');">' + value + '</a>';
                }
            }
            
            function inv_asn_edit_lines_open(asn_header_id) {
                new Aurora.Window({
                    id: 'inv5010_asn_edit_lines_link_window',
                    title: '${l:INV5010.EDIT_LINE_INFO}',
                    url: $('inv5010_asn_edit_header_line_link').getUrl() + '?asn_header_id=' + asn_header_id,
                    fullScreen: true
                });
            }
            
            
            //待发货 提交
            function inv5010_inv_asn_header_edit_submit(){
                var records = $('inv5010_asn_saved_ds').getSelected();
                if(records.length == 0){
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS.UNSELECT_ERROR}');
                	return;
                }
                var datas = [];
                for(var i=0;i<records.length;i++){
                    records[i].set('_status','execute');
                    datas.push(records[i].data);
                }
                //提交AjAX请求
                Aurora.showConfirm('${l:PROMPT}', '${l:INV5010.SURE_TO SUBMIT}', function() {
                    $('inv5010_inv_asn_header_edit_submit_btn').disable();
                    Aurora.Masker.mask(Ext.getBody(), '${l:LOADING}');
                    Aurora.request({
                        url: $('inv5010_asn_edit_header_submit_link').getUrl(),
                        para: datas,
                        success: function() {
                            $('inv5010_inv_asn_header_edit_submit_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
	                        $('inv5010_asn_saved_ds').query();
	                        $('inv5010_asn_headers_result_ds').query();
                        },
                        failure: function() {
                            $('inv5010_inv_asn_header_edit_submit_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            $('inv5010_inv_asn_header_edit_submit_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                });
            }
            //删除
            function inv5010_inv_asn_header_edit_delete(){
                var records = $('inv5010_asn_saved_ds').getSelected();
                if(records.length == 0){
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS.UNSELECT_ERROR}');
                	return;
                }
                var datas = [];
                for(var i=0;i<records.length;i++){
                    records[i].set('_status','delete');
                    datas.push(records[i].data);
                }
                //提交AjAX请求
                Aurora.showConfirm('${l:PROMPT}', '${l:INV5010.SURE_TO DELETE}', function() {
                    $('inv5010_inv_asn_header_edit_delete_btn').disable();
                    Aurora.Masker.mask(Ext.getBody(), '${l:LOADING}');
                    Aurora.request({
                        url: $('inv5010_asn_edit_header_delete_link').getUrl(),
                        para: datas,
                        success: function() {
                            $('inv5010_inv_asn_header_edit_delete_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
	                        $('inv5010_asn_saved_ds').query();
                        },
                        failure: function() {
                            $('inv5010_inv_asn_header_edit_delete_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            $('inv5010_inv_asn_header_edit_delete_btn').enable();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                });
            }
            //勾选数据导出
            function inv5010_asnEditExportSelectFunction() {
                var records = $('inv5010_asn_saved_ds').getSelected();
                if (records.length == 0) {
                    Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SELECT_ONE_RECORD_AT_LEAST}');
                    return;
                } else {
                    new Aurora.Window({
                        id: 'inv5010_asnEditExport_window',
                        url: '${/request/@context_path}/modules/inv/INV5010/inv_asn_create_export.screen',
                        title: '${l:HAP_EXPORT}',
                        width: 1000,
                        height: 500
                    });
                }
            }
            
            //刷新导入数据
            function queryDelieveryDs(id){
            	$('inv5010_asn_create_line_' + id + '_ds').query();
            }
            function openImportData(){
            	window.parent.openFunction('${/request/@context_path}/modules/inv/INV5010/inv_asn_import.screen', '导入数据');
            }
            
            function inv7020_asnHeaderGridRenderer(value, record, name) {
                return '<a href="javascript:inv7020_asnDocumentView_open(' + record.get('asn_header_id') + ');">' + value + '</a>';
            }
            function inv7020_asnDocumentView_open(asn_header_id) {
                new Aurora.Window({
                    id: 'inv_asn_document_view_window',
                    title: '${l:INV_ASN_HEDER_DETAIL_TITLE}',
                    url: '${/request/@context_path}/modules/inv/PUBLIC/inv_asn_document_vendor_view.screen?asn_header_id=' + asn_header_id,
                    fullScreen: true
                });
            }
            
            
            //加载等待发货数量
            function onLoadTODelievery(ds){               
                var totalCount = ds.totalCount;
                if (ds == $('inv_delievery_headers_ds')){
                    showTotalCount(0, 0, totalCount);
                }else if(ds == $('inv5010_asn_saved_ds')){
                    showTotalCount(1, 0, totalCount);
                }else{
                    showTotalCount(2, 0, totalCount);
                }
            }
            function showTotalCount(index, change, totalCount){
    			var dom = document.getElementById('delievery_cloud_tab_id').children[0].children[index];
        	 	if (change !== 0){
        	 		totalCount = (dom.totalCount || 0) + change;
        	 	}	
        	 	dom.totalCount = totalCount;
        	 	
        	 	if (index == 0){
                	dom.innerHTML = '待生成 （' + totalCount + '）';
        	 	}else if (index == 1){
                	dom.innerHTML = '待提交 （' + totalCount + '）';
        	 	}else{
                	dom.innerHTML = '已提交 （' + totalCount + '）';
        	 	}
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="inv_delievery_headers_ds">
                <a:datas dataSource="/model/inv_asn_headers_temp_path"/>
                <a:events>
                    <a:event name="load" handler="onLoadTODelievery"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="inv5010_asn_saved_ds" autoCount="true" autoQuery="true" fetchAll="true" model="pur.newPur.inv_asn_saved_query" queryUrl="${/request/@context_path}/autocrud/pur.newPur.inv_asn_saved_query/query?pur_headers=${/parameter/@pur_headers}" selectable="true">
                <a:events>
                    <a:event name="load" handler="onLoadTODelievery"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="inv5010_asn_headers_result_ds" autoQuery="true" fetchAll="true" model="pur.newPur.inv_asn_query" queryUrl="${/request/@context_path}/autocrud/pur.newPur.inv_asn_query/query?pur_headers=${/parameter/@pur_headers}" selectable="true">
                <a:events>
                    <a:event name="load" handler="onLoadTODelievery"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="inv5010_asn_create_type_list_ds" autoQuery="true" fetchAll="true" model="public.asn_type_lov" queryUrl="${/request/@context_path}/autocrud/public.asn_type_lov/query?asn_create=asn_create"/>
            <a:placeHolder id="dynamic_asn_create_dataset"/>
        </a:dataSets>
        <a:screenBody marginWidth="70">
            <!--  <div class="delivery-header-con">
                <button class="item-rbtn-blue" onclick="inv5010_inv_asn_header_go_back();" style="margin-left:20px;" width="100"><![CDATA[${l:HAP_BACK}]]></button>
            </div> -->
            <button class="cloud-tab-btn item-rbtn-blue" onclick="inv5010_inv_asn_header_go_back();" style="margin-left:20px;" width="100"><![CDATA[${l:HAP_BACK}]]></button>
            <div id="delievery_cloud_tab_id" class="cloud-tab">
                <div class="tab-title">
                    <span class="active"><![CDATA[待创建（0）]]></span>
                    <span class=""><![CDATA[待提交（0）]]></span>
                    <span class=""><![CDATA[已提交（0）]]></span>
                </div>
                <div class="cloud-tab-list">
                    <div class="cloud-tab-item active">
                        <a:placeHolder id="dynamic_asn_create_grid"/>
                    </div>
                    <div class="cloud-tab-item">
                        <a:screenTopToolbar>
                            <a:toolbarButton id="inv5010_inv_asn_header_edit_submit_btn" click="inv5010_inv_asn_header_edit_submit" text="PROMPT.SUBMIT" width="100"/>
                            <a:toolbarButton id="inv5010_inv_asn_header_edit_delete_btn" click="inv5010_inv_asn_header_edit_delete" text="PROMPT.DELETE" width="100"/>
                            <a:gridButton bind="inv5010_asn_saved_ds_grid" className="item-rbtn-blue button-excel" type="excel" width="100"/>
                            <!-- <a:toolbarButton click="inv5010_asnEditExportSelectFunction" style="margin-left:5px;" text="PROMPT.CHECKED_EXPORT" width="100"/> -->
                        </a:screenTopToolbar>
                        <a:grid id="inv5010_asn_saved_ds_grid" autoAppend="false" bindTarget="inv5010_asn_saved_ds" height="400" marginWidth="70" navBar="true" width="1000">
                            <a:columns>
                                <a:column name="asn_number" align="center" prompt="INV_ASN_HEADERS.ASN_NUMBER" renderer="inv_asn_render" sortable="true" width="100"/>
                                <a:column name="asn_type_name" align="center" prompt="INV_ASN_HEADERS.ASN_TYPE" sortable="true" width="100"/>
                                <a:column name="vendor_name" align="left" prompt="PUR_VENDORS.VENDOR" sortable="true" width="100"/>
                                <a:column name="vendor_company_name" align="left" prompt="FND_COMPANIES.VENDOR_COMPANY" sortable="true" width="100"/>
                                <a:column name="vendor_site_name" align="left" prompt="PUR_HEADERS_ALL.VENDOR_SITE" sortable="true" width="100"/>
                                <a:column name="company_name" align="left" prompt="INV_ASN_HEADERS.COMPANY_ID" sortable="true" width="100"/>
                                <a:column name="actual_receiver_name" align="left" prompt="PUR_LINES_ALL.ACTUAL_RECEIVER_NAME" sortable="true" width="100"/>
                                <a:column name="ship_to_organization_name" align="left" prompt="INV_ASN_HEADERS.SHIP_TO_ORGANIZATION_ID" sortable="true" width="100"/>
                                <a:column name="location_name" align="left" prompt="INV_ASN_HEADERS.LOCATION_ID" sortable="true" width="80"/>
                                <a:column name="creation_date_fmt" align="center" prompt="INV_ASN_HEADERS.CREATION_DATE" sortable="true" width="80"/>
                            </a:columns>
                        </a:grid>
                    </div>
                    <div class="cloud-tab-item">
                        <a:grid autoAppend="false" bindTarget="inv5010_asn_headers_result_ds" height="460" marginWidth="70" navBar="true" width="850">
                            <a:columns>
                                <a:column name="asn_number" align="left" prompt="INV_ASN_HEADERS.ASN_NUMBER" renderer="inv7020_asnHeaderGridRenderer" sortable="true" width="100"/>
                                <a:column name="asn_type_name" align="left" prompt="INV_ASN_HEADERS.ASN_TYPE" sortable="true" width="100"/>
                                <a:column name="company_name" align="left" prompt="FND_COMPANIES.CLIENT" sortable="true" width="100"/>
                                <a:column name="creation_date_fmt" align="left" prompt="INV_ASN_HEADERS.CREATION_DATE" sortable="true" width="100"/>
                                <a:column name="ship_date_fmt" align="left" prompt="INV_ASN_HEADERS.SHIP_DATE" sortable="true" width="100"/>
                                <a:column name="location_name" align="left" prompt="INV_ASN_HEADERS.LOCATION_ID" sortable="true" width="100"/>
                                <a:column name="ship_to_organization_name" align="left" prompt="INV_ASN_HEADERS.SHIP_TO_ORGANIZATION_ID" sortable="true" width="100"/>
                                <a:column name="operation_record" align="center" prompt="PROMPT.OPERATION_RECORD" renderer="inv_operation_records_render" width="100"/>
                            </a:columns>
                            <!-- <a:events>
	                            <a:event name="render" handler="inv7020_asn_codes_grid_render"/>
	                        </a:events> -->
                        </a:grid>
                    </div>
                </div>
            </div>
        </a:screenBody>
        <script><![CDATA[
        	initCloudTab('delievery_cloud_tab_id');
        	function initCloudTab(tab){
        		var tab_con = (typeof tab == 'string') ? document.getElementById(tab) : tab;
        		var childrenTitle = tab_con.children[0].children;
        		var childrenContent = tab_con.children[1].children;
        		var l = childrenTitle.length, i, dom;
        		
        		for (i = 0; i < l; i++){
        			dom = childrenTitle[i];
        			if (dom.className.indexOf('active') != -1){
        				tab_con.activeSign = i;
        			}
        			
        			dom.sign = i;
        			dom.onclick = onclicklink;
        		}
        		
        		
        		function onclicklink(e){
        		    var target = e.target || e.srcElement;
        		    var currentSign, lastSign;
        		    
        		    while (typeof target.sign != 'number'){
        		    	target = target.parentNode;
        		    }
        		    
        		    lastSign = tab_con.activeSign;
        		    currentSign = target.sign;
        		    
        		    if (lastSign == currentSign){
        		    	return;
        		    }else{
        		    	jDawn.addClass(target, 'active');
        		    	jDawn.addClass(childrenContent[currentSign], 'active');
        		    	
        		    	jDawn.removeClass(childrenTitle[lastSign], 'active');
        		    	jDawn.removeClass(childrenContent[lastSign], 'active');
        		    	
        		    	tab_con.activeSign = currentSign;
        		    }
        		}
        	}
        ]]></script>
    </a:view>
</a:screen>
