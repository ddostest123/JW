<?xml version="1.0" encoding="UTF-8"?>
<a:service xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="a.api_code=&apos;PRODUCT_SELL_PRICE&apos;" fetchAll="true" model="api.PUBLIC.jd_sku_method" rootPath="mes"/>
        <a:model-execute model="GoingBuy.JD.jd_order_headers_save" rootPath="third_order_number"/>
        <a:model-query model="api.PUBLIC.jd_to_settle" rootPath="third_order"/>
        <!-- <a:model-query model="api.PUBLIC.jd_product_detail_main" rootPath="jd_detail"/> -->
        <!-- <a:model-query model="api.PUBLIC.jd_third_order" rootPath="third_order"/> -->
        <s:server-script import="request.js"><![CDATA[
            var record = $ctx.model.getChild('mes').getChildren()[0];
            var order_lines = $ctx.model.getChild('third_order').getChildren();
            var v_str = record.url + record.app_key + record.access_token + record.timestamp;
            var order = '&format=json&v=1.0&method=biz.order.unite.submit';
            var o_str = v_str + order;
            var sku = [];
            for(i=0; i<order_lines.length; i++){
	            var param = {
		            skuId: order_lines[i].sku,
		            num: order_lines[i].quantity
	            }
	            sku.push(param);
            }
            
            //接收参数
            var thirdOrder = $ctx.parameter.third_order_number;
            var name = $ctx.get('/parameter/@name');
            var province = $ctx.get('/parameter/@province');
            var city = $ctx.get('/parameter/@city');
            var county = $ctx.get('/parameter/@county');
            var town = $ctx.get('/parameter/@town');
            var address = $ctx.get('/parameter/@address');
            var mobile = $ctx.get('/parameter/@mobile');
            var email = $ctx.get('/parameter/@email');
            var remark = $ctx.get('/parameter/@remark');				// 订单备注
            var invoiceState = $ctx.get('/parameter/@invoiceState');	// 开票方式
            var invoiceType = $ctx.get('/parameter/@invoiceType');		// 发票类型
            var selectedInvoiceTitle = $ctx.get('/parameter/@selectedInvoiceTitle');	// 开票单位
            var companyName = $ctx.get('/parameter/@companyName');		// 发票抬头
            var invoiceContent = $ctx.get('/parameter/@invoiceContent');	// 发票内容
            var paymentType = $ctx.get('/parameter/@paymentType');		// 支付方式
            var isUseBalance = $ctx.get('/parameter/@isUseBalance');	// 是否预存款下单
            var submitState = $ctx.get('/parameter/@submitState');		// 是否预占库存
            // println("是否预存款下单:" + isUseBalance);
            var contact_id = $ctx.get('/parameter/@contact_id');		// 联系人id
            var bill_to_id = $ctx.get('/parameter/@bill_to_id');		// 开票地址id
            var ship_to_id = $ctx.get('/parameter/@ship_to_id');		// 送货地址
            // var bill_to_desc = $ctx.get('/parameter/@bill_to_desc');	// 开票地址描述
            // var ship_to_desc = $ctx.get('/parameter/@ship_to_desc');	// 送货地址描述
            
            var shopping_cart_id = $ctx.get('/parameter/@shopping_cart_id');	
            var shopping_cart_detail_id = $ctx.get('/parameter/@shopping_cart_detail_id');
            
            //返回生成的三方订单编号及京东订单号(默认为空)
			$ctx.parameter.thirdOrder = '';
			$ctx.parameter.jdOrderId = '';
            
            //测试参数
            // var thirdOrder = $ctx.model.getChild('third_order_number').getChildren()[0].third_order_number; //11004577;
            // var name = "测试订单1";
            // var province = 2;
            // var city = 2833;
            // var county = 51955;
            // var town = 0;
            // var address = "汇联路";
            // var mobile = "18910024183";
            // var email = "liuyunfei%40jd.com";
            // var remark = "测试数据";
            // var invoiceState = 2;
            // var invoiceType = 1;
            // var selectedInvoiceTitle = "5";
            // var companyName = "汉得";
            // var invoiceContent = 3;
            // var paymentType = 5;
            // var isUseBalance = 0;
            // var submitState = 0;
            
            // var param = {
                // skuId: 569172,
                // num: 1
            // }
            // sku.push(param);
            
            var o_pre_str = '&param_json={"thirdOrder":';
            
            // var o_mid_str = thirdOrder + ',' + JSON.stringify(sku) + ',"name":"' + name + '","province":' + province + ',"city":' + city +
            // ',"county":' + county + ',"town":' + town + ',"address":"' + address + '","zip":' + zip + ',"phone":"' + phone + '",mobile":"' + mobile +
            // '","email":"' + email + '","unpl":"' + unpl + '","remark":"' + remark + '","invoiceState":' + invoiceState + ',"invoiceType":"' + invoiceType +
            // '","invoiceName":"' + invoiceName + '","invoicePhone":"' + invoicePhone + '","invoiceProvice":"' + invoiceProvice + '","invoiceCity":"' + invoiceCity +
            // '","invoiceCounty":"' + invoiceCounty + '","invoiceTown":"' + invoiceTown + '","invoiceAddress":"' + invoiceAddress + '","regCompanyName":"' + regCompanyName +
            // '","regCode":"' + regCode + '","regAddr":"' + regAddr + '","regPhone":"' + regPhone + '","regBank":"' + regBank + '","regBankAccount":"' + regBankAccount + '","selectedInvoiceTitle":"' + selectedInvoiceTitle +
            // '","companyName":"' + companyName + '","invoiceContent":"' + invoiceContent + '","paymentType":' + paymentType + ',"isUseBalance":' + isUseBalance + ',"submitState":' + submitState +
            // ',"doOrderPriceMode":"' + doOrderPriceMode + '","orderPriceSnap":"' + orderPriceSnap;
            
            var o_mid_str = thirdOrder + ',"sku":' + JSON.stringify(sku) + ',"name":"' + name + '","province":' + province + ',"city":' + city + ',"county":' + county + ',"town":' + town + ',"address":"' + address + '","mobile":"' + mobile + '","email":"' + email + '","remark":"' + remark + '","invoiceState":' + invoiceState + ',"invoiceType":"' + invoiceType + '","selectedInvoiceTitle":"' + selectedInvoiceTitle + '","companyName":"' + companyName + '","invoiceContent":"' + invoiceContent + '","paymentType":' + paymentType + ',"isUseBalance":' + isUseBalance + ',"submitState":' + submitState;
            var o_last_str = '}';
            var o_api_url = o_str + o_pre_str + o_mid_str + o_last_str;
            
            // println(o_api_url);
            
            //统一下单接口请求
            request({
                url: o_api_url,
                //para: para,
                success: function(args) {
                    // println("QQ采购：");
                    var result = args.biz_order_unite_submit_response.result;
                    // var resultCode = args.biz_order_unite_submit_response.resultCode;
                    // println("系统代码：" + resultCode);
                    if (result) {
                        var jdOrderId = result.jdOrderId;
                        var freight = result.freight;
                        var orderPrice = result.orderPrice;
                        var orderNakedPrice = result.orderNakedPrice;
                        var orderTaxPrice = result.orderTaxPrice;
                        var order_sku = result.sku;
                        
                        //统一下单接口请求成功,根据接口返回信息生成订单
                        
                        //生成订单头
                        var res_order_header = {
                            'third_order_number': thirdOrder,
                            'jdOrderId': jdOrderId,
                            'freight': freight,
                            'orderPrice': orderPrice,
                            'orderNakedPrice': orderNakedPrice,
                            'orderTaxPrice': orderTaxPrice,
                            'contact_id': contact_id,
                            'bill_to_id': bill_to_id,
                            'ship_to_id': ship_to_id,
	                        'invoiceState': invoiceState,
                            'invoiceType': invoiceType,
                            'selectedInvoiceTitle': selectedInvoiceTitle,
                            'companyName': companyName,
                            'invoiceContent': invoiceContent,
                            'paymentType': paymentType,
                            'isUseBalance': isUseBalance,
	                        'submitState': submitState,
	                        'order_status': 'UNPAID',
                			'orderType': ''
                        };
                        $bm('GoingBuy.JD.jd_order_headers_save').insert(res_order_header);
                        
                        //生成订单行
                        for (var i = 0;i < order_sku.length;i++) {
                            var freight_line = 0;
                            if (order_sku[i].freight){
                                freight_line = order_sku[i].freight;
                            }
                            var res_order_line = {
	                            'order_hds_id': $ctx.parameter.order_hds_id,
	                            'skuId': order_sku[i].skuId,
	                            'num': order_sku[i].num,
	                            'category': order_sku[i].category,
	                            'price': order_sku[i].price,
	                            'name': order_sku[i].name,
	                            'tax': order_sku[i].tax,
	                            'taxPrice': order_sku[i].taxPrice,
	                            'nakedPrice': order_sku[i].nakedPrice,
	                            'type': order_sku[i].type,
	                            'oid': order_sku[i].oid,
	                            'freight': freight_line
	                        };
	                        $bm('GoingBuy.JD.jd_order_lines_save').insert(res_order_line);
                        }
                        
                        //订单生成成功之后,删除购物车数据
                        var res_delete_cart = {
                            'shopping_cart_id': shopping_cart_id,
                            'shopping_cart_detail_id': shopping_cart_detail_id
                        };
                        $bm('GoingBuy.JD.jd_order_refresh_shopping_cart').delete(res_delete_cart);
                        
                        //返回生成的三方订单编号及京东订单号
                        $ctx.parameter.thirdOrder = thirdOrder;
                        $ctx.parameter.jdOrderId = jdOrderId;
                    
                    } else {
                        raise_app_error(args.biz_order_unite_submit_response.resultMessage);
                    }
            
                    // println(datas);
            
                },
                failure: function(args) {
                    raise_app_error(args.error.message);
                }
            });
        ]]></s:server-script>
        <p:echo/>
    </a:init-procedure>
    <a:service-output output="/parameter/"/>
</a:service>
