<?xml version="1.0" encoding="UTF-8"?>
<a:service xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="api.PUBLIC.jd_refresh_token" rootPath="token"/>
        <s:server-script import="request.js"><![CDATA[
            var token = $ctx.model.getChild('token').getChildren();
            //将Utf8的汉字转换为编码
            
            function EncodeUtf8(s1) {
                var s = escape(s1);
                var sa = s.split("%");
                var retV = "";
                if (sa[0] != "") {
                    retV = sa[0];
                }
                for (var i = 1;i < sa.length;i++) {
                    if (sa[i].substring(0, 1) == "u") {
                        retV += Hex2Utf8(Str2Hex(sa[i].substring(1, 5)));
                    } else retV += "%" + sa[i];
                }
                return retV;
            }
            
            function Str2Hex(s) {
                var c = "";
                var n;
                var ss = "0123456789ABCDEF";
                var digS = "";
                for (var i = 0;i < s.length;i++) {
                    c = s.charAt(i);
                    n = ss.indexOf(c);
                    digS += Dec2Dig(eval(n));
                }
                return digS;
            }
            
            function Dec2Dig(n1) {
                var s = "";
                var n2 = 0;
                for (var i = 0;i < 4;i++) {
                    n2 = Math.pow(2, 3 - i);
                    if (n1 >= n2) {
                        s += '1';
                        n1 = n1 - n2;
                    } else s += '0';
                }
                return s;
            }
            
            function Dig2Dec(s) {
                var retV = 0;
                if (s.length == 4) {
                    for (var i = 0;i < 4;i++) {
                        retV += eval(s.charAt(i)) * Math.pow(2, 3 - i);
                    }
                    return retV;
                }
                return -1;
            }
            
            function Hex2Utf8(s) {
                var retS = "";
                var tempS = "";
                var ss = "";
                if (s.length == 16) {
                    tempS = "1110" + s.substring(0, 4);
                    tempS += "10" + s.substring(4, 10);
                    tempS += "10" + s.substring(10, 16);
                    var sss = "0123456789ABCDEF";
                    for (var i = 0;i < 3;i++) {
                        retS += "%";
                        ss = tempS.substring(i * 8, (eval(i) + 1) * 8);
                        retS += sss.charAt(Dig2Dec(ss.substring(0, 4)));
                        retS += sss.charAt(Dig2Dec(ss.substring(4, 8)));
                    }
                    return retS;
                }
                return "";
            }
            var test = EncodeUtf8(token[0].user_name);
            println("中国-----" + test);
            
            var api_url = [];
            for (i = 0;i < token.length;i++) {
                api_url.push(token[i].url + '?grant_type=password' + token[i].app_key + token[i].app_secret + token[i].state + '&username=' + EncodeUtf8(token[i].user_name) + token[i].password);
               
               //println(api_url[1]);
               request({
                    url: api_url[i],
                    //para: ,
                    success: function(args) {
                    println(args.access_token);
                        var rec = {
                            'bg_jduser_id': token[i].bg_jduser_id,
                            'access_token': args.access_token
                        };
                        $bm("api.PUBLIC.jd_refresh_token").update(rec);
                    },
                    failure: function(args) {
                        raise_app_error(args.error.message);
                    }
                });
            }
           
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output/>
</a:service>
