<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 代理送货，送货单临时头数据查询BM
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query model="public.get_system_info" rootPath="srv5110_current_date_rp"/>
    </a:init-procedure>
    <a:view>
        <a:link id="srv5110_asn_create_save_link" url="${/request/@context_path}/modules/srv/SRV5110/srv_asn_create_save.svc"/>
        <a:link id="srv5110_asn_create_submit_link" url="${/request/@context_path}/modules/srv/SRV5110/srv_asn_create_submit.svc"/>
        <a:link id="srv5110_asn_create_create_link" url="${/request/@context_path}/modules/srv/SRV5110/srv_asn_create_create.svc"/>
        <a:link id="srv5110_asn_create_edit_lines_link" url="${/request/@context_path}/modules/srv/SRV5110/srv_asn_edit_lines.screen"/>
        <script><![CDATA[
        
            // 返回
            function srv5110_srv_asn_header_go_back() {
                $('srv5110_asn_create_window').close();
            }
            
            // 保存当前临时数据
            function srv5110_srv_asn_header_save() {
                srv5110_srv_asn_header_update('10');
            }
            
            // 生成送货单
            function srv5110_srv_asn_header_create() {
                srv5110_srv_asn_header_update('20');
            }
            
            // 生成并提交送货单
            function srv5110_srv_asn_header_submit() {
                srv5110_srv_asn_header_update('30');
            }
            
            // 保存动作
            function srv5110_srv_asn_header_update(p_operate) {
            
                var headers_ds = $('srv5110_asn_create_header_ds');
                if (!headers_ds.validate()) {
                    return false;
                }
                var header_record = headers_ds.getCurrentRecord();
            
                if (Aurora.isEmpty(header_record.get('ship_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.SHIP_DATE_NOT_NULL}');
                    return false;
                }
            
                if (Aurora.isEmpty(header_record.get('expected_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}');
                    return false;
                }
            
                var datas;
            
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    ship_date: header_record.get('ship_date'),
                    expected_date: header_record.get('expected_date'),
                    transit_receive_date: header_record.get('transit_receive_date'),
                    transit_shipment_date: header_record.get('transit_shipment_date'),
                    header_desc: header_record.get('header_desc')
                };
            
                var list_ds = $('srv5110_asn_create_line_ds');
                if (!list_ds.validate()) {
                    return false;
                }
                var records = list_ds.getAll();
            
                var lines = [];
                for (var i = 0;i < records.length;i++) {
                    lines.push(records[i].data);
                }
                datas['lines'] = lines;
            
                Aurora.Masker.mask($('srv5110_asn_create_window').wrap, '${l:PROMPT.SUBMITING}');
                Aurora.request({
                    url: $('srv5110_asn_create_save_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        //动作类型,10保存，20生成送货单，30提交送货单
                        if (p_operate == '10') {
                            Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                            list_ds.query();
                            
                        } else if(p_operate == '20'){
                            srv5110_srv_asn_create();
                            
                        } else if(p_operate == '30'){
                            srv5110_srv_asn_submit();
                        }
                    },
                    failure: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    error: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            // 生成动作
            function srv5110_srv_asn_create() {
                //校验行上的发运数量等信息
                var lines_ds = $('srv5110_asn_create_line_ds');
                var headers_ds = $('srv5110_asn_create_header_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id')
                };
                Aurora.request({
                    url: $('srv5110_asn_create_create_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                        Aurora.showConfirm('${l:PROMPT}','送货单已生成，是否继续进行编辑？点击“确定”继续进行编辑；点击“取消”退出当前送货单，操作其他单据!',function(){
                            new Aurora.Window({
			                    id: 'srv5110_asn_edit_lines_link_window',
			                    title: '送货单行信息编辑',
			                    url: $('srv5110_asn_create_edit_lines_link').getUrl() + '?asn_header_id=' + header_record.get('asn_header_id'),
			                    fullScreen: true
			                }).on('beforeclose',function(){
			                    // 判断是否还存在未提交的预览送货单
		                        if (res.result.last_flag == 'Y') {
		                            srv5110_srv_asn_header_go_back();
		                            srv5110_asn_headers_back();
		                            srv5110_query();
		                        } else {
		                            srv5110_srv_asn_header_go_back();
		                            srv5110_asn_headers_query();
		                        }
			                });
			                
                        },function(){
                            // 判断是否还存在未提交的预览送货单
	                        if (res.result.last_flag == 'Y') {
	                            srv5110_srv_asn_header_go_back();
	                            srv5110_asn_headers_back();
	                            srv5110_query();
	                        } else {
	                            srv5110_srv_asn_header_go_back();
	                            srv5110_asn_headers_query();
	                        }
                        },300,150);
                    },
                    failure: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    error: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            // 提交动作
            function srv5110_srv_asn_submit() {
                //校验行上的发运数量等信息
                var lines_ds = $('srv5110_asn_create_line_ds');
                if (!lines_ds.validate()) {
                    Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    return false;
                }
                var headers_ds = $('srv5110_asn_create_header_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id')
                };
                Aurora.request({
                    url: $('srv5110_asn_create_submit_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                        // 判断是否还存在未提交的预览送货单
                        if (res.result.last_flag == 'Y') {
                            srv5110_srv_asn_header_go_back();
                            srv5110_asn_headers_back();
                            srv5110_query();
                        } else {
                            srv5110_srv_asn_header_go_back();
                            srv5110_asn_headers_query();
                        }
                    },
                    failure: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    error: function(res) {
                        Aurora.Masker.unmask($('srv5110_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            function srv5110_asnCreateHeaderDsValidator(record, name, value) {
                var current_date = Aurora.formatDate(new Date());
                value = Aurora.formatDate(value);
            
                //送货日期
                // if (name == 'ship_date') {
                    // if (value > current_date) {
                        // return '发货日期必须早于或者等于系统当前日期';
                    // }
                // }
            
                //预计到货日期
                if (name == 'expected_date') {
                    if (value < Aurora.formatDate(record.get('ship_date'))) {
                        return '${l:SRV5110_EXPECT_DATE_COMPRE_ERROR}';
                    }
                }
                
                // //中转接收日期
                // if(name == 'transit_receive_date'){
                    // if (value > current_date) {
                        // return '发货日期必须早于或者等于系统当前日期';
                    // }
                // }
                
                // //中转发运日期
                // if(name == 'transit_shipment_date'){
                    // if (value > current_date) {
                        // return '发货日期必须早于或者等于系统当前日期';
                    // }
                // }
                
                return true;
            }
            
            
            //打印
            function srv5110_srv_asn_header_go_submit_print() {
                var ds = $('srv5110_asn_create_header_ds');
                var reocrd = ds.getAt(0);
                Aurora.request({
                    url: $('srv5110_asn_submit_link').getUrl(),
                    para: reocrd.data,
                    success: function(res) {
                        srv5110_srv_asn_header_go_print();
                    },
                    scope: this
                });
            }
            
            function srv5110_srv_asn_header_go_print() {
                var ds = $('srv5110_asn_create_line_ds');
                var records = ds.getAll();
                var datas = [];
                for (var i = 0;i < records.length;i++) {
                    datas.push(records[i].data);
                }
                Aurora.Masker.mask(Ext.getBody());
                Aurora.request({
                    url: $('srv5110_asn_submit_print_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        var header_ds = $('srv5110_asn_create_header_ds');
                        var asn_header_id = header_ds.getCurrentRecord().get('asn_header_id');
                        window.open($('srv5110_asn_print_link').getUrl() + '?asn_header_id=' + asn_header_id, 'srv5110_asn_print_win');
                        // if (res.result.last_flag == 'Y') {
                        // srv5110_srv_asn_query_reset();
                        // $('srv5110_asn_create_window').close();
                        // $('srv5110_asn_header_window').close();
                        // $('srv5110_asn_result_ds').query();
                        // } else {
                        // $('srv5110_asn_headers_result_ds').query();
                        // $('srv5110_asn_create_window').close();
                        // }
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    failure: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    error: function(res) {
                        Aurora.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            function srv5110_asnCreateGridRenderer(value, record, name) {
                if (name == 'operate') {
                    if (record.get('copy_flag') == 'Y') {
                        if (!Aurora.isEmpty(record.get('asn_line_id'))) {
                            return '<a href="javascript:srv5110_asnCreateGridRendererRemove(' + record.id + ')">删除</a>';
                        } else {
                            return '<a href="javascript:srv5110_asnCreateGridRendererClear(' + record.id + ')">删除</a>';
                        }
                    } else {
                        return '<a href="javascript:srv5110_asnCreateGridRendererSplit(' + record.id + ')">拆分</a>';
                    }
                }
            }
            
            function srv5110_asnCreateGridRendererRemove(record_id) {
                var record = $('srv5110_asn_create_line_ds').findById(record_id);
                $('srv5110_asn_create_line_ds').remove(record);
            }
            
            function srv5110_asnCreateGridRendererClear(record_id) {
                var record = $('srv5110_asn_create_line_ds').findById(record_id);
                $('srv5110_asn_create_line_ds').remove(record);
            }
            
            function srv5110_asnCreateGridRendererSplit(record_id) {
                var max_as_line_num = 0;
                var records = $('srv5110_asn_create_line_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    max_as_line_num = max_as_line_num > records[i].get('asn_line_num') ? max_as_line_num : records[i].get('asn_line_num');
                }
                var old_record = $('srv5110_asn_create_line_ds').findById(record_id);
                var new_record = $('srv5110_asn_create_line_ds').create({
                    'asn_header_id': old_record.get('asn_header_id'),
                    'asn_line_id': old_record.get('asn_line_id'),
                    'asn_line_num': max_as_line_num + 1,
                    'require_item_code': old_record.get('require_item_code'),
                    'require_item_name': old_record.get('require_item_name'),
                    'supply_item_code': old_record.get('supply_item_code'),
                    'supply_item_name': old_record.get('supply_item_name'),
                    'segment1': old_record.get('segment1'),
                    'line_num': old_record.get('line_num'),
                    'shipment_num': old_record.get('shipment_num'),
                    'release_num': old_record.get('release_num'),
                    'revision_num': old_record.get('revision_num'),
                    'unit_meas_lookup_code': old_record.get('unit_meas_lookup_code'),
                    'unit_price': old_record.get('unit_price'),
                    'quantity': old_record.get('quantity'),
                    'ship_quantity': old_record.get('ship_quantity'),
                    'need_by_date': old_record.get('need_by_date'),
                    'request_arrival_date': old_record.get('request_arrival_date'),
                    'contacts_info': old_record.get('contacts_info'),
                    'promised_date': old_record.get('promised_date'),
                    'lots_num': old_record.get('lots_num'),
                    'lots_validity_date': old_record.get('lots_validity_date'),
                    'invoice_num': old_record.get('invoice_num'),
                    'packet_quantity': old_record.get('packet_quantity'),
                    'serial_num': old_record.get('serial_num'),
                    'comments': old_record.get('comments'),
                    'copy_flag': 'Y'
                });
            }
            
            //加载事件
            
            function srv5110_asnCreateLine_loadFun(ds) {
                var records = ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
            
                    //发运数量为0时默认为待发货数量
                    if (record.get('ship_quantity') == 0) {
                        record.set('ship_quantity', record.get('quantity_enable_shipped'));
                    }
            
                    // if (record.get('serial_required_flag') == 'Y') {
                        // record.getMeta().getField('serial_num').setRequired(true);
                    // } else {
                        // record.getMeta().getField('serial_num').setRequired(false);
                    // }
            
                    // if (record.get('lot_required_flag') == 'Y') {
                        // record.getMeta().getField('lots_num').setRequired(true);
                        // record.getMeta().getField('lots_validity_date').setRequired(true);
                    // } else {
                        // record.getMeta().getField('lots_num').setRequired(false);
                        // record.getMeta().getField('lots_validity_date').setRequired(false);
                    // }
                }
            }
            
            function srv5110_asnCreateLineDsValidator(record, name, value) {
                var quantity_enable_shipped = record.get('quantity_enable_shipped');
                if (name == 'ship_quantity') {
                    if (value == 0) {
                        return '发运数量不能为0';
                    } else {
                        if (value > quantity_enable_shipped) {
                            return '本次发运数量不能大于可发运数量';
                        }
                    }
                }
                return true;
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="srv5110_asn_create_header_ds" autoPageSize="true" autoQuery="true" model="srv.SRV5110.srv_asn_headers_temp" queryUrl="${/request/@context_path}/autocrud/srv.SRV5110.srv_asn_headers_temp/query?asn_header_id=${/parameter/@asn_header_id}" selectable="true">
                <a:fields>
                    <a:field name="asn_header_id" readOnly="true"/>
                    <a:field name="asn_number" readOnly="true"/>
                    <a:field name="company_name" readOnly="true"/>
                    <a:field name="vendor_name" readOnly="true"/>
                    <a:field name="ship_to_organization_name" readOnly="true"/>
                    <a:field name="location_name" readOnly="true"/>
                    <a:field name="ship_date"/>
                    <a:field name="expected_date" required="true" requiredMessage="${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}" validator="srv5110_asnCreateHeaderDsValidator"/>
                    <a:field name="vendor_site_name" readOnly="true"/>
                    <a:field name="data_source" readOnly="true"/>
                    <a:field name="header_desc"/>
                    <a:field name="partner_name" readOnly="true"/>
                    <a:field name="transit_receive_date" required="true" requiredMessage="中转接收日期不能为空" validator="srv5110_asnCreateHeaderDsValidator"/>
                    <a:field name="transit_shipment_date" required="true" requiredMessage="中转发运日期不能为空" validator="srv5110_asnCreateHeaderDsValidator"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="srv5110_asn_create_line_ds" autoQuery="true" fetchAll="true" model="srv.SRV5110.srv_asn_lines_temp" queryUrl="${/request/@context_path}/autocrud/srv.SRV5110.srv_asn_lines_temp/query?asn_header_id=${/parameter/@asn_header_id}" selectable="false">
                <a:fields>
                    <a:field name="asn_line_id"/>
                    <a:field name="ship_quantity" required="true" requiredMessage="发运数量不能为空或0" validator="srv5110_asnCreateLineDsValidator"/>
                    <a:field name="comments"/>
                    <a:field name="serial_num" requiredMessage="序列号不能为空"/>
                    <a:field name="lots_num" requiredMessage="批次号不能为空"/>
                    <a:field name="lots_validity_date" requiredMessage="批次有效期不能为空"/>
                    <a:field name="packet_quantity"/>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="srv5110_asnCreateLine_loadFun"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <!-- <a:toolbarButton click="srv5110_srv_asn_header_save" style="margin-left:20px;" text="PROMPT.SAVE" width="100"/> -->
                <a:toolbarButton click="srv5110_srv_asn_header_create" style="margin-left:20px;" text="生成送货单" width="100"/>
                <a:toolbarButton click="srv5110_srv_asn_header_submit" style="margin-left:20px;" text="提交送货单" width="100"/>
                <!-- <a:toolbarButton click="srv5110_srv_asn_header_go_submit_print" text="提交并打印" width="100"/> -->
                <a:gridButton bind="srv5110_asn_create_grid" className="item-rbtn-blue button-excel" type="excel" width="100"/>
                <a:toolbarButton click="srv5110_srv_asn_header_go_back" style="margin-left:20px;" text="PROMPT.RETURN" width="100"/>
            </a:screenTopToolbar>
            <a:form marginWidth="70">
                <a:hBox>
                    <a:label name="asn_number" bindTarget="srv5110_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.ASN_NUMBER" width="230"/>
                    <a:label name="is_immed_shipped_flag_display" bindTarget="srv5110_asn_create_header_ds" prompt="是否直发" width="230"/>
                    <a:label name="vendor_name" bindTarget="srv5110_asn_create_header_ds" prompt="供应商" width="230"/>
                    <a:label name="partner_name" bindTarget="srv5110_asn_create_header_ds" prompt="货运代理" width="230"/>
                </a:hBox>
                <a:hBox>
                    <a:label name="company_name" bindTarget="srv5110_asn_create_header_ds" prompt="采购方公司" width="230"/>
                    <a:label name="actual_receiver_name" bindTarget="srv5110_asn_create_header_ds" prompt="送达方" width="230"/>
                    <a:label name="location_name" bindTarget="srv5110_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.LOCATION_ID" width="230"/>
                    <a:label name="ship_to_organization_name" bindTarget="srv5110_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.SHIP_TO_ORGANIZATION_ID" width="230"/>
                </a:hBox>
                <a:hBox>
                    <a:datePicker name="ship_date" bindTarget="srv5110_asn_create_header_ds" prompt="INV_ASN_HEADERS.SHIP_DATE" width="220"/>
                    <a:datePicker name="transit_receive_date" bindTarget="srv5110_asn_create_header_ds" prompt="中转接收日期" width="220"/>
                    <a:datePicker name="transit_shipment_date" bindTarget="srv5110_asn_create_header_ds" prompt="中转发运日期" width="220"/>
                    <a:datePicker name="expected_date" bindTarget="srv5110_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.EXPECTED_DATE" width="220"/>
                </a:hBox>
                <a:hBox>
                    <a:textField name="header_desc" bindTarget="srv5110_asn_create_header_ds" prompt="备注" width="850"/>
                </a:hBox>
            </a:form>
            <a:grid id="srv5110_asn_create_grid" autoAppend="false" bindTarget="srv5110_asn_create_line_ds" marginHeight="330" marginWidth="70" navBar="false" style="margin-top:10px;">
                <a:columns>
                    <a:column name="operate" align="center" lock="true" prompt="操作" renderer="srv5110_asnCreateGridRenderer" width="30"/>
                    <a:column name="asn_line_num" align="center" lock="true" prompt="INV_ASN_LINES_TEMP.LINE_NUM" width="30"/>
                    <a:column name="require_item_code" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.ITEM_CODE" sortable="true" width="60"/>
                    <a:column name="require_item_name" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.ITEM_NAME" sortable="true" width="100"/>
                    <a:column name="supply_item_code" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.VENDOR_ITEM_CODE" sortable="true" width="60"/>
                    <a:column name="supply_item_name" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.VENDOR_ITEM_NAME" sortable="true" width="100"/>
                    <a:column name="quantity" align="right" prompt="INV_ASN_LINES_TEMP.QUANTITY" renderer="Aurora.formatNumber" width="40"/>
                    <a:column name="unit_meas_lookup_code" align="center" prompt="INV_ASN_LINES_TEMP.UNIT_MEAS_LOOKUP_CODE" width="50"/>
                    <a:column name="quantity_enable_shipped" align="right" prompt="可发运" renderer="Aurora.formatNumber" width="40"/>
                    <a:column name="ship_quantity" align="right" editor="srv5110_asn_ship_quantity_nf" prompt="本次发运" width="50"/>
                    <a:column name="lots_num" align="center" editor="srv5110_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.LOTS_NUM" width="50"/>
                    <a:column name="lots_validity_date" align="center" editor="srv5110_asn_create_grid_dp" prompt="INV_ASN_LINES_TEMP.LOTS_VALIDITY_DATE" renderer="Aurora.formatDate" width="50"/>
                    <a:column name="serial_num" align="center" editor="srv5110_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.SERIAL_NUM" width="50"/>
                    <a:column name="invoice_num" align="center" editor="srv5110_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.INVOICE_NUM" width="50"/>
                    <a:column name="packet_quantity" align="left" editor="srv5110_asn_ship_quantity_nf" prompt="单包装数" width="40"/>
                    <a:column name="comments" align="left" editor="srv5110_asn_create_grid_tf" prompt="INV_ASN_LINES.LINE_DESC" width="100"/>
                    <a:column name="need_by_date" align="center" prompt="INV_ASN_LINES_TEMP.NEED_BY_DATE" width="80"/>
                    <a:column name="request_arrival_date" align="center" prompt="要求到港日期" renderer="Aurora.formatDate" width="80"/>
                    <a:column name="contacts_info" align="center" prompt="联系人信息" width="80"/>
                    <a:column name="promised_date" align="center" prompt="INV_ASN_LINES_TEMP.PROMISED_DATE" width="80"/>
                    <a:column name="segment1" align="center" prompt="INV_ASN_LINES_TEMP.SEGMENT1" width="80"/>
                    <a:column name="release_num" align="center" prompt="INV_ASN_LINES_TEMP.RELEASE_NUM" width="40"/>
                    <a:column name="line_num" align="center" prompt="INV_ASN_LINES_TEMP.LINE_NUM" width="30"/>
                    <a:column name="shipment_num" align="center" prompt="INV_ASN_LINES_TEMP.SHIPMENT_NUM" width="40"/>
                    <a:column name="revision_num" align="center" prompt="INV_ASN_LINES_TEMP.REVISION_NUM" width="40"/>
                </a:columns>
                <a:editors>
                    <a:textField id="srv5110_asn_create_grid_tf"/>
                    <a:datePicker id="srv5110_asn_create_grid_dp"/>
                    <a:numberField id="srv5110_asn_ship_quantity_nf" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="4"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
