<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: WangQiaosen  
    $Date: 2013-3-27 下午4:12:57  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="h.entrustment_header_id = ${/parameter/@entrustment_header_id}" model="cux.KINWONG.bid.public.get_entrustment_type" rootPath="bid_type"/>
        <s:server-script><![CDATA[
            var array = $ctx.get('/model/bid_type').getChildren();
            var config = $config(); //取到config对象
            if (array[0]['is_project_flag'] == 'Y') {
                var grid = CompositeUtil.findChild(config, 'grid', 'id', 'bid5120_create_bidding_docm_lines_grid');
                var ds = CompositeUtil.findChild(config, 'dataSet', 'id', 'bid5120_create_bidding_docm_lines_ds');
                var gridParent = grid.getParent();
                gridParent.removeChild(grid);
                ds.getChildsNotNull().clear();
            } else {
                var grid2 = CompositeUtil.findChild(config, 'screen-include', 'id', 'bidding_ln_project_id');
                var gridParent = grid2.getParent();
                gridParent.removeChild(grid2);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:view>
        <a:link id="bid5120_create_bidding_docm_save_link" url="${/request/@context_path}/modules/bid/BID5120/bid_bidding_docm_save.svc"/>
        <a:link id="bid5120_create_bidding_docm_edit_link" url="${/request/@context_path}/modules/bid/BID5130/bid_bidding_docm_edit.screen"/>
        <a:link id="bid5120_create_bidding_docm_submit_link" url="${/request/@context_path}/modules/bid/BID5120/bid_bidding_docm_submit.svc"/>
        <a:link id="bid5120_create_bidding_docm_cancel_link" model="bid.BID5120.bid_bidding_docm_cancel" modelaction="execute"/>
        <script src="${/request/@context_path}/javascripts/countdown/jquery-1.8.3.min.js" type="text/javascript"/>
        <script src="${/request/@context_path}/javascripts/countdown/jquery.classycountdown.js" type="text/javascript"/>
        <script src="${/request/@context_path}/javascripts/countdown/jquery.knob.js" type="text/javascript"/>
        <script src="${/request/@context_path}/javascripts/countdown/jquery.throttle.js" type="text/javascript"/>
        <link href="${/request/@context_path}/css/pur/jquery.classycountdown.css" rel="stylesheet" type="text/css"/>
        <style><![CDATA[
.contain {
padding:3px;
background:white;
font-size:9pt;
border-width:1px 2px 2px 1px;
border-style:solid;
left:20; 
margin-left:-418px;
margin-top:16px;
position:absolute;
display:none;
z-index:9999;
overflow:auto;
max-width:450px;
max-height:100px;
}

  .circle {
 margin-left:70px;
 margin-top:5px;
 width:365px;
 height:170px;
/*  background:#E2F0D9; */
 
 font-size:18px;
 font-family: "Helvetica Neue", Helvetica, Microsoft Yahei, Hiragino Sans GB, WenQuanYi Micro Hei, sans-serif;
}
#countdown18{
   /*  background:#E2F0D9; */
}
 .ClassyCountdownDemo {
     margin:0 auto; 
     max-width:330px; 
     width:calc(100%); 
     padding:15px;
     display:block 
}   
]]></style>
        <script><![CDATA[
            //Header Ds Load Function
            var left_time;
            var jq = jQuery.noConflict();
            
            function bid5120_onCreateBiddingDocmHeaderDs_loadFun(ds) {
                var record = ds.getAt(0);
                var bidding_type = record.get('bidding_type');
                var bidding_method = record.get('bidding_method');
            
            }
            
            var first_load = 'Y';
            
            function bid5120EntrustmentEditOnLoad(ds) {
                var record = ds.getCurrentRecord();
                record.getField('payment_method_desc').setLovPara('entrustment_header_id', '${/parameter/@entrustment_header_id}');
                if (record.get('payment_terms')) {
                    document.getElementById("contain").innerHTML = record.get('payment_terms');
                }
            
                var rec = ds.getAt(0);
                left_time = rec.get('left_time');
                if (first_load == 'Y') {
            
                    jq('#countdown18').ClassyCountdown({
                        theme: "flat-colors-black",
                        end: jq.now() + left_time,
                    });
                }
                first_load = 'N';
            }
            
            function bid5120EntrustmentEditOnUpdate(ds, record, name, value, oldvalue) {
                if (name == 'payment_terms') {
            
                    if (value) {
                        document.getElementById("contain").innerHTML = value;
                    }
            
                }
            
            }
            
            
            //比较两个日期的大小
            
            function bid5120EntrustmentEditCompareDate(start, end) {
            
                if (typeof(start) == 'string') {
                    start = new Date(start.replace(/-/g, '/'));
                }
            
                if (typeof(end) == 'string') {
                    end = new Date(end.replace(/-/g, '/'));
                }
            
                if (start > end) {
                    return false;
                }
                return true;
            }
            
            function bid5120EntrustmentEditValidator(record, name, value) {
                if (name == 'promised_date') {
                    var sysdate = new Date();
                    var promised_date = record.get('promised_date');
                    if (!bid5120EntrustmentEditCompareDate(sysdate, promised_date)) {
                        return '${l:BID_ENTRUSTMENT_HEADERS.PROMISSORY_CANNOT_EARLIER_CURRENT}';
                    }
                }
            
                return true;
            }
            
            //Load
            
            
            function bid5120BiddingDocmCreateLinesOnLoad(ds) {
                var records = ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
                    //判断税
                    var tax_included_flag = record.get('tax_included_flag');
                    if (tax_included_flag == 'Y') {
                        record.getField('tax_type_rate').setReadOnly(false);
                        record.getField('tax_type_rate').setRequired(true);
                    }
                    record.getField('tax_type_rate').setLovPara('business_group', $('bid5120_create_bidding_docm_header_ds').getAt(0).get('owner_business_group'));
            
                    var bidding_submit_flag = record.get('bidding_submit_flag');
                    if (bidding_submit_flag == 'N' || Ext.isEmpty(bidding_submit_flag)) {
                        record.getField('quantity').setRequired(false);
                        record.getField('quantity').setReadOnly(true);
                        record.getField('unit_price').setRequired(false);
                        record.getField('unit_price').setReadOnly(true);
                        record.getField('promised_date').setRequired(false);
                        record.getField('promised_date').setReadOnly(true);
                        record.getField('tax_included_flag').setReadOnly(true);
                    }
                }
            }
            
            
            function bid5120BiddingDocmCreateLinesOnUpdate(ds, record, name, value, oldvalue) {
                var rfx_09_exists_flag = record.get('rfx09_item_value');
                if (name == 'tax_included_flag') {
                    record.set('tax_type_id', '');
                    record.set('tax_type_code', '');
                    record.set('tax_type_rate', '');
                    if (value == 'Y') {
                        record.getField('tax_type_rate').setReadOnly(false);
                        record.getField('tax_type_rate').setRequired(true);
                    } else {
                        record.getField('tax_type_rate').setRequired(false);
                        record.getField('tax_type_rate').setReadOnly(true);
                    }
                } else if (name == 'unit_price' || name == 'quantity' || name == 'tax_type_rate') {
                    if (name == 'unit_price' && rfx_09_exists_flag == 'Y') {
                        var previous_round_price = record.get('previous_round_price');
                        if (!Aurora.isEmpty(previous_round_price) && previous_round_price <= value) {
                            Aurora.showMessage('${l:PROMPT}', '${l:BID.CURRENT_PRICE_CAN_NOT_MORE_THAN_PREVIOUS}');
                            record.set('unit_price', oldvalue);
                            return false;
                        }
                    }
            
                    var base_price = record.get('base_price');
                    var quantity = record.get('quantity');
                    var unit_price = record.get('unit_price');
                    var net_price = record.get('net_price');
                    var net_amount = record.get('net_amount');
                    var tax_amount = record.get('tax_amount');
                    var total_amount = record.get('total_amount');
                    var tax_included_flag = record.get('tax_included_flag');
                    var tax_type_rate = record.get('tax_type_rate');
            
                    if (!Aurora.isEmpty(quantity) && !Aurora.isEmpty(unit_price) && !Aurora.isEmpty(tax_type_rate)) {
                        if (tax_included_flag == 'N') {
                            //record.set('unit_price', parseFloat((base_price * (1 + tax_type_rate / 100)).toFixed(8)));
                            record.set('net_price', parseFloat(unit_price.toFixed(8)));
                            unit_price = record.get('unit_price');
                            net_price = record.get('net_price');
                            record.set('net_amount', parseFloat((net_price * quantity).toFixed(2)));
                            record.set('tax_amount', parseFloat(((unit_price - net_price) * quantity).toFixed(2)));
                            net_amount = record.get('net_amount');
                            tax_amount = record.get('tax_amount');
                            record.set('total_amount', parseFloat((net_amount + tax_amount).toFixed(2)));
                        } else if (tax_included_flag == 'Y') {
                            //record.set('unit_price', parseFloat(base_price.toFixed(8)));
                            record.set('net_price', parseFloat((unit_price / (1 + (tax_type_rate / 100))).toFixed(8)));
                            unit_price = record.get('unit_price');
                            net_price = record.get('net_price');
                            record.set('net_amount', parseFloat((net_price * quantity).toFixed(2)));
                            record.set('tax_amount', parseFloat(((unit_price - net_price) * quantity).toFixed(2)));
                            net_amount = record.get('net_amount');
                            tax_amount = record.get('tax_amount');
                            record.set('total_amount', parseFloat((net_amount + tax_amount).toFixed(2)));
                        }
                    } else {
                        record.set('net_price', '');
                        record.set('net_amount', '');
                        record.set('tax_amount', '');
                        record.set('total_amount', '');
                    }
                } else if (name == 'bidding_submit_flag') {
                    var record_backup = $('bid5120_create_bidding_docm_lines_backup_ds').find('line_item_id', record.get('line_item_id'));
                    if (value == 'Y') {
                        if (record_backup) {
                            record.set('quantity', record_backup.get('quantity'));
                            record.set('unit_price', record_backup.get('unit_price'));
                            record.set('promised_date', record_backup.get('promised_date'));
                            record.set('tax_included_flag', record_backup.get('tax_included_flag'));
                            record.set('tax_type_id', record_backup.get('tax_type_id'));
                            record.set('tax_type_code', record_backup.get('tax_type_code'));
                            record.set('tax_type_rate', record_backup.get('tax_type_rate'));
                            record.set('net_price', record_backup.get('net_price'));
                            record.set('net_amount', record_backup.get('net_price'));
                            record.set('tax_amount', record_backup.get('net_price'));
                            record.set('total_amount', record_backup.get('total_amount'));
                        }
                        record.getField('quantity').setReadOnly(false);
                        record.getField('quantity').setRequired(true);
                        record.getField('unit_price').setReadOnly(false);
                        record.getField('unit_price').setRequired(true);
                        record.getField('promised_date').setReadOnly(false);
                        record.getField('promised_date').setRequired(true);
                        record.getField('tax_included_flag').setReadOnly(false);
                    } else {
                        var backup = {
                            quantity: record.get('quantity'),
                            unit_price: record.get('unit_price'),
                            promised_date: record.get('promised_date'),
                            tax_included_flag: record.get('tax_included_flag'),
                            tax_type_id: record.get('tax_type_id'),
                            tax_type_id: record.get('tax_type_id'),
                            tax_type_rate: record.get('tax_type_rate'),
                            net_price: record.get('net_price'),
                            net_amount: record.get('net_amount'),
                            tax_amount: record.get('tax_amount'),
                            total_amount: record.get('total_amount'),
                            line_item_id: record.get('line_item_id')
                        };
                        if (record_backup) {
                            $('bid5120_create_bidding_docm_lines_backup_ds').remove(record_backup);
                            $('bid5120_create_bidding_docm_lines_backup_ds').create(backup);
                        } else {
                            $('bid5120_create_bidding_docm_lines_backup_ds').create(backup);
                        }
            
                        record.set('quantity', '');
                        record.set('unit_price', '');
                        record.set('promised_date', '');
                        record.set('tax_included_flag', '');
                        record.getField('quantity').setRequired(false);
                        record.getField('quantity').setReadOnly(true);
                        record.getField('unit_price').setRequired(false);
                        record.getField('unit_price').setReadOnly(true);
                        record.getField('promised_date').setRequired(false);
                        record.getField('promised_date').setReadOnly(true);
                        record.getField('tax_included_flag').setReadOnly(true);
                    }
                }
            }
            
            function bid5120BiddingDocmCreateSave() {
                var header_ds = $('bid5120_create_bidding_docm_header_ds');
                var item_ds = $('bid5120_create_bidding_docm_lines_ds');
                var project_ds = $('bid5010_edit_bidding_project_ds');
                if (!header_ds.validate()) {
                    return;
                }
                if (!item_ds.validate()) {
                    return;
                }
                if (project_ds) {
                    if (!project_ds.validate()) {
                        return;
                    }
                }
                Aurora.Masker.mask($('bid5120_bidding_docm_create_window').wrap, '${l:LOADING}');
                var header_rec = header_ds.getCurrentRecord();
                if (Ext.isEmpty('${/parameter/@bidder_id}') || '${/parameter/@bidder_id}' == 'undefined') {
                    header_rec.set('bidder_id', '');
                } else {
                    header_rec.set('bidder_id', '${/parameter/@bidder_id}');
                }
            
                if (Ext.isEmpty('${/parameter/@bidder_company_id}') || '${/parameter/@bidder_company_id}' == 'undefined') {
                    header_rec.set('bidder_company_id', '');
                } else {
                    header_rec.set('bidder_company_id', '${/parameter/@bidder_company_id}');
                }
                var header_data = header_rec.data;
                header_rec.isNew = true;
                header_rec.dirty = true;
                header_data._status = 'insert';
                var item_recs = item_ds.getAll();
                for (var i = 0;i < item_recs.length;i++) {
                    if (Aurora.isEmpty(item_recs[i].get('bid_line_id'))) {
                        item_recs[i].isNew = true;
                        item_recs[i].dirty = true;
                        item_recs[i].data._status = 'insert';
                    }
                }
                // var project_recs = project_ds.getAll();
                // for (var i = 0;i < project_recs.length;i++) {
                // if (Aurora.isEmpty(project_recs[i].get('project_id'))) {
                // project_recs[i].isNew = true;
                // project_recs[i].dirty = true;
                // project_recs[i].data._status = 'insert';
                // }
                // }
                header_data['items'] = item_ds.getJsonData();
                if (project_ds) {
                    var project_rec = project_ds.getAll();
                    var project_data = [];
                    for(var i = 0 ; i < project_rec.length ; i++){
                        project_data.push(project_rec[i].data);
                    }
                    header_data['project'] = project_data;
                }
                Aurora.request({
                    url: $('bid5120_create_bidding_docm_save_link').getUrl(),
                    para: header_data,
                    success: function(res) {
                        var bid_header_id = res.result.bid_header_id;
                        Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                        Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SAVED}', function() {
                            new Aurora.Window({
                                id: 'bid5130_bidding_docm_edit_window',
                                title: '${l:BIDDING_DOCM_DETAIL}',
                                url: $('bid5120_create_bidding_docm_edit_link').getUrl() + '?bid_header_id=' + bid_header_id + '&entrustment_header_id=' + '${/parameter/@entrustment_header_id}' ,
                                fullScreen: true
                            }).on('beforeclose', function() {
                                bid5120Query();
                            });
            
                            $('bid5120_bidding_docm_create_window').close();
                        });
                    },
                    failure: function() {
                        Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                        return;
                    },
                    error: function() {
                        Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                        return;
                    }
                });
            
            }
            
            function bid5120BiddingDocmCreateSubmit() {
                var header_ds = $('bid5120_create_bidding_docm_header_ds');
                var item_ds = $('bid5120_create_bidding_docm_lines_ds');
            
                if (!header_ds.validate()) {
                    return;
                }
                if (!item_ds.validate()) {
                    return;
                }
            
                Aurora.Masker.mask($('bid5120_bidding_docm_create_window').wrap, '${l:LOADING}');
            
                var header_rec = header_ds.getCurrentRecord();
                if (Ext.isEmpty('${/parameter/@bidder_id}') || '${/parameter/@bidder_id}' == 'undefined') {
                    header_rec.set('bidder_id', '');
                } else {
                    header_rec.set('bidder_id', '${/parameter/@bidder_id}');
                }
            
                if (Ext.isEmpty('${/parameter/@bidder_company_id}') || '${/parameter/@bidder_company_id}' == 'undefined') {
                    header_rec.set('bidder_company_id', '');
                } else {
                    header_rec.set('bidder_company_id', '${/parameter/@bidder_company_id}');
                }
            
                var header_data = header_rec.data;
                header_rec.isNew = true;
                header_rec.dirty = true;
                header_data._status = 'insert';
            
                var item_recs = item_ds.getAll();
                for (var i = 0;i < item_recs.length;i++) {
                    if (Aurora.isEmpty(item_recs[i].get('bid_line_id'))) {
                        item_recs[i].isNew = true;
                        item_recs[i].dirty = true;
                        item_recs[i].data._status = 'insert';
                    }
                }
                header_data['items'] = item_ds.getJsonData();
            
                Aurora.showConfirm('${l:PROMPT}', '${l:BID_ENTRUSTMENT_HEADERS.CONFIRM_SUBMIT_BID_MSG}？', function() {
                    Aurora.request({
                        url: $('bid5120_create_bidding_docm_submit_link').getUrl(),
                        para: header_data,
                        success: function() {
                            Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                            Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.SUBMITED}', function() {
                                $('bid5120_bidding_docm_create_window').close();
                                bid5120Query();
                            });
                        },
                        failure: function() {
                            Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                            return;
                        },
                        error: function() {
                            Aurora.Masker.unmask($('bid5120_bidding_docm_create_window').wrap);
                            return;
                        }
                    });
                });
            
            }
            
            function bid5120BiddingDocmCreateCancel() {
                $('bid5120_bidding_docm_create_window').close();
            }
            
            function bid5120_toBiddingFun(value, record, name) {
                if (name == 'line_to_bidding') {
                    var bidding_submit_flag = record.get('bidding_submit_flag');
                    if (bidding_submit_flag == 'Y') {
                        return '<a href="javascript:bid5120_biddingDocmLineAbandonFun(' + record.get('line_item_id') + ')">${l:BID_BIDDING_DOCM_LINES_ABANDON}</a>';
                    } else {
                        return '<a href="javascript:bid5120_biddingDocmLineParticipateFun(' + record.get('line_item_id') + ')">${l:BID_BIDDING_DOCM_LINES_PARTICIPATE}</a>';
                    }
                }
            }
            
            function bid5120_biddingDocmLineAbandonFun(line_item_id) {
                var record = $('bid5120_create_bidding_docm_lines_ds').find('line_item_id', line_item_id);
                record.set('bidding_submit_flag', 'N');
            }
            
            function bid5120_biddingDocmLineParticipateFun(line_item_id) {
                var record = $('bid5120_create_bidding_docm_lines_ds').find('line_item_id', line_item_id);
                record.set('bidding_submit_flag', 'Y');
            }
            
            function bid5120_biddingDocmInit() {
                var allowed_part_bidding_flag = $('bid5120_create_bidding_docm_header_ds').getAt(0).get('allowed_part_bidding_flag');
                if ('${/model/bid_type/record/@is_project_flag}' == 'N') {
                    if (allowed_part_bidding_flag == 'Y') {
                        $('bid5120_create_bidding_docm_lines_grid').showColumn('line_to_bidding');
                    } else {
                        $('bid5120_create_bidding_docm_lines_grid').hideColumn('line_to_bidding');
                    }
                }
            }
            
            
            function tamouseover(a, e) {
                var head_ds = $('bid5120_create_bidding_docm_header_ds');
                var record = head_ds.getAt(0);
                if (record.get('payment_terms')) {
                    document.getElementById("contain").style.display = "inline";
                }
            
            }
            
            function tAfocus(a) {
                document.getElementById("contain").style.display = "none";
            }
            
            function bid5120_createGridEditorFuntion(record, name) {
                var rfx_10_exists_flag = record.get('rfx10_item_value');
                if (name == "quantity") {
                    if (rfx_10_exists_flag == 'Y') {
                        record.getMeta().getField('quantity').setRequired(false);
                        return '';
                    } else {
                        record.getMeta().getField('quantity').setRequired(true);
                        return 'bid5120_create_bidding_docm_lines_quantity_nf';
                    }
                }
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="bid5120_create_bidding_docm_lines_backup_ds"/>
            <a:dataSet id="bid5120_create_bidding_docm_header_ds" fetchAll="true" loadData="true" model="bid.BID5120.bid_bidding_docm_headers" queryUrl="${/request/@context_path}/autocrud/bid.BID5120.bid_bidding_docm_headers/query?entrustment_header_id=${/parameter/@entrustment_header_id}&amp;bidder_id=${/parameter/@bidder_id}&amp;bidder_company_id=${/parameter/@bidder_company_id}">
                <a:fields>
                    <a:field name="application_date" required="true"/>
                    <a:field name="payment_method_desc" lovGridHeight="270" lovHeight="400" lovService="bid.public.csh_payment_methods_vl_for_vendor" lovWidth="500" title="付款方式">
                        <a:mapping>
                            <a:map from="payment_method_id" to="payment_method_id"/>
                            <a:map from="payment_method_code" to="payment_method_code"/>
                            <a:map from="description" to="payment_method_desc"/>
                        </a:mapping>
                    </a:field>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="bid5120EntrustmentEditOnLoad"/>
                    <a:event name="update" handler="bid5120EntrustmentEditOnUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="bid5120_create_bidding_docm_lines_ds" autoCount="true" autoPageSize="true" autoQuery="true" fetchAll="true" model="bid.BID5120.bid_bidding_docm_lines" queryUrl="${/request/@context_path}/autocrud/bid.BID5120.bid_bidding_docm_lines/query?entrustment_header_id=${/parameter/@entrustment_header_id}&amp;bidder_company_id=${/parameter/@bidder_company_id}">
                <a:fields>
                    <a:field name="entrustment_header_id" defaultValue="${/parameter/@entrustment_header_id}"/>
                    <a:field name="quantity" required="true"/>
                    <a:field name="unit_price" required="true"/>
                    <a:field name="promised_date" required="true" validator="bid5120EntrustmentEditValidator"/>
                    <a:field name="tax_type_id"/>
                    <a:field name="tax_included_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="tax_type_rate" autoComplete="true" autoCompleteField="tax_type_code" lovGridHeight="350" lovHeight="500" lovService="public.fnd_tax_type_code_lov" lovWidth="500" readOnly="true" title="BID_ENTRUSTMENT_LN_ITEMS.TAX_RATE">
                        <a:mapping>
                            <a:map from="tax_type_id" to="tax_type_id"/>
                            <a:map from="tax_type_code" to="tax_type_code"/>
                            <a:map from="tax_type_rate" to="tax_type_rate"/>
                        </a:mapping>
                    </a:field>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="bid5120BiddingDocmCreateLinesOnLoad"/>
                    <a:event name="update" handler="bid5120BiddingDocmCreateLinesOnUpdate"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:toolbarButton click="bid5120BiddingDocmCreateSave" text="HAP_SAVE" width="100"/>
                <!-- <a:toolbarButton click="bid5120BiddingDocmCreateSubmit" text="PROMPT.SUBMIT" width="100"/> -->
                <a:toolbarButton click="bid5120BiddingDocmCreateCancel" text="HAP_BACK" width="100"/>
            </a:screenTopToolbar>
            <a:hBox>
                <a:vBox labelWidth="100">
                    <a:hBox labelWidth="100">
                        <a:textField name="bid_header_number" bindTarget="bid5120_create_bidding_docm_header_ds" emptyText="${l:BID_ENTRUSTMENT_LN_ITEMS.TO_BE_GENERATED}" prompt="BID_ENTRUSTMENT_HEADERS.BID_NUMBER" readOnly="true"/>
                        <a:textField name="entrustment_header_number" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.ENTRUSTMENT_HEADER_NUMBER" readOnly="true"/>
                        <a:textField name="round" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.ROUND" readOnly="true"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:textField name="using_company_desc" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.USING_COMPANY_DESC" readOnly="true"/>
                        <a:textField name="entrustment_type_desc" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.ENTRUSTMENT_TYPE_DESC" readOnly="true"/>
                        <a:textField name="version" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.VERSION" readOnly="true"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:textField name="bidder_desc" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.BIDDER_NAME" readOnly="true"/>
                        <a:datePicker name="bid_closing_date" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HDS_HIST.BID_CLOSING_DATE" readOnly="true" renderer="Aurora.formatDate"/>
                        <a:textField name="currency_name" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.CURRENCY_CODE" readOnly="true"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:datePicker name="application_date" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.APPLICATION_DATE" renderer="Aurora.formatDate"/>
                        <a:textField name="margin_required_flag_desc" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.MARGIN_REQUIRED_FLAG" readOnly="true"/>
                        <a:datePicker name="complete_date" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="BID_ENTRUSTMENT_HEADERS.COMPLETE_DATE" readOnly="true" renderer="Aurora.formatDate"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:lov name="payment_method_desc" bindTarget="bid5120_create_bidding_docm_header_ds" prompt="PUR_VENDORS.PAYMENT_METHOD"/>
                        <a:textArea name="payment_terms" bindTarget="bid5120_create_bidding_docm_header_ds" height="16" prompt="PUR_VENDORS.TERMS_OF_PAYMENT" width="400">
                            <a:events>
                                <a:event name="mouseover" handler="tamouseover"/>
                                <a:event name="focus" handler="tAfocus"/>
                            </a:events>
                        </a:textArea>
                        <pre id="contain" class="contain" padding="0"/>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:textArea name="comments" bindTarget="bid5120_create_bidding_docm_header_ds" height="60" prompt="BID_BIDDING_DOCM_HEADERS.COMMENTS" width="670"/>
                    </a:hBox>
                </a:vBox>
                <div class="circle">
                    <span style="display:block;margin-left:10px; margin-top:20px;"><![CDATA[${l:BID_ENTRUSTMENT.TENDER_DEADLINE}
                	]]></span>
                    <div id="countdown18" class="ClassyCountdownDemo"/>
                </div>
            </a:hBox>
            <a:grid id="bid5120_create_bidding_docm_lines_grid" autoAppend="false" bindTarget="bid5120_create_bidding_docm_lines_ds" height="320" marginWidth="50" navBar="true">
                <a:columns>
                    <a:column name="line_num" align="center" prompt="BID_ENTRUSTMENT_LN_ITEMS.LINE_NUM" sortable="true" width="30"/>
                    <a:column name="line_to_bidding" align="center" renderer="bid5120_toBiddingFun" width="50"/>
                    <a:column name="item_code" align="left" prompt="BID_ENTRUSTMENT_LN_ITEMS.ITEM_CODE" width="100"/>
                    <a:column name="item_desc" align="left" prompt="BID_ENTRUSTMENT_LN_ITEMS.ITEM_DESC" width="150"/>
                    <a:column name="item_category_desc" align="left" prompt="BID_ENTRUSTMENT_LN_ITEMS.ITEM_TYPE_NAME" width="150"/>
                    <a:column name="entrustment_quantity" align="right" prompt="BID_ENTRUSTMENT_LN_ITEMS.QUANTITY" width="80"/>
                    <a:column name="uom_desc" align="center" prompt="BID_ENTRUSTMENT_LN_ITEMS.UOM" width="40"/>
                    <a:column name="need_by_date" align="center" prompt="BID_ENTRUSTMENT_LN_ITEMS.NEED_BY_DATE" renderer="Aurora.formatDate" width="60"/>
                    <a:column name="quantity" align="right" editorFunction="bid5120_createGridEditorFuntion" prompt="BID_ENTRUSTMENT_HEADERS.BID_QUANTITY" width="80"/>
                    <a:column name="unit_price" align="right" editor="bid5120_create_bidding_docm_lines_amount_nf" prompt="BID_ENTRUSTMENT_LN_ITEMS.UNIT_PRICE" renderer="Aurora.formatNumber" width="80"/>
                    <a:column name="production_cycle" align="right" editor="bid5120_create_bidding_docm_lines_quantity_nf" prompt="BID_BIDDING_DOCM_LINES.PRODUCTION_CYCLE" width="80"/>
                    <a:column name="implementation_cycle" align="right" editor="bid5120_create_bidding_docm_lines_quantity_nf" prompt="BID_BIDDING_DOCM_LINES.IMPLEMENTATION_CYCLE" width="80"/>
                    <a:column name="promised_date" align="center" editor="bid5120_create_bidding_docm_lines_dp" prompt="BID_ENTRUSTMENT_HEADERS.PROMISED_DATE" renderer="Aurora.formatDate" width="60"/>
                    <a:column name="tax_included_flag" align="center" editor="bid5120_create_bidding_docm_lines_cb" prompt="BID_ENTRUSTMENT_LN_ITEMS.TAX_FLAG" width="30"/>
                    <a:column name="tax_type_rate" align="center" editor="bid5120_create_bidding_docm_lines_lov" prompt="BID_ENTRUSTMENT_LN_ITEMS.TAX_RATE" width="60"/>
                    <a:column name="net_price" align="right" prompt="BID_ENTRUSTMENT_LN_ITEMS.PRE_TAX_NET_PRICE" width="80"/>
                    <a:column name="net_amount" align="right" prompt="BID_ENTRUSTMENT_LN_ITEMS.NET_AMOUNT" renderer="Aurora.formatMoney" width="80"/>
                    <a:column name="tax_amount" align="right" prompt="BID_ENTRUSTMENT_LN_ITEMS.TAX_AMOUNT" renderer="Aurora.formatMoney" width="80"/>
                    <a:column name="total_amount" align="right" prompt="BID_ENTRUSTMENT_LN_ITEMS.AMOUNT" renderer="Aurora.formatMoney" width="80"/>
                    <a:column name="technical_deviation" align="right" editor="bid5120_edit_bidding_docm_lines_tf" prompt="BID_BIDDING_DOCM_LINES.TECHNICAL_DEVIATION" width="80"/>
                    <a:column name="comments" align="right" editor="bid5120_edit_bidding_docm_lines_tf" prompt="BID_BIDDING_DOCM_LINES.COMMENTS" width="80"/>
                </a:columns>
                <a:editors>
                    <a:textField id="bid5120_edit_bidding_docm_lines_tf"/>
                    <a:lov id="bid5120_create_bidding_docm_lines_lov"/>
                    <a:numberField id="bid5120_create_bidding_docm_lines_quantity_nf" allowDecimals="true" allowNegative="false" decimalPrecision="2"/>
                    <a:numberField id="bid5120_create_bidding_docm_lines_amount_nf" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="8"/>
                    <a:datePicker id="bid5120_create_bidding_docm_lines_dp"/>
                    <a:checkBox id="bid5120_create_bidding_docm_lines_cb"/>
                </a:editors>
            </a:grid>
            <a:screen-include id="bidding_ln_project_id" screen="modules/cux/KINWONG/bid/BID5010/kw_bid_bidding_ln_project.screen?entrustment_header_id=${/parameter/@entrustment_header_id}"/>
        </a:screenBody>
        <script><![CDATA[
         bid5120_biddingDocmInit();
         ]]></script>
    </a:view>
</a:screen>
