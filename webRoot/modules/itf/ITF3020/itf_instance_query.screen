<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Dru  
    $Date: 2014-4-28 下午2:16:47  
    $Revision: 1.0  
    $Purpose: CLIENT级接口实例错误查询
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view package="aurora.ui.std" template="default">
        <!--         <a:link id="itf3020_instance_standard_link" url="${/request/@context_path}/modules/itf/public/itf_instance_standard_view.screen"/>
        <a:link id="itf3020_instance_custom_link" url="${/request/@context_path}/modules/itf/public/itf_instance_standard_view.screen"/>
        <a:link id="itf3020_transaction_list_link" url="${/request/@context_path}/modules/itf/public/itf_transaction_list.screen"/> -->
        <a:link id="itf3020_itf_execute_link" model="itf.ITF3020.itf_execute" modelaction="execute"/>
        <a:link id="itf3020_pur_po_header_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_po_header_itf.screen"/>
        <a:link id="itf3020_instance_details_link" url="${/request/@context_path}/modules/itf/ITF3010/itf_instance_details.screen"/>
        <a:link id="itf3020_itf_standard_storages_link" url="${/request/@context_path}/modules/itf/ITF3010/itf_standard_storages.screen"/>
        <a:link id="itf3020_pur_rcv_trx_header_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_rcv_trx_header_itf.screen"/>
        <a:link id="itf3020_inv_trx_headers_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_trx_headers_itf.screen"/>
        <a:link id="itf3020_inv_onhand_quantities_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_onhand_quantities_itf.screen"/>
        <a:link id="itf3020_pur_vendor_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_vendor_interface.screen"/>
        <a:link id="itf3020_pur_vendor_site_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_vendor_site_itf.screen"/>
        <a:link id="itf3020_pur_vendor_contact_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_vendor_contact_itf.screen"/>
        <a:link id="itf3020_pur_po_location_direct_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_po_location_direct_itf.screen"/>
        <a:link id="itf3020_pur_po_asl_list_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_po_asl_list_itf.screen"/>
        <a:link id="itf3020_erp_ap_invoice_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/erp_ap_invoice_header_itf.screen"/>
        <a:link id="itf3020_erp_ap_payment_checks_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/erp_ap_payment_checks_itf.screen"/>
        <a:link id="itf3020_inv_asn_pur_itf_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_pur_imp_hd_itf.screen"/>
        <a:link id="itf3020_inv_asn_pur_feedback_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_pur_feedback_itf.screen"/>
        <a:link id="itf3020_inv_asn_cancel_feedback_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_cancel_feedback_itf.screen"/>
        <a:link id="itf3020_inv_asn_purchase_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_purchase_header_itf.screen"/>
        <a:link id="itf3020_inv_asn_pur_cancel_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_pur_cancel_itf.screen"/>
        <a:link id="itf3020_ws_request_compare_link" url="${/request/@context_path}/modules/itf/ITF3010/ws_request_compare_info_itf.screen"/>
        <a:link id="itf3020_fnd_tax_type_link" url="${/request/@context_path}/modules/itf/ITF3010/fnd_tax_type_itf.screen"/>
        <a:link id="itf3020_pur_po_header_rls_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_po_header_rls_itf.screen"/>
        <a:link id="itf3020_inv_asn_supply_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_asn_supply_header_itf.screen"/>
        <a:link id="itf3020_pur_po_header_erp_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_po_header_erp_itf.screen"/>
        <a:link id="itf3020_pur_trx_header_agent_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_trx_header_agent_itf.screen"/>
        <a:link id="itf3020_fnd_business_units_link" url="${/request/@context_path}/modules/itf/ITF3010/fnd_business_units_itf.screen"/>
        <a:link id="itf3020_inv_organizations_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_organizations_itf.screen"/>
        <a:link id="itf3020_inv_warehouses_units_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_warehouses_itf.screen"/>
        <a:link id="itf3020_inv_locations_link" url="${/request/@context_path}/modules/itf/ITF3010/inv_locations_itf.screen"/>
        <a:link id="itf3020_pur_buyers_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_buyers_itf.screen"/>
        <a:link id="itf3020_fnd_uom_classes_link" url="${/request/@context_path}/modules/itf/ITF3010/fnd_uom_classes_itf.screen"/>
        <a:link id="itf3020_fnd_uom_codes_link" url="${/request/@context_path}/modules/itf/ITF3010/fnd_uom_codes_itf.screen"/>
        <a:link id="itf3020_mtl_system_items_units_link" url="${/request/@context_path}/modules/itf/ITF3010/mtl_system_items_itf.screen"/>
        <a:link id="itf3020_fnd_locations_link" url="${/request/@context_path}/modules/itf/ITF3010/fnd_locations_itf.screen"/>
        <a:link id="itf3020_pur_organizations_link" url="${/request/@context_path}/modules/itf/ITF3010/pur_organizations_itf.screen"/>
        <a:link id="itf3020_ap_invoice_exp_link" url="${/request/@context_path}/modules/itf/ITF3010/erp_ap_invoice_hd_exp_itf.screen"/>
        <a:link id="itf3020_ap_invoice_exp_fd_link" url="${/request/@context_path}/modules/itf/ITF3010/erp_ap_invoice_exp_feedback_itf.screen"/>
        <script><![CDATA[
            //查询
            
            
            function itf3020_interfacesQuery() {
                $('itf3020_instance_result_ds').query();
            }
            
            
            function itf3020_operate_renderer_fun(value, record, name) {
                var itf_instance_id = record.get('itf_instance_id');
                var error_type = record.get('error_type');
                if (name == 'instance_execute') {
                    //执行
                    if (error_type != null) {
                        return '<a href="javascript:itf3020_execute_interface(' + itf_instance_id + ',\'' + error_type + '\');">执行</a>';
                    } else {
                        return '<a href="javascript:itf3020_execute_interface(' + itf_instance_id + ',\'' + '' + '\');">执行</a>';
                    }
                } else if (name == 'instance_ignore') {
                    //忽略
                    return '<a href="javascript:itf3020_ignore_interface(' + itf_instance_id + ');">忽略</a>';
                }
            }
            
            function itf3020_execute_interface(itf_instance_id, error_type) {
                Aurora.showConfirm('提示', '确认执行', function() {
                    Aurora.Masker.mask(Ext.getBody(), '正在执行...');
                    Aurora.request({
                        url: $('itf3020_itf_execute_link').getUrl(),
                        para: {
                            'itf_instance_id': itf_instance_id,
                            'error_type': error_type
                        },
                        success: function() {
                            Aurora.showMessage('提示', '执行成功！');
                            $('itf3020_instance_result_ds').query();
                        },
                        failed: function() {
                            Aurora.showMessage('提示', '执行失败！');
                        },
                        scope: this,
                        sync: true
                    });
                    Aurora.Masker.unmask(Ext.getBody());
                });
            }
            
            function itf3020_ignore_interface(itf_instance_id) {
                Aurora.showConfirm('提示', '确认忽略？', function() {
                    Aurora.Masker.mask(Ext.getBody(), '正在执行...');
                    //调用方法，更改接口表字段
                    Aurora.Masker.unmask(Ext.getBody());
                });
            }
            
            function itf3020_interface_error_data(value, record, name) {
                var error_flag = 'Y';
                var itf_instance_id = record.get('itf_instance_id');
                var interface_code = record.get('interface_code');
                if (name == 'interface_data') {
                    return '<a href="javascript:itf3020_interface_error_data_window(' + itf_instance_id + ',\'' + interface_code + '\',\'' + error_flag + '\');">接口错误数据</a>';
                }
            }
            
            function itf3020_interface_error_data_window(itf_instance_id, interface_code, error_flag) {
                if (interface_code.toUpperCase() == 'PUR_PO_APPROVED') {
                    new Aurora.Window({
                        id: 'itf3020_pur_po_header_itf_window',
                        title: '采购订单接口数据',
                        url: $('itf3020_pur_po_header_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_RCV') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_rcv_trx_window',
                        title: '采购事务接口数据',
                        url: $('itf3020_pur_rcv_trx_header_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_TRX_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_inv_trx_headers_window',
                        title: '库存事务接口数据',
                        url: $('itf3020_inv_trx_headers_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ONHAND_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_inv_onhand_quantities_window',
                        title: '库存现有量接口数据',
                        url: $('itf3020_inv_onhand_quantities_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_vendor_window',
                        title: '供应商接口数据',
                        url: $('itf3020_pur_vendor_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_SITE_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_vendor_site_window',
                        title: '供应商地点接口数据',
                        url: $('itf3020_pur_vendor_site_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_CONTACT_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_vendor_contact_window',
                        title: '供应商联系人接口数据',
                        url: $('itf3020_pur_vendor_contact_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PO_LOC_CHG') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_po_location_direct_window',
                        title: '订单发运行更新接口数据',
                        url: $('itf3020_pur_po_location_direct_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_ASL_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_pur_po_asl_list_window',
                        title: '批准的供应商列表接口数据',
                        url: $('itf3020_pur_po_asl_list_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_erp_ap_invoice_window',
                        title: 'ERP应付发票接口数据',
                        url: $('itf3020_erp_ap_invoice_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_PAYMENT_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_erp_ap_payment_checks_window',
                        title: '付款信息接口数据',
                        url: $('itf3020_erp_ap_payment_checks_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_itf_inv_asn_pur_window',
                        title: '采购方创建ASN接口数据',
                        url: $('itf3020_inv_asn_pur_itf_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_FEEDBACK') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_pur_feedback_window',
                        title: '送货单导出到ERP反馈接口数据',
                        url: $('itf3020_inv_asn_pur_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_FD_ASSIST_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_pur_feedback_window',
                        title: '送货单导出到ERP反馈辅助接口数据',
                        url: $('itf3020_inv_asn_pur_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_CANCEL_FEEDBACK_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_cancel_feedback_window',
                        title: '送货单取消反馈接口数据',
                        url: $('itf3020_inv_asn_cancel_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_CANCEL_FD_ASSIST_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_cancel_feedback_window',
                        title: '送货单取消反馈辅助接口数据',
                        url: $('itf3020_inv_asn_cancel_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_purchase_window',
                        title: '送货单导出到ERP接口数据',
                        url: $('itf3020_inv_asn_purchase_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_CANCEL_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_pur_cancel_window',
                        title: '送货单取消导出接口数据',
                        url: $('itf3020_inv_asn_pur_cancel_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'WS_BATCH_COMPARE') {
                    new Aurora.Window({
                        id: 'itf3020_ws_request_compare_window',
                        title: 'WS请求批次对比接口数据',
                        url: $('itf3020_ws_request_compare_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'TAX_TYPE_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_fnd_tax_type_window',
                        title: '税率导入接口数据',
                        url: $('itf3020_fnd_tax_type_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_PO_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3020_pur_po_header_rls_window',
                        title: '采购订单导出接口数据',
                        url: $('itf3020_pur_po_header_rls_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_inv_asn_supply_window',
                        title: '送货单导入接口数据',
                        url: $('itf3020_inv_asn_supply_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_PO_CLOUD_TO_PUR') {
                    new Aurora.Window({
                        id: 'itf3020_pur_po_header_erp_window',
                        title: '送货单接口数据',
                        url: $('itf3020_pur_po_header_erp_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_RCV_TRX_AGENT_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3020_pur_trx_header_agent_window',
                        title: '代理交易采购事务导出接口数据',
                        url: $('itf3020_pur_trx_header_agent_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'BUSINESS_UNIT_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_fnd_business_units_window',
                        title: '业务实体接口数据',
                        url: $('itf3020_fnd_business_units_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ORG_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_inv_organizations_window',
                        title: '库存组织接口数据',
                        url: $('itf3020_inv_organizations_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_WAREHOUSE_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_inv_warehouses_window',
                        title: '库房接口数据',
                        url: $('itf3020_inv_warehouses_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_LOCATION_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_inv_locations_window',
                        title: '库位接口数据',
                        url: $('itf3020_inv_locations_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'UOM_CLASS_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_fnd_uom_classes_window',
                        title: '单位类别接口数据',
                        url: $('itf3020_fnd_uom_classes_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'UOM_CODE_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_fnd_uom_codes_window',
                        title: '单位接口数据',
                        url: $('itf3020_fnd_uom_codes_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ITEM_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_mtl_system_items_window',
                        title: '物料接口数据',
                        url: $('itf3020_mtl_system_items_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'FND_LOCATIONS_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_fnd_locations_window',
                        title: '地址接口数据',
                        url: $('itf3020_fnd_locations_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_BUYER_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_pur_buyers_window',
                        title: '采购员接口数据',
                        url: $('itf3020_pur_buyers_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_ORG_IMP') {
                    new Aurora.Window({
                        id: 'itf3020_pur_organizations_window',
                        title: '库存组织接口数据',
                        url: $('itf3020_pur_organizations_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3020_ap_invoice_hd_exp_window',
                        title: '导出发票头接口数据',
                        url: $('itf3020_ap_invoice_exp_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_FEEDBACK_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3020_ap_invoice_exp_fd_window',
                        title: '发票导出反馈',
                        url: $('itf3020_ap_invoice_exp_fd_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                } else {
                    new Aurora.Window({
                        id: 'itf3020_itf_standard_storages_window',
                        title: '通用杂项接口数据',
                        url: $('itf3020_itf_standard_storages_link').getUrl() + '?itf_instance_id=' + itf_instance_id + '&error_flag=' + error_flag,
                        fullScreen: true
                    });
                }
            }
        ]]></script>
        <a:dataSets>
            <!-- 状态 -->
            <a:dataSet id="itf3020_instance_status_ds" lookupCode="ITF_INSTANCE_STATUS"/>
            <!-- 动作 -->
            <a:dataSet id="itf3020_instance_action_ds" lookupCode="ITF_INSTANCE_ACTION"/>
            <!-- 执行结果状态 -->
            <a:dataSet id="itf3020_dat_execute_result_ds" lookupCode="ITF_DATA_EXECUTE_RESULT"/>
            <!-- 错误类型 -->
            <a:dataSet id="itf3020_error_type_ds" loadData="true" lookupCode="ITF_ERROR_TYPE"/>
            <!-- 查询ds -->
            <a:dataSet id="itf3020_instance_query_ds" model="itf.ITF3020.itf_instance_all_of_client_query">
                <a:fields>
                    <a:field name="status_desc" displayField="code_value_name" options="itf3020_instance_status_ds" returnField="status" valueField="code_value"/>
                    <a:field name="action_desc" displayField="code_value_name" options="itf3020_instance_action_ds" returnField="action" valueField="code_value"/>
                    <a:field name="finished_flag" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="interface_category_id"/>
                    <a:field name="interface_category_code"/>
                    <a:field name="interface_category_desc" lovGridHeight="320" lovHeight="450" lovService="itf.ITF3020.itf_interface_categories_lov" lovWidth="500" title="ITF_INTERFACE_CATEGORIES.INTERFACE_CATEGORY">
                        <a:mapping>
                            <a:map from="interface_category_id" to="interface_category_id"/>
                            <a:map from="interface_category_code" to="interface_category_code"/>
                            <a:map from="interface_category_desc" to="interface_category_desc"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="interface_desc" lovGridHeight="320" lovHeight="450" lovService="itf.ITF3020.itf_system_interface_lov" lovWidth="500" title="ITF_INTERFACE.INTERFACE">
                        <a:mapping>
                            <a:map from="interface_desc" to="interface_desc"/>
                            <a:map from="interface_id" to="interface_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="data_execute_result_desc" displayField="code_value_name" options="itf3020_dat_execute_result_ds" returnField="data_execute_result" valueField="code_value"/>
                </a:fields>
            </a:dataSet>
            <!-- 结果ds -->
            <a:dataSet id="itf3020_instance_result_ds" autoPageSize="true" autoQuery="true" model="itf.ITF3020.itf_instance_all_of_client_query" queryDataSet="itf3020_instance_query_ds">
                <a:fields>
                    <a:field name="finished_flag" checkedValue="Y" uncheckedValue="N"/>
                    <a:field name="error_type" defaultValue=""/>
                    <a:field name="error_type_desc" displayField="code_value_name" options="itf3020_error_type_ds" returnField="error_type" valueField="code_value"/>
                </a:fields>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
            </a:screenTopToolbar>
            <a:queryForm bindTarget="itf3020_instance_query_ds" resultTarget="itf3020_instance_result_ds" style="width:100%;border:none">
                <a:formToolBar labelWidth="100">
                    <a:lov name="interface_desc" bindTarget="itf3020_instance_query_ds" prompt="ITF_INTERFACE.INTERFACE">
                        <a:events>
                            <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                        </a:events>
                    </a:lov>
                    <a:lov name="interface_category_desc" bindTarget="itf3020_instance_query_ds" prompt="ITF_INTERFACE_CATEGORIES.INTERFACE_CATEGORY">
                        <a:events>
                            <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                        </a:events>
                    </a:lov>
                    <a:comboBox name="status_desc" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.STATUS">
                        <a:events>
                            <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                        </a:events>
                    </a:comboBox>
                    <a:comboBox name="action_desc" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.ACTION">
                        <a:events>
                            <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                        </a:events>
                    </a:comboBox>
                </a:formToolBar>
                <a:formBody>
                    <a:hBox>
                        <a:numberField name="lot_id" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.LOT_ID">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:numberField>
                        <a:comboBox name="data_execute_result_desc" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.DATA_EXECUTE_RESULT">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:comboBox>
                        <a:checkBox name="finished_flag" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.FINISHED_FLAG">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:checkBox>
                    </a:hBox>
                    <a:hBox>
                        <a:dateTimePicker name="instance_start_time_from" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.INSTANCE_START_TIME_FROM">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:dateTimePicker>
                        <a:dateTimePicker name="instance_start_time_to" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.INSTANCE_START_TIME_TO">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:dateTimePicker>
                        <a:dateTimePicker name="instance_end_time_from" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.INSTANCE_END_TIME_FROM">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:dateTimePicker>
                        <a:dateTimePicker name="instance_end_time_to" bindTarget="itf3020_instance_query_ds" prompt="ITF_INSTANCES.INSTANCE_END_TIME_TO">
                            <a:events>
                                <a:event name="enterdown" handler="itf3020_interfacesQuery"/>
                            </a:events>
                        </a:dateTimePicker>
                    </a:hBox>
                </a:formBody>
            </a:queryForm>
            <a:grid id="itf3020_interfaces_result_grid" bindTarget="itf3020_instance_result_ds" marginHeight="180" marginWidth="80" navBar="true">
                <a:columns>
                    <a:column name="interface_category_desc" align="center" lock="true" prompt="ITF_INTERFACE_CATEGORIES.INTERFACE_CATEGORY" sortable="true" width="80"/>
                    <a:column name="interface_desc" align="center" lock="true" prompt="ITF_INTERFACES.INTERFACE_DESC" sortable="true" width="100"/>
                    <a:column name="error_type_desc" align="center" editor="itf3020_comboBox" prompt="错误类型" width="70"/>
                    <a:column name="opera_interface" align="center" prompt="ITF_INSTANCES.OPERATE_INTERFACE">
                        <a:column name="instance_execute" align="center" prompt="执行" renderer="itf3020_operate_renderer_fun" width="50"/>
                        <a:column name="instance_ignore" align="center" prompt="忽略" renderer="itf3020_operate_renderer_fun" width="50"/>
                    </a:column>
                    <a:column name="itf_instance_id" align="center" prompt="ITF_INSTANCES.ITF_INSTANCE_ID" sortable="true" width="50"/>
                    <a:column name="lot_id" align="center" prompt="ITF_INSTANCES.LOT_ID" sortable="true" width="50"/>
                    <a:column name="status_desc" align="center" prompt="ITF_INSTANCES.STATUS" sortable="true" width="80"/>
                    <a:column name="action_desc" align="center" prompt="ITF_INSTANCES.ACTION" sortable="true" width="80"/>
                    <a:column name="data_execute_result_desc" prompt="ITF_INSTANCES.DATA_EXECUTE_RESULT" sortable="true" width="70"/>
                    <a:column name="instance_start_time_desc" align="center" prompt="ITF_INSTANCES.INSTANCE_START_TIME" renderer="Aurora.formatDate" sortable="true" width="100"/>
                    <a:column name="instance_end_time_desc" align="center" prompt="ITF_INSTANCES.INSTANCE_END_TIME" renderer="Aurora.formatDate" sortable="true" width="100"/>
                    <a:column name="finished_flag" align="center" prompt="ITF_INSTANCES.FINISHED_FLAG" sortable="true" width="60"/>
                    <a:column name="interface_data" align="center" prompt="接口错误数据" renderer="itf3020_interface_error_data" width="100"/>
                </a:columns>
                <a:editors>
                    <a:comboBox id="itf3020_comboBox" emptyText="选择类型"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
