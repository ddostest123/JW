<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author:  MinWang
    $Date: 2014-11-28 下午2:16:47 
    $Revision: 1.0
    $Purpose: CLIENT级接口实例查询
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:view package="aurora.ui.std" template="default">
        <a:link id="itf3010_itf_execute_link" url="${/request/@context_path}/modules/ws/itf_import_run.svc"/>
        <a:link id="itf3010_itf_ignore_instance" model="itf.ITF3010.itf_ignore_instance" modelaction="execute"/>
        <a:link id="itf3010_itf_cancel_ignore_instance" model="itf.ITF3010.itf_cancel_ignore_instance" modelaction="execute"/>
        <a:link id="itf3010_instance_details_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_instance_details.screen"/>
        <a:link id="itf3010_itf_pur_headers_all_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_headers_all.screen"/>
        <a:link id="itf3010_itf_pur_rcv_trx_headers_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_rcv_trx_headers.screen"/>
        <a:link id="itf3010_itf_inv_trx_headers_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_trx_headers.screen"/>
        <a:link id="itf3010_itf_inv_onhand_quantities_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_onhand_quantities.screen"/>
        <a:link id="itf3010_itf_pur_vendors_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_vendors.screen"/>
        <a:link id="itf3010_itf_pur_vendor_sites_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_vendor_sites.screen"/>
        <a:link id="itf3010_itf_pur_vendor_contacts_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_vendor_contacts.screen"/>
        <a:link id="itf3010_itf_pur_location_change_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_location_change.screen"/>
        <a:link id="itf3010_itf_pur_po_asl_list_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_po_asl_list.screen"/>
        <a:link id="itf3010_itf_ap_invoice_headers_imp_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_ap_invoice_headers_imp.screen"/>
        <a:link id="itf3010_itf_ap_payment_headers_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_ap_payment_headers.screen"/>
        <a:link id="itf3010_itf_inv_asn_headers_imp_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_asn_headers_imp.screen"/>
        <a:link id="itf3010_itf_inv_asn_feedback_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_asn_feedback.screen"/>
        <a:link id="itf3010_itf_inv_asn_cancel_feedback_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_asn_cancel_feedback.screen"/>
        <a:link id="itf3010_itf_inv_asn_headers_exp_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_asn_headers_exp.screen"/>
        <a:link id="itf3010_inv_asn_pur_cancel_link" url="${/request/@context_path}/modules/itf/ITF3015/inv_asn_pur_cancel_itf.screen"/>
        <a:link id="itf3010_ws_request_compare_link" url="${/request/@context_path}/modules/itf/ITF3015/ws_request_compare_info_itf.screen"/>
        <a:link id="itf3010_fnd_tax_type_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_fnd_tax_types.screen"/>
        <!--   <a:link id="itf3010_pur_po_header_rls_link" url="${/request/@context_path}/modules/itf/ITF3015/pur_po_header_rls_itf.screen"/> -->
        <a:link id="itf3010_inv_asn_supply_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_asn_supply_header.screen"/>
        <!--   <a:link id="itf3010_pur_po_header_erp_link" url="${/request/@context_path}/modules/itf/ITF3015/pur_po_header_erp_itf.screen"/> -->
        <!--   <a:link id="itf3010_pur_trx_header_agent_link" url="${/request/@context_path}/modules/itf/ITF3015/pur_trx_header_agent_itf.screen"/> -->
        <a:link id="itf3010_fnd_business_units_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_fnd_business_units.screen"/>
        <a:link id="itf3010_inv_organizations_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_organizations.screen"/>
        <a:link id="itf3010_inv_warehouses_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_warehouses.screen"/>
        <a:link id="itf3010_inv_locations_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_inv_locations.screen"/>
        <a:link id="itf3010_pur_buyers_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_buyers.screen"/>
        <a:link id="itf3010_fnd_uom_classes_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_fnd_uom_classes.screen"/>
        <a:link id="itf3010_fnd_uom_codes_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_fnd_uom_codes.screen"/>
        <a:link id="itf3010_mtl_system_items_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_mtl_system_items.screen"/>
        <a:link id="itf3010_fnd_locations_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_fnd_locations.screen"/>
        <a:link id="itf3010_pur_organizations_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_organizations.screen"/>
        <!-- <a:link id="itf3010_ap_invoice_exp_link" url="${/request/@context_path}/modules/itf/ITF3015/erp_ap_invoice_hd_exp_itf.screen"/> -->
        <a:link id="itf3010_ap_invoice_exp_fd_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_ap_invoice_feedback.screen"/>
        <a:link id="itf3010_pur_req_headers_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_req_headers.screen"/>
        <a:link id="itf3010_pur_purchase_cg_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_purchase_categories.screen"/>
        <a:link id="itf3010_pur_vendor_qua_iface_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_vendor_qua_iface.screen"/>
        <a:link id="itf3010_pur_per_peoples_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_per_peoples.screen"/>
        <a:link id="itf3010_pur_po_header_change_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_po_header_change.screen"/>
        <a:link id="itf3010_qms_qa_reject_lj_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_qms_qa_reject_lj.screen"/>
        <a:link id="itf3010_pur_item_price_header_link" url="${/request/@context_path}/modules/itf/ITF3015/itf_pur_item_price_header.screen"/>
        <a:link id="itf3010_dz_inv_notice_import_link" url="${/request/@context_path}/modules/itf/ITF3015/dz_inv_arrival_notices_itf.screen"/>
        <a:link id="itf3010_wz_pur_po_header_link" url="${/request/@context_path}/modules/itf/ITF3015/wz_pur_po_header_itf.screen"/>
        <div/>
        <script><![CDATA[
            var itf3010_tree_div = [];
            var c_parameter = '';
            //查询
            
            function itf3015_interfacesQuery() {
                $('itf3015_instance_result_ds').query();
            }
            
            //查看接口数据
            
            function itf3010_instances_link(value, record, name) {
                if (name == 'instance_details') {
                    if (!Aurora.isEmpty(record.get('itf_instance_id'))) {
                        return '<a href="javascript:itf3010_instance_details(' + record.get('itf_instance_id') + ');">日志</a>';
                    }
                } else if (name == 'itf_table_name') {
                    if (!Aurora.isEmpty(record.get('itf_instance_id')) && !Aurora.isEmpty(record.get('itf_table_name'))) {
                        return '<a href="javascript:itf3010_interface_data(' + record.get('itf_instance_id') + ',\'' + record.get('interface_code') + '\');">接口表</a>';
                    }
                }
            
            }
            
            function itf3010_instance_details(itf_instance_id) {
                new Aurora.Window({
                    id: 'itf3010_instance_details_window',
                    title: '日志',
                    url: $('itf3010_instance_details_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                    fullScreen: true
                });
            }
            
            function itf3010_interface_data(itf_instance_id, interface_code) {
                if (interface_code.toUpperCase() == 'PUR_PO_APPROVED') {
                    new Aurora.Window({
                        id: 'itf3015_itf_pur_headers_all_window',
                        title: '采购订单头接口信息',
                        url: $('itf3010_itf_pur_headers_all_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_RCV') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_rcv_trx_headers_window',
                        title: '采购接收事务头接口信息',
                        url: $('itf3010_itf_pur_rcv_trx_headers_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_TRX_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_trx_headers_window',
                        title: '库存事务头接口信息',
                        url: $('itf3010_itf_inv_trx_headers_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ONHAND_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_onhand_quantities_window',
                        title: '库存现有量接口数据',
                        url: $('itf3010_itf_inv_onhand_quantities_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_vendors_window',
                        title: '供应商接口数据',
                        url: $('itf3010_itf_pur_vendors_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_SITE_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_vendor_sites_window',
                        title: '供应商地点接口数据',
                        url: $('itf3010_itf_pur_vendor_sites_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_VENDOR_CONTACT_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_vendor_contacts_window',
                        title: '供应商联系人接口数据',
                        url: $('itf3010_itf_pur_vendor_contacts_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
            
                } else if (interface_code.toUpperCase() == 'PO_LOC_CHG') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_location_change_window',
                        title: '采购订单发运行直接更新接口数据',
                        url: $('itf3010_itf_pur_location_change_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
            
                } else if (interface_code.toUpperCase() == 'PUR_ASL_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_pur_po_asl_list_window',
                        title: '批准的供应商列表接口数据',
                        url: $('itf3010_itf_pur_po_asl_list_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_itf_ap_invoice_headers_imp_window',
                        title: 'ERP应付发票头接口数据',
                        url: $('itf3010_itf_ap_invoice_headers_imp_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_PAYMENT_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_itf_ap_payment_headers_window',
                        title: '付款头接口数据',
                        url: $('itf3010_itf_ap_payment_headers_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
            
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_asn_headers_imp_window',
                        title: '采购方创建ASN接口数据',
                        url: $('itf3010_itf_inv_asn_headers_imp_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
            
            
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_FEEDBACK') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_asn_feedback_window',
                        title: '送货单导出到ERP反馈接口数据',
                        url: $('itf3010_itf_inv_asn_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
            
                    //-----------------------------------------------
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_FD_ASSIST_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_inv_asn_pur_feedback_window',
                        title: '送货单导出到ERP反馈辅助接口数据',
                        url: $('itf3010_itf_inv_asn_pur_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_CANCEL_FEEDBACK_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_asn_cancel_feedback_window',
                        title: '送货单取消反馈接口数据',
                        url: $('itf3010_itf_inv_asn_cancel_feedback_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //-------------------------------------------
                } else if (interface_code.toUpperCase() == 'INV_ASN_CANCEL_FD_ASSIST_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_inv_asn_cancel_fd_window',
                        title: '送货单取消反馈辅助接口数据',
                        url: $('itf3010_inv_asn_cancel_fd_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3010_itf_inv_asn_headers_exp_window',
                        title: '送货单导出头接口数据',
                        url: $('itf3010_itf_inv_asn_headers_exp_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //---------------------------------------
                } else if (interface_code.toUpperCase() == 'INV_ASN_PUR_CANCEL_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3010_inv_asn_pur_cancel_window',
                        title: '送货单取消导出接口数据',
                        url: $('itf3010_inv_asn_pur_cancel_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //-----------------------------------
                } else if (interface_code.toUpperCase() == 'WS_BATCH_COMPARE') {
                    new Aurora.Window({
                        id: 'itf3010_ws_request_compare_window',
                        title: 'WS请求批次对比接口数据',
                        url: $('itf3010_ws_request_compare_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'TAX_TYPE_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_fnd_tax_type_window',
                        title: '税率导入接口数据',
                        url: $('itf3010_fnd_tax_type_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //-------------------------
                } else if (interface_code.toUpperCase() == 'PUR_PO_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3010_pur_po_header_rls_window',
                        title: '采购订单导出接口数据',
                        url: $('itf3010_pur_po_header_rls_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ASN_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_inv_asn_supply_window',
                        title: '送货单导入接口数据',
                        url: $('itf3010_inv_asn_supply_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //-------------------------------
                } else if (interface_code.toUpperCase() == 'PUR_PO_CLOUD_TO_PUR') {
                    new Aurora.Window({
                        id: 'itf3010_pur_po_header_erp_window',
                        title: '送货单接口数据',
                        url: $('itf3010_pur_po_header_erp_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //------------------------------
                } else if (interface_code.toUpperCase() == 'PUR_RCV_TRX_AGENT_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3010_pur_trx_header_agent_window',
                        title: '代理交易采购事务导出接口数据',
                        url: $('itf3010_pur_trx_header_agent_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'BUSINESS_UNIT_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_fnd_business_units_window',
                        title: '业务实体接口数据',
                        url: $('itf3010_fnd_business_units_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ORG_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_inv_organizations_window',
                        title: '库存组织接口数据',
                        url: $('itf3010_inv_organizations_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_WAREHOUSE_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_inv_warehouses_window',
                        title: '库房接口数据',
                        url: $('itf3010_inv_warehouses_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_LOCATION_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_inv_locations_window',
                        title: '库位接口数据',
                        url: $('itf3010_inv_locations_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'UOM_CLASS_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_fnd_uom_classes_window',
                        title: '单位类别接口数据',
                        url: $('itf3010_fnd_uom_classes_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'UOM_CODE_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_fnd_uom_codes_window',
                        title: '单位接口数据',
                        url: $('itf3010_fnd_uom_codes_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'INV_ITEM_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_mtl_system_items_window',
                        title: '物料接口数据',
                        url: $('itf3010_mtl_system_items_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'FND_LOCATIONS_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_fnd_locations_window',
                        title: '地址接口数据',
                        url: $('itf3010_fnd_locations_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_BUYER_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_pur_buyers_window',
                        title: '采购员接口数据',
                        url: $('itf3010_pur_buyers_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_ORG_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_pur_organizations_window',
                        title: '采购组织接口数据',
                        url: $('itf3010_pur_organizations_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                    //-------------------------
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_EXPORT') {
                    new Aurora.Window({
                        id: 'itf3010_ap_invoice_hd_exp_window',
                        title: '导出发票头接口数据',
                        url: $('itf3010_ap_invoice_exp_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'ERP_AP_INVOICE_FEEDBACK_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_ap_invoice_exp_fd_window',
                        title: '发票导出反馈',
                        url: $('itf3010_ap_invoice_exp_fd_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_REQ_IMP') {
                    new Aurora.Window({
                        id: 'itf3010_pur_req_headers_window',
                        title: '采购申请导入头数据',
                        url: $('itf3010_pur_req_headers_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_CATEGORY_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_pur_purchase_cg_window',
                        title: '采购类品导入数据',
                        url: $('itf3010_pur_purchase_cg_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'VEN_QUA_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_pur_vendor_qua_iface_window',
                        title: '供应商资质接口数据',
                        url: $('itf3010_pur_vendor_qua_iface_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PER_PEOPLE_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_pur_per_peoples_window',
                        title: '采购员工厂信息接口数据',
                        url: $('itf3010_pur_per_peoples_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_PO_CHANGED') {
                    new Aurora.Window({
                        id: 'itf3010_pur_po_header_change_window',
                        title: '采购订单更新头接口数据',
                        url: $('itf3010_pur_po_header_change_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'QMS_QA_REJECT_LJ_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_qms_qa_reject_lj_window',
                        title: '质检不合格产品接口数据',
                        url: $('itf3010_qms_qa_reject_lj_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'PUR_ITEM_PRICE') {
                    new Aurora.Window({
                        id: 'itf3010_pur_item_price_header_window',
                        title: '物品价格信息头接口数据',
                        url: $('itf3010_pur_item_price_header_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'CUX_DZ_INV_NOTICE_IMPORT') {
                    new Aurora.Window({
                        id: 'itf3010_dz_inv_notice_import_window',
                        title: '丹姿到货计划接口查询',
                        url: $('itf3010_dz_inv_notice_import_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else if (interface_code.toUpperCase() == 'CUX_WZ_PUR_PO') {
                    new Aurora.Window({
                        id: 'itf3010_wz_pur_po_header_window',
                        title: '五征订单接口查询',
                        url: $('itf3010_wz_pur_po_header_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                        fullScreen: true
                    });
                } else {
                    // new Aurora.Window({
                    // id: 'itf3010_itf_standard_storages_window',
                    // title: '通用杂项接口数据',
                    // url: $('itf3010_itf_standard_storages_link').getUrl() + '?itf_instance_id=' + itf_instance_id,
                    // fullScreen: true
                    // });
                    Aurora.showMessage('${l:PROMPT}', '${l:ITF_INTERFACES_QUERY.INTERFACE_TYPE_NO_RELEVANT_DATE}', function() {
                        return;
                    });
            
                }
            }
            
            function itf3010_treeGrid_renderer(value, record, name) {
                var index = $('itf3010_instance_query_parameter_ds').indexOf(record);
                var id = 'itf3010_' + index;
                itf3010_tree_div.push(id);
                return '<div id="' + id + '">' + value + '</div>';
            }
            
            function itf3010_set_query_null() {
                var query_ds;
                query_ds = $('itf3010_instance_query_ds').getAt(0);
                query_ds.set('need_confirm_flag', '');
                query_ds.set('running_error_flag', '');
                query_ds.set('business_error_flag', '');
                query_ds.set('master_error_flag', '');
                query_ds.set('ignored_flag', '');
                query_ds.set('error_flag', '');
            }
            
            function itf_3010_tree_click(grid, row, record) {
                var query_ds;
                var id;
                c_parameter = record.get('query_code');
                query_ds = $('itf3010_instance_query_ds').getAt(0);
                id = 'itf3010_' + $('itf3010_instance_query_parameter_ds').indexOf(record);
            
                //设置被选中div背景色为红色
                document.getElementById(id).style.color = "#FF0000";
            
                //设置未被选中的div背景色为黑色
                for (i = 0;i < itf3010_tree_div.length;i++) {
                    if (itf3010_tree_div[i] != id) {
                        document.getElementById(itf3010_tree_div[i]).style.color = "#000000";
                    }
                }
                //设置查询条件为空
                itf3010_set_query_null();
                if (record.get('query_code') == 'ALL') {
                    $('itf3010_execute_btn').disable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                if (record.get('query_code') == 'NEED_CONFIRM') {
                    query_ds.set('need_confirm_flag', 'Y');
                    query_ds.set('ignored_flag', 'N');
                    $('itf3010_execute_btn').disable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                if (record.get('query_code') == 'IGNORED') {
                    query_ds.set('ignored_flag', 'Y');
                    $('itf3010_execute_btn').disable();
                    $('itf3010_ignore_btn').disable();
                    $('itf3010_cancel_ignore_btn').enable();
                }
                if (record.get('query_code') == 'ERROR') {
                    query_ds.set('error_flag', 'Y');
                    query_ds.set('ignored_flag', 'N');
                    $('itf3010_execute_btn').enable();
                    $('itf3010_ignore_btn').enable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                if (record.get('query_code') == 'RUNNING_ERROR') {
                    query_ds.set('running_error_flag', 'Y');
                    query_ds.set('ignored_flag', 'N');
                    $('itf3010_execute_btn').enable();
                    $('itf3010_ignore_btn').enable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                if (record.get('query_code') == 'BUSINESS_ERROR') {
                    query_ds.set('business_error_flag', 'Y');
                    query_ds.set('ignored_flag', 'N');
                    $('itf3010_execute_btn').enable();
                    $('itf3010_ignore_btn').enable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                if (record.get('query_code') == 'MASTER_ERROR') {
                    query_ds.set('master_error_flag', 'Y');
                    query_ds.set('ignored_flag', 'N');
                    $('itf3010_execute_btn').enable();
                    $('itf3010_ignore_btn').enable();
                    $('itf3010_cancel_ignore_btn').disable();
                }
                $('itf3015_instance_result_ds').query();
            }
            
            function itf3010_execute_result(value, record, name) {
                var execute_result = record.get('data_execute_result');
                //var execute_result_desc = record.get('data_execute_result_desc');
                if (execute_result == 'FAULT') {
                    return "<div style='background-color:#FF3333'>" + execute_result + "</div>";
                } else if (execute_result == 'PART') {
                    return "<div style='background-color:#FFFF33'>" + execute_result + "</div>";
                } else {
                    return execute_result;
                }
            }
            
            function itf3010_instance_execute() {
                var records = $('itf3015_instance_result_ds').getSelected();
                if (records.length == 0) {
                    Aurora.showMessage('提示', '请选择至少一条记录！');
                    return;
                }
                Aurora.showConfirm('提示', '确认执行？', function() {
                    Aurora.Masker.mask(Ext.getBody(), '正在执行...');
                    for (var i = 0;i < records.length;i++) {
                        Aurora.request({
                            url: $('itf3010_itf_execute_link').getUrl(),
                            para: {
                                'itf_instance_id': records[i].get('itf_instance_id')
                            },
                            scope: this,
                            sync: true
                        });
                    }
                    Aurora.Masker.unmask(Ext.getBody());
                    $('itf3015_instance_result_ds').query();
                    Aurora.showMessage('提示', '执行成功！');
                });
            }
            
            function itf3010_instance_ignore() {
                var records = $('itf3015_instance_result_ds').getSelected();
                if (records.length == 0) {
                    Aurora.showMessage('提示', '请选择至少一条记录！');
                    return;
                }
                var itf_instance_id = '';
                Aurora.showConfirm('提示', '确认忽略？', function() {
                    Aurora.Masker.mask(Ext.getBody(), '正在执行...');
                    for (var i = 0;i < records.length;i++) {
                        itf_instance_id = records[i].get('itf_instance_id');
                        Aurora.request({
                            url: $('itf3010_itf_ignore_instance').getUrl(),
                            para: {
                                'itf_instance_id': itf_instance_id
                            },
                            scope: this,
                            sync: true
                        });
                    }
                    Aurora.Masker.unmask(Ext.getBody());
                    $('itf3015_instance_result_ds').query();
                    Aurora.showMessage('提示', '执行成功！');
                });
            }
            
            function itf3010_cancel_instance_ignore() {
                var records = $('itf3015_instance_result_ds').getSelected();
                if (records.length == 0) {
                    Aurora.showMessage('提示', '请选择至少一条记录！');
                    return;
                }
                var itf_instance_id = '';
                Aurora.showConfirm('提示', '确认取消忽略？', function() {
                    Aurora.Masker.mask(Ext.getBody(), '正在执行...');
                    for (var i = 0;i < records.length;i++) {
                        itf_instance_id = records[i].get('itf_instance_id');
                        Aurora.request({
                            url: $('itf3010_itf_cancel_ignore_instance').getUrl(),
                            para: {
                                'itf_instance_id': itf_instance_id
                            },
                            scope: this,
                            sync: true
                        });
                    }
                    Aurora.Masker.unmask(Ext.getBody());
                    $('itf3015_instance_result_ds').query();
                    Aurora.showMessage('提示', '执行成功！');
                });
            }
            
            function windowopen_itf_instance_comments(value) {
                Aurora.showMessage('错误信息', value, null, 500, 400);
            }
            
            function itf3010_itf_instances_result_grid_render(value, record, name) {
                if (name == 'error_message') {
                    if (value == 'undefined' || Ext.isEmpty(value) || value === undefined) {
                        return '';
                    } else {
                        return '<a href="javascript:windowopen_itf_instance_comments(\'' + value + '\');">' + value + '</a>';
                    }
                }
            }
        ]]></script>
        <a:dataSets>
            <!-- 状态 -->
            <a:dataSet id="itf3010_instance_status_ds" lookupCode="ITF_INSTANCE_STATUS"/>
            <!-- 动作 -->
            <a:dataSet id="itf3010_instance_action_ds" lookupCode="ITF_INSTANCE_ACTION"/>
            <!-- 执行结果状态 -->
            <a:dataSet id="itf3010_dat_execute_result_ds" lookupCode="ITF_DATA_EXECUTE_RESULT"/>
            <!-- 查询ds -->
            <a:dataSet id="itf3010_instance_query_parameter_ds" loadData="true" model="itf.ITF3015.itf_instances_query_parameter_tree"/>
            <!--itf使用的查询dateset-->
            <a:dataSet id="itf3010_instance_query_ds">
                <a:fields>
                    <a:field name="status_desc" displayField="code_value_name" options="itf3010_instance_status_ds" returnField="status" valueField="code_value"/>
                    <a:field name="action_desc" displayField="code_value_name" options="itf3010_instance_action_ds" returnField="action" valueField="code_value"/>
                    <a:field name="itf_instance_id"/>
                    <a:field name="interface_code" lovGridHeight="320" lovHeight="450" lovService="itf.ITF3010.itf_system_interface_lov" lovWidth="500" title="ITF_INTERFACE.INTERFACE">
                        <a:mapping>
                            <a:map from="interface_description" to="interface_description"/>
                            <a:map from="interface_code" to="interface_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="batch_num"/>
                    <a:field name="data_execute_result_desc" displayField="code_value_name" options="itf3010_dat_execute_result_ds" returnField="data_execute_result" valueField="code_value"/>
                    <a:field name="instance_start_time_from"/>
                    <a:field name="instance_start_time_to"/>
                    <a:field name="instance_end_time_from"/>
                    <a:field name="instance_end_time_to"/>
                </a:fields>
            </a:dataSet>
            <!--itf结果ds -->
            <a:dataSet id="itf3015_instance_result_ds" autoCount="true" autoPageSize="true" model="itf.ITF3015.itf_instance_all_of_client_query" queryDataSet="itf3010_instance_query_ds" selectable="true"><![CDATA[
            ]]></a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:hBox>
                <a:vBox>
                    <a:treeGrid id="itf3010_instance_query_parameter_tree_grid" bindTarget="itf3010_instance_query_parameter_ds" expandField="expand" idField="query_code" marginHeight="92" parentField="parent_query_code" sequenceField="sequence" showCheckBox="false" width="200">
                        <a:columns>
                            <a:column name="query_name" align="left" prompt="STATUS" renderer="itf3010_treeGrid_renderer" width="180"/>
                        </a:columns>
                        <a:events>
                            <a:event name="rowclick" handler="itf_3010_tree_click"/>
                        </a:events>
                    </a:treeGrid>
                </a:vBox>
                <a:vBox>
                    <a:queryForm bindTarget="itf3010_instance_query_ds" resultTarget="itf3015_instance_result_ds">
                        <a:formToolBar>
                            <a:hBox labelWidth="100">
                                <a:lov name="interface_code" bindTarget="itf3010_instance_query_ds" prompt="ITF_INTERFACE.INTERFACE">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:lov>
                                <a:textField name="itf_instance_id" bindTarget="itf3010_instance_query_ds" prompt="ITF_INTERFACES_QUERY.EXAMPLE">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:textField>
                                <a:textField name="batch_num" bindTarget="itf3010_instance_query_ds" prompt="批次号">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:textField>
                            </a:hBox>
                        </a:formToolBar>
                        <a:formBody>
                            <a:hBox labelWidth="100">
                                <a:dateTimePicker name="instance_start_time_from" bindTarget="itf3010_instance_query_ds" prompt="开始时间从">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:dateTimePicker>
                                <a:dateTimePicker name="instance_start_time_to" bindTarget="itf3010_instance_query_ds" prompt="开始时间至">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:dateTimePicker>
                                <a:dateTimePicker name="instance_end_time_from" bindTarget="itf3010_instance_query_ds" prompt="结束时间从">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:dateTimePicker>
                                <a:dateTimePicker name="instance_end_time_to" bindTarget="itf3010_instance_query_ds" prompt="结束时间至">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:dateTimePicker>
                            </a:hBox>
                            <a:hBox labelWidth="100">
                                <a:comboBox name="action_desc" bindTarget="itf3010_instance_query_ds" prompt="ITF_INSTANCES.ACTION">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:comboBox>
                                <a:comboBox name="status_desc" bindTarget="itf3010_instance_query_ds" prompt="ITF_INSTANCES.STATUS">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:comboBox>
                                <a:comboBox name="data_execute_result_desc" bindTarget="itf3010_instance_query_ds" prompt="ITF_INSTANCES.DATA_EXECUTE_RESULT">
                                    <a:events>
                                        <a:event name="enterdown" handler="itf3015_interfacesQuery"/>
                                    </a:events>
                                </a:comboBox>
                            </a:hBox>
                        </a:formBody>
                    </a:queryForm>
                    <a:grid id="itf3015_interfaces_result_grid" autoAppend="false" bindTarget="itf3015_instance_result_ds" marginHeight="150" marginWidth="294" navBar="true" style="margin-top:5px;">
                        <a:columns>
                            <a:column name="interface_description" lock="true" prompt="ITF_INTERFACES.INTERFACE_DESC" sortable="true" width="80"/>
                            <a:column name="business_group" align="center" lock="true" prompt="ITF_INTERFACES_QUERY.BUSINESS_GROUP" sortable="true" width="60"/>
                            <a:column name="itf_instance_id" lock="true" prompt="ITF_INTERFACES_QUERY.EXAMPLE" sortable="true" width="40"/>
                            <a:column name="batch_num" prompt="ITF_INTERFACES_QUERY.BATCH_NO" sortable="true" width="50"/>
                            <a:column name="seg_num" prompt="ITF_INTERFACES_QUERY.SEGMENT" width="40"/>
                            <a:column name="status" align="center" prompt="ITF_INTERFACES_QUERY.INSTANCE_STATE" sortable="true" width="60"/>
                            <a:column name="action" align="center" prompt="ITF_INTERFACES_QUERY.INSTANCE_ACTION" sortable="true" width="70"/>
                            <a:column name="data_execute_result" align="center" prompt="ITF_INTERFACES_QUERY.RESULT" renderer="itf3010_execute_result" sortable="true" width="60"/>
                            <a:column name="error_message" align="center" prompt="ITF_INTERFACES_QUERY.ERROR_MESSAGE" renderer="itf3010_itf_instances_result_grid_render" sortable="true" width="100"/>
                            <a:column name="instance_start_time" align="center" prompt="ITF_INSTANCES.INSTANCE_START_TIME" renderer="Aurora.formatDate" sortable="true" width="80"/>
                            <a:column name="instance_end_time" align="center" prompt="ITF_INSTANCES.INSTANCE_END_TIME" renderer="Aurora.formatDate" sortable="true" width="80"/>
                            <a:column name="finished_flag" align="center" prompt="ITF_INSTANCES.FINISHED_FLAG" sortable="true" width="40"/>
                            <a:column name="instance_details" align="center" prompt="ITF_INTERFACES_QUERY.LOG" renderer="itf3010_instances_link" width="35"/>
                            <a:column name="itf_table_name" align="center" prompt="ITF_INTERFACES_QUERY.INTERFACE_TABLE" renderer="itf3010_instances_link" width="85"/>
                        </a:columns>
                    </a:grid>
                </a:vBox>
            </a:hBox>
        </a:screenBody>
    </a:view>
</a:screen>
