<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure>
        <a:model-query defaultWhereclause=" exists (select 1           from sys_codes_vl t          where t.code_id = t1.code_id     and t.code = &apos;PAYMENT_OBJECT&apos;            and t.enabled_flag = &apos;Y&apos;)    and t1.enabled_flag = &apos;Y&apos;" model="sys.sys_code_values_vl" rootPath="object_list"/>
    </a:init-procedure>
    <a:view>
        <a:link id="exp_req_ref_dimension_link" url="${/request/@context_path}/modules/expm/EXP2010/exp_req_ref_dimension.screen"/>
        <a:link id="exp_req_ref_user_groups_link" url="${/request/@context_path}/modules/expm/EXP2010/exp_req_ref_user_groups.screen"/>
        <a:link id="exp_req_ref_obj_types_link" url="${/request/@context_path}/modules/expm/EXP2010/exp_req_ref_obj_types.screen"/>
        <a:link id="exp_req_ref_types_link" url="${/request/@context_path}/modules/expm/EXP2010/exp_req_ref_types.screen"/>
        <div/>
        <script><![CDATA[
            function queryExpExpenseReqTypesDefine() {
                $('expm_exp_expense_req_types_define_result_ds').query();
            }
            
            function resetExpExpenseReqTypesDefine() {
                $('expm_exp_expense_req_types_define_query_ds').reset();
            }
            
            function expenseTypesRenderer(value, record, name) {
                if (!record.isNew) {
                    var expenseRequisitionTypeId = record.get('expense_requisition_type_id');
                    return '<a href="javascript:expenseTypesRendererWindow(' + expenseRequisitionTypeId + ')">${l:CON_PAYMENT_SCHEDULES.EXPENSE_TYPE_ID}</a>';
                }
            }
            
            function expenseTypesRendererWindow(expenseRequisitionTypeId) {
                new Aurora.Window({
                    id: 'exp_req_ref_types_renderer_window',
                    url: /*exp_req_ref_types.screen*/$('exp_req_ref_types_link').getUrl()+'?expense_requisition_type_id=' + expenseRequisitionTypeId,
                    title: '${l:CON_PAYMENT_SCHEDULES.EXPENSE_TYPE_ID}',
                    height: 440,
                    width: 530
                });
            }
            
            function expReqRefObjTypesRenderer(value, record, name) {
                if (!record.isNew) {
                    var expenseRequisitionTypeId = record.get('expense_requisition_type_id');
                    return '<a href="javascript:expReqRefObjTypesRendererWindow(' + expenseRequisitionTypeId + ')">${l:EXP_REQ_REF_OBJ_TMP1.EXPENSE_OBJECT_CODE}</a>';
                }
            }
            
            function expReqRefObjTypesRendererWindow(expenseRequisitionTypeId) {
                new Aurora.Window({
                    id: 'exp_req_ref_obj_types_renderer_window',
                    url: /*exp_req_ref_obj_types.screen*/$('exp_req_ref_obj_types_link').getUrl()+'?expense_requisition_type_id=' + expenseRequisitionTypeId,
                    title: '${l:EXP_REQ_REF_OBJ_TMP1.EXPENSE_OBJECT_CODE}',
                    height: 440,
                    width: 650
                });
            }
            
            function expReqRefUserGroupsRenderer(value, record, name) {
                if (!record.isNew) {
                    var expenseRequisitionTypeId = record.get('expense_requisition_type_id');
                    return '<a href="javascript:expReqRefUserGroupsRendererWindow(' + expenseRequisitionTypeId + ')">${l:BGT_BALANCE_RUNNING_PARAMETERS.EMPLOYEE_GROUP_ID}</a>';
                }
            }
            
            function expReqRefUserGroupsRendererWindow(expenseRequisitionTypeId) {
                new Aurora.Window({
                    id: 'exp_req_ref_user_groups_renderer_window',
                    url: /*exp_req_ref_user_groups.screen*/$('exp_req_ref_user_groups_link').getUrl()+'?expense_requisition_type_id=' + expenseRequisitionTypeId,
                    title: '${l:BGT_BALANCE_RUNNING_PARAMETERS.EMPLOYEE_GROUP_ID}',
                    height: 440,
                    width: 530
                });
            }
            
            function expReqRefDimensionRenderer(value, record, name) {
                if (!record.isNew) {
                    var expenseRequisitionTypeId = record.get('expense_requisition_type_id');
                    return '<a href="javascript:expReqRefDimensionRendererWindow(' + expenseRequisitionTypeId + ')">${l:ACP_INVOICE_CREATE_SERVICE.DIMENSION}</a>';
                }
            }
            
            function expReqRefDimensionRendererWindow(expenseRequisitionTypeId) {
                new Aurora.Window({
                    id: 'exp_req_ref_dimension_renderer_window',
                    url: /*exp_req_ref_dimension.screen*/$('exp_req_ref_dimension_link').getUrl()+'?expense_requisition_type_id=' + expenseRequisitionTypeId,
                    title: '${l:ACP_INVOICE_CREATE_SERVICE.DIMENSION}',
                    height: 440,
                    width: 550
                });
            }
            
            function expenseRequisitionTypeCodeEdit(record, name) {
                if (!record.isNew) {
                    return '';
                } else {
                    return 'expense_requisition_type_code_tf';
                }
            }
            
            function setinitdata(ds, record, index) {
                record.set('company_id', '${/session/@company_id}');
                record.set('enabled_flag', 'Y');
                record.set('reserve_budget', 'Y');
                record.set('budget_control_enabled', 'Y');
                record.set('auto_approve_flag', 'N');
                record.set('auto_audit_flag', 'N');
                record.set('accrued_flag', 'N');
                record.set('one_off_flag', 'N');
                record.set('tolerance_flag', 'N');
            }
            
            function gridEditorFunction(record, name) {
                if (name == 'tolerance_range_name') {
                    if (record.get('tolerance_flag') != 'N') {
                        return 'tolerance_range_name_cmb';
                    }
                    return '';
                } else if (name == 'tolerance_ratio') {
                    if (record.get('tolerance_flag') != 'N') {
                        return 'tolerance_ratio_tf';
                    }
                    return '';
                }
            }
            
            function updateFunction(dataSet, record, name, value, oldValue) {
            
                if (name == 'tolerance_flag' && value == 'N') {      
                    record.getField('tolerance_ratio').setRequired(false);
                    record.getField('tolerance_range_name').setRequired(false);
                    record.set('tolerance_range_name', '');
                    record.set('tolerance_range','');
                    record.set('tolerance_ratio', '');
                }
                if (name == 'tolerance_flag' && value == 'Y') {
                    record.getField('tolerance_ratio').setRequired(true);
                    record.getField('tolerance_range_name').setRequired(true);
                }
            }
            
            function reqExisEditorFunction(record, name) {
                if (record.isNew) {
                    return "checkbox_editor";
                } else {
                    return "";
                }
                // if (record.get('exp_req_count') > 0) {
                    // return '';
                // } else {
                    // return 'checkbox_editor';
                // }
            }
            
            function loadGrid() {
                $('req_types_grid').onLoad();
            }
            
            ]]></script>
        <a:dataSets>
            <a:dataSet id="gld_currency_ds" loadData="true" model="gld.gld_currency_vl"/>
            <a:dataSet id="doc_page_type_ds" loadData="true" lookupCode="DOCUMENT_PAGE_TYPE"/>
            <a:dataSet id="expm_sys_code_values_ds" loadData="true">
                <a:datas dataSource="object_list"/>
            </a:dataSet>
            <a:dataSet id="layout_locality" loadData="true" lookupCode="TOLERANCE_CONTRORL_TYPE"/>
            <a:dataSet id="expm_exp_expense_req_types_define_query_ds" model="expm.EXP2010.exp_expense_req_types_define">
                <a:fields>
                    <a:field name="expense_requisition_type_code"/>
                    <a:field name="description"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="expm_exp_expense_req_types_define_result_ds" autoQuery="true" model="expm.EXP2010.exp_expense_req_types_define" queryDataSet="expm_exp_expense_req_types_define_query_ds" selectable="true">
                <a:fields>
                    <a:field name="expense_requisition_type_id"/>
                    <a:field name="company_id"/>
                    <a:field name="expense_report_type_id"/>
                    <a:field name="accrued_flag"/>
                    <a:field name="auto_audit_flag"/>
                    <a:field name="expense_requisition_type_code" required="true"/>
                    <a:field name="description" required="true"/>
                    <a:field name="currency_name" displayField="currency_name" options="gld_currency_ds" returnField="currency_code" valueField="currency_code"/>
                    <a:field name="expense_report_type_code" autoComplete="true" autoCompleteField="expense_report_type_code" lovGridHeight="350" lovHeight="500" lovService="exp.EXP2010.exp_expense_req_types_define_lov" lovWidth="450" title="EXP_EXP_REPORT_TYPE.EXPENSE_REPORT_TYPE_CODE">
                        <a:mapping>
                            <a:map from="expense_report_type_id" to="expense_report_type_id"/>
                            <a:map from="expense_report_type_code" to="expense_report_type_code"/>
                            <a:map from="description" to="expense_report_type"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="expense_report_type"/>
                    <a:field name="payment_code_name" displayField="code_value_name" options="expm_sys_code_values_ds" prompt="EXP_EXPENSE_REQ_TYPES_VL.PAYMENT_CODE" returnField="payment_code" valueField="code_value"/>
                    <a:field name="report_name"/>
                    <a:field name="tolerance_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="tolerance_range_name" displayField="code_value_name" options="layout_locality" prompt="EXP_EXPENSE_REQ_TYPES.TOLERANCE_RANGE" returnField="tolerance_range" valueField="code_value"/>
                    <a:field name="tolerance_ratio"/>
                    <a:field name="one_off_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="auto_approve_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="enabled_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="reserve_budget" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="budget_control_enabled" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="exp_req_count"/>
                    <a:field name="document_page_type_display" displayField="code_value_name" options="doc_page_type_ds" prompt="PROMPT.DOCUMENT_PAGE_TYPE" required="true" returnField="document_page_type" valueField="code_value"/>
                    <a:field name="document_page_type"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="setinitdata"/>
                    <a:event name="update" handler="updateFunction"/>
                    <a:event name="submitsuccess" handler="loadGrid"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form row="1" title="EXP_EXPENSE_REQ_TYPE.EXP_REQ_TYPE_DEF" width="600">
                <a:textField name="expense_requisition_type_code" bindTarget="expm_exp_expense_req_types_define_query_ds">
                    <a:events>
                        <a:event name="enterdown" handler="queryExpExpenseReqTypesDefine"/>
                    </a:events>
                </a:textField>
                <a:textField name="description" bindTarget="expm_exp_expense_req_types_define_query_ds">
                    <a:events>
                        <a:event name="enterdown" handler="queryExpExpenseReqTypesDefine"/>
                    </a:events>
                </a:textField>
            </a:form>
            <a:hBox>
                <a:button click="queryExpExpenseReqTypesDefine" text="HAP_QUERY"/>
                <a:button click="resetExpExpenseReqTypesDefine" text="HAP_RESET"/>
            </a:hBox>
            <a:grid id="req_types_grid" bindTarget="expm_exp_expense_req_types_define_result_ds" height="350" navBar="true" width="980">
                <a:toolBar>
                    <a:button type="add"/>
                    <a:button type="clear"/>
                    <a:button type="save"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="expense_requisition_type_code" align="center" editorFunction="expenseRequisitionTypeCodeEdit" sortable="true" width="80"/>
                    <a:column name="description" align="left" editor="description_tf" sortable="true" width="120"/>
                    <a:column name="document_page_type_display" align="center" editor="combobox_editor" width="100"/>
                    <a:column name="currency_name" align="center" editor="currency_name_cmb" prompt="EXP_EXPENSE_REPORT_TYPES.CURRENCY_CODE" sortable="true" width="80"/>
                    <a:column name="expense_report_type_code" align="center" editor="expense_report_type_code_lov" sortable="true" width="100"/>
                    <a:column name="expense_report_type" align="center" sortable="true" width="100"/>
                    <a:column name="payment_code_name" align="center" editor="payment_code_name_cmb" sortable="true" width="80"/>
                    <a:column name="report_name" align="center" editor="report_name_tf" sortable="true" width="80"/>
                    <a:column name="tolerance_flag" align="center" editor="tolerance_flag_cb" sortable="true" width="80"/>
                    <a:column name="tolerance_range_name" align="center" editorFunction="gridEditorFunction" sortable="false" width="80"/>
                    <a:column name="tolerance_ratio" align="center" editorFunction="gridEditorFunction" sortable="true" width="80"/>
                    <a:column name="one_off_flag" align="center" editor="one_off_flag_cb" sortable="true" width="50"/>
                    <a:column name="auto_approve_flag" align="center" editor="auto_approve_flag_cb" sortable="true" width="50"/>
                    <a:column name="enabled_flag" align="center" editor="enabled_flag_cb" sortable="true" width="50"/>
                    <a:column name="reserve_budget" align="center" editorFunction="reqExisEditorFunction" sortable="true" width="50"/>
                    <a:column name="budget_control_enabled" align="center" editorFunction="reqExisEditorFunction" sortable="true" width="50"/>
                    <a:column name="rd1" align="center" renderer="expenseTypesRenderer" sortable="true" width="60"/>
                    <a:column name="rd2" align="center" renderer="expReqRefObjTypesRenderer" sortable="true" width="60"/>
                    <a:column name="rd3" align="center" renderer="expReqRefUserGroupsRenderer" sortable="true" width="60"/>
                    <a:column name="rd4" align="center" renderer="expReqRefDimensionRenderer" sortable="true" width="60"/>
                </a:columns>
                <a:editors>
                    <a:textField id="expense_requisition_type_code_tf"/>
                    <a:textField id="description_tf"/>
                    <a:comboBox id="currency_name_cmb"/>
                    <a:lov id="expense_report_type_code_lov"/>
                    <a:comboBox id="payment_code_name_cmb"/>
                    <a:textField id="report_name_tf"/>
                    <a:checkBox id="tolerance_flag_cb"/>
                    <a:comboBox id="tolerance_range_name_cmb"/>
                    <a:textField id="tolerance_ratio_tf"/>
                    <a:checkBox id="one_off_flag_cb"/>
                    <a:checkBox id="auto_approve_flag_cb"/>
                    <a:checkBox id="enabled_flag_cb"/>
                    <a:checkBox id="checkbox_editor"/>
                    <a:comboBox id="combobox_editor"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
