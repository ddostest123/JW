<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单创建，送货单临时头数据查询BM
-->
<a:screen xmlns:c="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="flex_value_set_code = &apos;INV_ASN_ISROSH&apos; " fetchAll="true" model="public.fnd_flex_value_v_lov" rootPath="find_rosh"/>
        <a:model-query model="public.get_system_info" rootPath="inv5010_current_date_rp"/>
        <a:model-query defaultWhereClause="v.config_classify_code = &apos;ASN&apos; AND v.config_item_code = &apos;ASN_12&apos;" fetchAll="true" model="public.get_fnd_config_center_coop_bg_item_value" rootPath="bg_item_asn_12"/>
        <a:model-query defaultWhereClause="cbi.config_classify_code = &apos;PO&apos; AND cbi.config_item_code = &apos;PO_14&apos;" fetchAll="true" model="public.get_fnd_config_center_bg_item_value_modify" rootPath="bg_item_po_14"/>
    </a:init-procedure>
    <a:view>
        <a:link id="eepi1010_upload_link" url="${/request/@context_path}/modules/pur/EEPI1010/eepi1010_upload_vendor_query.screen"/>
        <a:link id="eepi1010_item_link" url="${/request/@context_path}/modules/inv/INV5010/eepi_item_validata.screen"/>
        <a:link id="inv5010_asn_create_save_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_save.svc"/>
        <a:link id="inv5010_asn_create_submit_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_submit.svc"/>
        <a:link id="inv5010_asn_create_create_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_create_create.svc"/>
        <a:link id="inv5010_asn_create_edit_lines_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_edit_lines.screen"/>
        <a:link id="inv5010_asn_create_attachment_file_upload_link" url="${/request/@context_path}/attachment_file_upload.screen"/>
        <a:link id="inv5010_asn_line_import_link" url="${/request/@context_path}/modules/inv/INV5010/inv_asn_line_import.screen"/>
        <script><![CDATA[
            //加法
            
            function inv5010_accAdd(arg1, arg2) {
                var r1, r2, m, c;
                try {
                    r1 = arg1.toString().split(".")[1].length;
                } catch (e) {
                    r1 = 0;
                }
                try {
                    r2 = arg2.toString().split(".")[1].length;
                } catch (e) {
                    r2 = 0;
                }
                c = Math.abs(r1 - r2);
                m = Math.pow(10, Math.max(r1, r2));
                if (c > 0) {
                    var cm = Math.pow(10, c);
                    if (r1 > r2) {
                        arg1 = Number(arg1.toString().replace(".", ""));
                        arg2 = Number(arg2.toString().replace(".", "")) * cm;
                    } else {
                        arg1 = Number(arg1.toString().replace(".", "")) * cm;
                        arg2 = Number(arg2.toString().replace(".", ""));
                    }
                } else {
                    arg1 = Number(arg1.toString().replace(".", ""));
                    arg2 = Number(arg2.toString().replace(".", ""));
                }
                return (arg1 + arg2) / m;
            
            }
            
            //乘法
            
            function inv5010_accMul(arg1, arg2) {
                var m = 0,
                    s1 = arg1.toString(),
                    s2 = arg2.toString();
                try {
                    m += s1.split(".")[1].length;
                } catch (e) {}
                try {
                    m += s2.split(".")[1].length;
                } catch (e) {}
                return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);
            }
            
            // 返回
            
            function inv5010_inv_asn_header_go_back() {
                $('inv5010_asn_create_window').close();
            }
            
            function invGoBack(flag) {
                if (flag == 'Y') {
                    $('inv5010_asn_create_window').close();
                    if (typeof inv5010_asn_headers_back == 'function') {
                        inv5010_asn_headers_back();
                    }
                    if (typeof inv5010_delete_selected_query == 'function') {
                        inv5010_delete_selected_query();
                    }
                } else {
            
                    $('inv5010_asn_create_window').close();
                    if (typeof inv5010_asn_headers_query == 'function') {
                        inv5010_asn_headers_query();
                    }
                }
            }
            
            // 保存当前临时数据
            
            function inv5010_inv_asn_header_save() {
                inv5010_inv_asn_header_update('10');
            }
            
            // 生成送货单
            
            function inv5010_inv_asn_header_create() {
                
                var list_ds = $('inv5010_asn_create_line_ds');
                   if (!list_ds.validate()) {
                     return false;
                 } 
                var records = list_ds.getAll();
                var records_split = list_ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    if(records[i].get('require_item_code').substring(0,3) != '308'){
                     continue;
                    }
                     var package_min_amount = records[i].get('package_min_amount');
                     var  ship_quantity =  records[i].get('ship_quantity'); 
                     var quantity_enable_shipped = records[i].get('quantity_enable_shipped');
                    if(!records[i].get('copy_flag')){
                     for (var k = 0;k < records_split.length;k++) {
                      if (records_split[k].get('copy_flag') && records_split[k].get('copy_flag') =='Y'){
                         if(records[i].get('segment1') == records_split[k].get('segment1') &&
                            records[i].get('line_num') == records_split[k].get('line_num') &&
                            records[i].get('del_plan_line_num') == records_split[k].get('del_plan_line_num')   ) {
                            ship_quantity  = ship_quantity + records_split[k].get('ship_quantity');
                          }
                        }
                     }
                       if (ship_quantity > quantity_enable_shipped){
                          Aurora.showMessage('${l:PROMPT}', ' 拆分数量不能大于可发数量 ' );
                         return false;
                         }  /* else if( package_min_amount < quantity_enable_shipped-ship_quantity){
                           Aurora.showMessage('${l:PROMPT}', ' 生成的送货单剩余数量不允许大于最小包装量，请联系景旺人员拆分送货计划行 ' );
                           return false;
                         }   */ 
                    }
                    
                }
              //  Aurora.showMessage('${l:PROMPT}', '成功' );
                
               inv5010_inv_asn_header_update('20');
            }
            
            // 生成并提交送货单
            
            function inv5010_inv_asn_header_submit() {
                inv5010_inv_asn_header_update('30');
            }
            
            // 保存动作
            
            function init_creat(id){
                  
	                 /* if(!Aurora.isEmpty(id)){
	                       var body = document.getElementById('ext-gen11');
			                var div = document.createElement('div');
			                div.id = 'ext-loadValidate3';
			                div.className = 'fGuide validate';
			                body.appendChild(div);
			                var _div = document.createElement('div');
			                _div.className = 'fGuide validate_bg';
			                _div.id = 'ext-loadValidate_bg3';
			                body.appendChild(_div);
			                console.log('1---');
			                var html = '<iframe id="ext_loadValidateIframe_atm" style="position: absolute;" allowtransparency="true" src="${/request/@context_path}/modules/inv/INV5010/eepi_item_validata.screen?inv_asn_header='+id+'" frameBorder="0" onload="main_iFrameHeight(\'ext_loadValidateIframe_atm\',900,600)"></iframe>';
			                div.innerHTML = html;  
              } */
              
              new Aurora.Window({
                        id: 'inv5010_eepi10101_item_window',
                        url: $('eepi1010_item_link').getUrl()+ '?asn_header_id=' + id,
                        title: '电子环保资料上传及查询',
                        height: 450,
                        width: 650
                    });
            }
            
            function main_iFrameHeight(id,width,height) {
                var ifm = document.getElementById(id);
                ifm.style.width = width + 'px';
                ifm.style.height = height + 'px';
                var screenHeight = ifm.parentNode.offsetHeight;
                var screenWidth = ifm.parentNode.offsetWidth;
                ifm.style.marginTop = (screenHeight - ifm.offsetHeight)/2 + 'px';
                ifm.style.marginLeft = (screenWidth - ifm.offsetWidth)/2 + 'px';
                ifm.style.backgroundColor = 'transparent';
            }
            
            function inv5010_inv_asn_header_update(p_operate) {
            
                var headers_ds = $('inv5010_asn_create_header_ds');
                if (!headers_ds.validate()) {
                    return false;
                }
                var header_record = headers_ds.getCurrentRecord();
                var atm_counts = header_record.get('atm_counts');
                var atms_flag = header_record.get('atms_flag');
                if (Aurora.isEmpty(header_record.get('ship_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.SHIP_DATE_NOT_NULL}');
                    return false;
                }
            
                if (Aurora.isEmpty(header_record.get('expected_date'))) {
                    Aurora.showMessage('${l:PROMPT}', '${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}');
                    return false;
                }
                if (atm_counts == 0 && atms_flag != 0) {
                    Aurora.showMessage('${l:PROMPT}', '请上传附件！');
                    return false;
                }
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    ship_date: header_record.get('ship_date'),
                    expected_date: header_record.get('expected_date'),
                    header_desc: header_record.get('header_desc'),
                    logistics_company: header_record.get('logistics_company'),
                    dispatching_staff: header_record.get('dispatching_staff'),
                    contact_information: header_record.get('contact_information'),
                    logistics_cost: header_record.get('logistics_cost'),
                    express_number: header_record.get('express_number')
                };
            
                var list_ds = $('inv5010_asn_create_line_ds');
                if (!list_ds.validate()) {
                    return false;
                }
                var records = list_ds.getAll();
            
                var lines = [];
                for (var i = 0;i < records.length;i++) {
                    // Modify by Hunter 2658 at 2018-02-07 T1922 T2017
                    // 去掉生产日期的校验
                    // if (records[i].get('production_date')> new Date()) {
                    // Aurora.showMessage('${l:PROMPT}', '${l:PROMPT.PRODUCTION_DATE_INPUT_ERROR}');
                    // return;
                    // }
                    lines.push(records[i].data);
                }
                datas['lines'] = lines;
            
                $('inv5010_inv_asn_header_create_btn').disable();
                // $('inv5010_inv_asn_header_submit_btn').disable();
                Aurora.Masker.mask($('inv5010_asn_create_window').wrap, '${l:PROMPT.SUBMITING}');
                Aurora.request({
                    url: $('inv5010_asn_create_save_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        //动作类型,10保存，20生成送货单，30提交送货单
                        if (p_operate == '10') {
                            $('inv5010_inv_asn_header_create_btn').enable();
                            // $('inv5010_inv_asn_header_submit_btn').enable();
                            Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                            list_ds.query();
            
                        } else if (p_operate == '20') {
                            inv5010_inv_asn_create();
            
                        } else if (p_operate == '30') {
                            inv5010_inv_asn_submit();
                        }
                    },
                    failure: function(res) {
                        
                        $('inv5010_inv_asn_header_create_btn').enable();
                        // $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    error: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        // $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            
          
            // 生成动作
            
            function inv5010_inv_asn_create() {
                //校验行上的发运数量等信息
                var lines_ds = $('inv5010_asn_create_line_ds');
                if (!lines_ds.validate()) {
                    $('inv5010_inv_asn_header_create_btn').enable();
                    // $('inv5010_inv_asn_header_submit_btn').enable();
                    Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    return false;
                }
                var headers_ds = $('inv5010_asn_create_header_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    asn_type_code: header_record.get('asn_type_code')
                };
                Aurora.request({
                    url: $('inv5010_asn_create_create_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        // $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                        if(res.result.last_flag=='YY'){
                             console.log(header_record.get('asn_header_id'));
                             init_creat(header_record.get('asn_header_id')); 
                        }else{
                        Aurora.showConfirm('${l:PROMPT}', '${l:INV5010.ASN_HAS_BEEN_GENERATED_EDIT_OR_NOT}', function() {
                            new Aurora.Window({
                                id: 'inv5010_asn_edit_lines_link_window',
                                title: '${l:INV5010.EDIT_LINE_INFO}',
                                url: $('inv5010_asn_create_edit_lines_link').getUrl() + '?asn_header_id=' + header_record.get('asn_header_id') + '&is_printing_ink=' + header_record.get('is_printing_ink'),
                                fullScreen: true
                            }).on('beforeclose', function() {
                                // 判断是否还存在未提交的预览送货单
                                invGoBack(res.result.last_flag);
                            });
            
                        }, function() {
                            invGoBack(res.result.last_flag);
                        }, 300, 150);
                       }
                    },
                    failure: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        // $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                        
                    },
                    error: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        // $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            // 提交动作
            
            function inv5010_inv_asn_submit() {
                //校验行上的发运数量等信息
                var lines_ds = $('inv5010_asn_create_line_ds');
                if (!lines_ds.validate()) {
                    $('inv5010_inv_asn_header_create_btn').enable();
                    $('inv5010_inv_asn_header_submit_btn').enable();
                    Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    return false;
                }
                var headers_ds = $('inv5010_asn_create_header_ds');
                var header_record = headers_ds.getCurrentRecord();
                var datas;
                datas = {
                    asn_header_id: header_record.get('asn_header_id'),
                    asn_type_code: header_record.get('asn_type_code')
                };
                Aurora.request({
                    url: $('inv5010_asn_create_submit_link').getUrl(),
                    para: datas,
                    success: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                        // 判断是否还存在未提交的预览送货单
                        invGoBack(res.result.last_flag);
                    },
                    failure: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    error: function(res) {
                        $('inv5010_inv_asn_header_create_btn').enable();
                        $('inv5010_inv_asn_header_submit_btn').enable();
                        Aurora.Masker.unmask($('inv5010_asn_create_window').wrap);
                    },
                    scope: this
                });
            }
            
            function inv5010_asnCreateHeaderDsValidator(record, name, value) {
                var current_date = Aurora.formatDate(new Date());
                value = Aurora.formatDate(value);
            
                //获取“发货日期可选当日之后”配置项的值
                var asn_12_item_value = '${/model/bg_item_asn_12/record/@bg_config_item_value}';
            
                //送货日期
                // if (name == 'ship_date') {
                // //add by Hunter.wang at 20171124
                // //没有配置此配置项，则校验发货日期与当前日期
                // if (Aurora.isEmpty(asn_12_item_value) || asn_12_item_value == "N") {
                // if (value > current_date) {
                // return '${l:INV5010.DELIVERY_DATE_CAN_NOT_LATER_THAN_SYSDATE}';
                // }
                // }
                // }
                // 上传
                //预计到货日期
                if (name == 'expected_date') {
                    if (value < Aurora.formatDate(record.get('ship_date'))) {
                        return '${l:INV5010_EXPECT_DATE_COMPRE_ERROR}';
                    }
                }
                return true;
            }
            
            function inv5010_asnCreateGridRenderer(value, record, name) {
                if (name == 'operate') {
                    if (record.get('copy_flag') == 'Y') {
                        if (!Aurora.isEmpty(record.get('asn_line_id'))) {
                            return '<a href="javascript:inv5010_asnCreateGridRendererRemove(' + record.id + ')">${l:PROMPT.DELETE}</a>';
                        } else {
                            return '<a href="javascript:inv5010_asnCreateGridRendererClear(' + record.id + ')">${l:PROMPT.DELETE}</a>';
                        }
                    } else {
                        return '<a href="javascript:inv5010_asnCreateGridRendererSplit(' + record.id + ')">${l:INV5010.ASN_SPLIT}</a>';
                    }
                }
            
                if (name == 'line_attachment') {
                    if (!Aurora.isEmpty(record.get('asn_line_id'))) {
                        return '<a href="javascript:inv5010_line_attachment_upload_function(' + record.get('asn_line_id') + ')">${l:ATM.UPLOAD_ATTACHMENT}</a>';
                    }
                }
            }
            
            function inv5010_line_attachment_upload_function(asn_line_id) {
                new Aurora.Window({
                    id: 'inv5010_asn_create_attachment_file_upload_link_window',
                    title: '${l:HAP_UPLOAD_TITLE}',
                    url: $('inv5010_asn_create_attachment_file_upload_link').getUrl() + '?pkvalue=' + asn_line_id + '&table_name=INV_ASN_LINES_TEMP',
                    width: 500,
                    height: 500
                });
            }
            
            function inv5010_asnCreateGridRendererRemove(record_id) {
                var record = $('inv5010_asn_create_line_ds').findById(record_id);
                $('inv5010_asn_create_line_ds').remove(record);
            }
            
            function inv5010_asnCreateGridRendererClear(record_id) {
                var record = $('inv5010_asn_create_line_ds').findById(record_id);
                $('inv5010_asn_create_line_ds').remove(record);
            }
            
            function inv5010_asnCreateGridRendererSplit(record_id) {
                var max_as_line_num = 0;
                var records = $('inv5010_asn_create_line_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    max_as_line_num = max_as_line_num > records[i].get('asn_line_num') ? max_as_line_num : records[i].get('asn_line_num');
                }
                var old_record = $('inv5010_asn_create_line_ds').findById(record_id);
                var new_record = $('inv5010_asn_create_line_ds').create({
                    'asn_header_id': old_record.get('asn_header_id'),
                    'asn_line_id': old_record.get('asn_line_id'),
                    'asn_line_num': max_as_line_num + 1,
                    'require_item_code': old_record.get('require_item_code'),
                    'require_item_name': old_record.get('require_item_name'),
                    'ean_code': old_record.get('ean_code'),
                    'supply_item_code': old_record.get('supply_item_code'),
                    'supply_item_name': old_record.get('supply_item_name'),
                    'segment1': old_record.get('segment1'),
                    'line_num': old_record.get('line_num'),
                    'shipment_num': old_record.get('shipment_num'),
                    'release_num': old_record.get('release_num'),
                    'revision_num': old_record.get('revision_num'),
                    'del_plan_line_id': old_record.get('del_plan_line_id'),
                    'del_plan_number': old_record.get('del_plan_number'),
                    'del_plan_line_num': old_record.get('del_plan_line_num'),
                    'need_del_quantity': old_record.get('need_del_quantity'),
                    'need_arrive_date': old_record.get('need_arrive_date'),
                    'send_address': old_record.get('send_address'),
                    'unit_meas_lookup_code': old_record.get('unit_meas_lookup_code'),
                    'uom_name': old_record.get('uom_name'),
                    'quality_guarantee_date': old_record.get('quality_guarantee_date'),
                    'production_date': old_record.get('production_date'),
                    'packet_quantity': old_record.get('packet_quantity'),
                    'box_amount': old_record.get('box_amount'),
                    'isrosh': old_record.get('isrosh'),
                    'mantissa_quantity': old_record.get('mantissa_quantity'),
                    'unit_price': old_record.get('unit_price'),
                    'quantity': old_record.get('quantity'),
                    'ship_quantity': old_record.get('ship_quantity'),
                    'need_by_date': old_record.get('need_by_date'),
                    'request_arrival_date': old_record.get('request_arrival_date'),
                    'contacts_info': old_record.get('contacts_info'),
                    'promised_date': old_record.get('promised_date'),
                    'lots_num': old_record.get('lots_num'),
                    'lots_validity_date': old_record.get('lots_validity_date'),
                    'invoice_num': old_record.get('invoice_num'),
                    'serial_num': old_record.get('serial_num'),
                    'line_desc': old_record.get('line_desc'),
                    'comments': old_record.get('comments'),
                    'quantity_enable_shipped': old_record.get('quantity_enable_shipped'),
                    'deliver_over': old_record.get('deliver_over'),
                    'copy_flag': 'Y',
                    'package_min_amount': old_record.get('package_min_amount') //add by lhh
                });
                debugger;
                //如果拆分前的行，单重为必输则新拆分的也为必输 add by lhh
                if (old_record.getField('packet_weight').isRequired()) {
                    new_record.getField('packet_weight').setRequired(true);
                }
            }
            // //新增事件（拆分）
            // function inv5010_asnCreateLine_addFun(ds,record){
            
            // }
            //加载事件
            
            function inv5010_asnCreateLine_loadFun(ds) {
                var records = ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
            
                    //发运数量为0时默认为待发货数量
                    if (record.get('ship_quantity') == 0) {
                        record.set('ship_quantity', record.get('default_shipped_quantity'));
                    }
                    var category_name = record.get('category_name');
                    var trade_type = record.get('trade_type');
                    if (record.get('category_name') == 'CCL') {
                        record.getMeta().getField('packet_weight').setRequired(true);
                    } else if (record.get('category_name') != 'CCL' && (record.get('trade_type') == 'B' || record.get('trade_type') == 'C' || record.get('trade_type') == 'Y' || record.get('trade_type') == 'Z')) {
                        record.getMeta().getField('packet_weight').setRequired(true);
                    } else {
                        record.getMeta().getField('packet_weight').setRequired(false);
                    }
                    var ship_quantity = record.get('ship_quantity');
                    var packet_quantity = record.get('packet_quantity');
                    var box_amount;
                    var mantissa_quantity;
                    if (!Aurora.isEmpty(ship_quantity) && !Aurora.isEmpty(packet_quantity)) {
                        box_amount = getIntegerTimes(ship_quantity, packet_quantity);
                        //如下算法求余数会有多位小数,采用相减法 huangyingfei 20190523 主要原因是double在js中精度丢失,醉了
                        mantissa_quantity ;//= ship_quantity % packet_quantity;
                        if (isPositiveIntegerTimes(box_amount)) {
                            box_amount = box_amount;
                            mantissa_quantity = Subtr(ship_quantity, accMul(box_amount, packet_quantity));
                        } else {
                            box_amount = parseInt(box_amount) + 1;
                            mantissa_quantity = Subtr(ship_quantity, accMul((box_amount - 1), packet_quantity));
                        }
                        record.set('box_amount', box_amount);
                        record.set('mantissa_quantity', mantissa_quantity);
                    }
                    // if (record.get('serial_required_flag') == 'Y') {
                    // record.getMeta().getField('serial_num').setRequired(true);
                    // } else {
                    // record.getMeta().getField('serial_num').setRequired(false);
                    // }
            
                    // if (record.get('lot_required_flag') == 'Y') {
                    // record.getMeta().getField('lots_num').setRequired(true);
                    // record.getMeta().getField('lots_validity_date').setRequired(true);
                    // } else {
                    // record.getMeta().getField('lots_num').setRequired(false);
                    // record.getMeta().getField('lots_validity_date').setRequired(false);
                    // }
                }
            }
            
            function inv5010_asnCreateLineDsValidator(record, name, value) {
                var quantity_enable_shipped = record.get('quantity_enable_shipped');
                var package_min_amount = record.get('package_min_amount');
                var deliver_over = record.get('deliver_over'); //允差上限
                var unlimited_flag = record.get('unlimited_flag'); //无限制标识
                //批次号不能为汉字
                var reg = new RegExp("[\\u4E00-\\u9FFF]+", "g");
                if (name == 'lots_num') {
                    if (reg.test(value)) {
                        return '请勿输入汉字！';
                    }
                }
                if (name == 'packet_quantity') {
                    if (value == 0) {
                        return '单包装数不能为0！';
                    }
                }
                if (name == 'ship_quantity') {
                    if (value == 0) {
                        return '${l:INV5010.SHIPMENT_QUANTITY_CAN_NOT_BE_ZERO}';
                    } else {
            
                        //add by Hunter.wang at 2017-04-26
                        //判断本次发运数量时，优先考虑是否受限。受限时在考虑允差;不受限情况下不做判断
                        if (unlimited_flag == 'N') {
            
                            //add by Hunter.wang at 2017-03-01
                            //判断本次发运数量 <= 可发运数量 + 允差
                            var can_shipped_quantity = inv5010_accMul(quantity_enable_shipped, inv5010_accAdd(1, deliver_over));
                            if (value > can_shipped_quantity) {
                                return '${l:INV5010.SHIP_NOW_CAN_NOT_GREATER_THAN_AVAILABLE}';
                            }
                            // if (value < package_min_amount) {
                            // return '本次发运数量不能小于最小包装量';
                            // }
                        }
            
                    }
                }
                return true;
            }
            
            //比较两个日期的大小
            
            function inv5010_compareDate(start, end) {
                if (typeof(start) == 'string') {
                    start = new Date(start.replace(/-/g, '/'));
                }
                if (typeof(end) == 'string') {
                    end = new Date(end.replace(/-/g, '/'));
                }
                if (start > end) {
                    return false;
                }
                return true;
            }
            //生产日期校验
            var warn_flag = 'N';
            
            function inv5010_production_dateValidator(record, name, value) {
                if (name == 'production_date') {
                    var delivery_lead_days = record.get('delivery_lead_days');
                    var end = new Date(value);
                    end.setDate(end.getDate() + delivery_lead_days);
                    if ( !! end) {
                        // if (!Ext.isEmpty(end)) {
                        var sysdate = new Date();
                        if (warn_flag == 'N' && !inv5010_compareDate(sysdate, end)) {
                            Aurora.showMessage('${l:PROMPT}', '应尽早送货，避免货物存储过期，谢谢！');
                            warn_flag = 'Y';
                        }
                    }
                    return true;
                }
            }
            //获取两个数的倍数,返回倍数
            
            
            function getIntegerTimes(arg1, arg2) {
            
                var t1 = 0,
                    t2 = 0,
                    r1, r2;
                try {
                    t1 = arg1.toString().split(".")[1].length
                } catch (e) {}
                try {
                    t2 = arg2.toString().split(".")[1].length
                } catch (e) {}
                with(Math) {
                    r1 = Number(arg1.toString().replace(".", ""));
                    r2 = Number(arg2.toString().replace(".", ""));
                    return (r1 / r2) * pow(10, t2 - t1);
                }
            }
            //判断是否为正整数,返回true或false
            
            function isPositiveIntegerTimes(arg) {
                var num = arg.toString();
                if (!(/(^[1-9]\d*$)/.test(num))) {
                    return false;
                } else {
                    return true;
                }
            }
            
            
            function inv5010_asnEditUpdate(ds, record, name, value) {
                debugger;
                if (name == 'production_date') {
                    warn_flag = 'N';
                }
                var packet_quantity = record.get('packet_quantity');
                if (name == 'packet_quantity' || (name == 'ship_quantity' && typeof(packet_quantity) != 'undefined')) {
                    var ship_quantity = record.get('ship_quantity');
                    var packet_quantity = record.get('packet_quantity');
                    var box_amount = getIntegerTimes(ship_quantity, packet_quantity);
                    var mantissa_quantity; //如下算法求余数会有多位小数,采用相减法 huangyingfei 20190523
                    if (isPositiveIntegerTimes(box_amount)) {
                        box_amount = box_amount;
                        mantissa_quantity = Subtr(ship_quantity, accMul(box_amount, packet_quantity));
                    } else {
                        box_amount = parseInt(box_amount) + 1;
                        mantissa_quantity = Subtr(ship_quantity, accMul((box_amount - 1), packet_quantity));
                    }
                    record.set('box_amount', box_amount);
                    record.set('mantissa_quantity', mantissa_quantity);
            
                    //  Aurora.showMessage('${l:PROMPT}', 'hyf你好！' + parseFloat(15 * 0.13) + ',' + ship_quantity + ',' + box_amount + ',' + packet_quantity + ',' + mantissa_quantity);
            
                }
            }
            
            function inv5010_inv_asn_header_attachment() {
                var headers_ds = $('inv5010_asn_create_header_ds');
                var header_record = headers_ds.getCurrentRecord();
                var asn_header_id = header_record.get('asn_header_id');
                if (asn_header_id) {
                    new Aurora.Window({
                        id: 'inv5010_asn_create_attachment_file_upload_link_window',
                        title: '${l:HAP_UPLOAD_TITLE}',
                        url: $('inv5010_asn_create_attachment_file_upload_link').getUrl() + '?pkvalue=' + asn_header_id + '&table_name=INV_ASN_HEADERS',
                        width: 500,
                        height: 500
                    }).on('close', function() {
                        $('inv5010_asn_create_header_ds').query();
                    });
                }
            }
            
            function inv5010_inv_asn_line_reflesh() {
                $('inv5010_asn_create_line_ds').query();
            }
            
            function inv5010_inv_asn_line_import() {
                new Aurora.Window({
                    id: 'inv5010_asn_line_import_link_win',
                    title: '${l:HAP_UPLOAD_TITLE}',
                    url: $('inv5010_asn_line_import_link').getUrl(),
                    fullScreen: true
                }).on('close', function() {
                    $('inv5010_asn_create_line_ds').query();
                });
                //window.open($('inv5010_asn_line_import_link').getUrl());
            }
            
            //除法
            
            function accDiv(arg1, arg2) {
                var t1 = 0,
                    t2 = 0,
                    r1, r2;
                try {
                    t1 = arg1.toString().split(".")[1].length
                } catch (e) {}
                try {
                    t2 = arg2.toString().split(".")[1].length
                } catch (e) {}
                with(Math) {
                    r1 = Number(arg1.toString().replace(".", ""))
                    r2 = Number(arg2.toString().replace(".", ""))
                    return accMul((r1 / r2), pow(10, t2 - t1));
                }
            }
            //乘法
            
            
            function accMul(arg1, arg2) {
                var m = 0,
                    s1 = arg1.toString(),
                    s2 = arg2.toString();
                try {
                    m += s1.split(".")[1].length
                } catch (e) {}
                try {
                    m += s2.split(".")[1].length
                } catch (e) {}
                return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m)
            }
            //加法
            
            
            function accAdd(arg1, arg2) {
                var r1, r2, m;
                try {
                    r1 = arg1.toString().split(".")[1].length
                } catch (e) {
                    r1 = 0
                }
                try {
                    r2 = arg2.toString().split(".")[1].length
                } catch (e) {
                    r2 = 0
                }
                m = Math.pow(10, Math.max(r1, r2))
                return (arg1 * m + arg2 * m) / m
            }
            //减法
            
            
            function Subtr(arg1, arg2) {
                var r1, r2, m, n;
                try {
                    r1 = arg1.toString().split(".")[1].length
                } catch (e) {
                    r1 = 0
                }
                try {
                    r2 = arg2.toString().split(".")[1].length
                } catch (e) {
                    r2 = 0
                }
                m = Math.pow(10, Math.max(r1, r2));
                n = (r1 >= r2) ? r1 : r2;
                return ((arg1 * m - arg2 * m) / m).toFixed(n);
            }
            
            function inv5010_inv_asn_header_eepi(){
                window.open($('eepi1010_upload_link').getUrl());
               /*  new Aurora.Window({
                        id: 'inv5010_eepi1010_upload_window',
                        url: $('eepi1010_upload_link').getUrl(),
                        title: '电子环保资料上传及查询',
                        fullScreen: true
                    }); */
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="yes_or_no_ds" lookupCode="YES_OR_NO"/>
            <a:dataSet id="find_rosh_ds">
                <a:datas dataSource="find_rosh"/>
            </a:dataSet>
            <a:dataSet id="inv5010_asn_create_type_list_ds" autoQuery="true" fetchAll="true" model="public.asn_type_lov" queryUrl="${/request/@context_path}/autocrud/public.asn_type_lov/query?asn_create=asn_create"/>
            <a:dataSet id="inv5010_asn_create_header_ds" autoPageSize="true" autoQuery="true" model="inv.INV5010.inv_asn_headers_temp" queryUrl="${/request/@context_path}/autocrud/inv.INV5010.inv_asn_headers_temp/query?asn_header_id=${/parameter/@asn_header_id}" selectable="true">
                <a:fields>
                    <a:field name="asn_header_id" readOnly="true"/>
                    <a:field name="asn_number" readOnly="true"/>
                    <a:field name="company_name" readOnly="true"/>
                    <a:field name="vendor_name" readOnly="true"/>
                    <a:field name="ship_to_organization_name" readOnly="true"/>
                    <a:field name="location_name" readOnly="true"/>
                    <a:field name="ship_date" required="true" requiredMessage="${l:INV_ASN_HEADERS_TEMP.SHIP_DATE_NOT_NULL}"/>
                    <a:field name="expected_date" required="true" requiredMessage="${l:INV_ASN_HEADERS_TEMP.EXPECTED_DATE_NOT_NULL}" validator="inv5010_asnCreateHeaderDsValidator"/>
                    <a:field name="vendor_site_name" readOnly="true"/>
                    <a:field name="data_source" readOnly="true"/>
                    <a:field name="header_desc"/>
                    <a:field name="asn_type_code"/>
                    <a:field name="asn_type_name_display" displayField="asn_type_name" options="inv5010_asn_create_type_list_ds" returnField="asn_type_code" valueField="asn_type_code"/>
                    <a:field name="is_immed_shipped_flag_display" readOnly="true"/>
                    <a:field name="actual_receiver_name" readOnly="true"/>
                    <a:field name="logistics_company" autoComplete="false" fetchRemote="false" lovHeight="500" lovService="public.fnd_flex_value_v_lov?flex_value_set_code=INV_ASN_LOGISTICS_COMPANY" lovWidth="500" title="INV_ASN_HEADERS_TEMP.LOGISTICS_COMPANY">
                        <a:mapping>
                            <a:map from="flex_value" to="logistics_company_code"/>
                            <a:map from="flex_desc" to="logistics_company"/>
                        </a:mapping>
                    </a:field>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="inv5010_asn_create_line_ds" autoQuery="true" fetchAll="true" model="inv.INV5010.inv_asn_lines_temp" queryUrl="${/request/@context_path}/autocrud/inv.INV5010.inv_asn_lines_temp/query?asn_header_id=${/parameter/@asn_header_id}" selectable="false">
                <a:fields>
                    <a:field name="asn_line_id"/>
                    <a:field name="ship_quantity" required="true" requiredMessage="INV5010.SHIPMENT_QUANTITY_CAN_NOT_BE_BULL_OR_ZERO" validator="inv5010_asnCreateLineDsValidator"/>
                    <a:field name="production_date" required="true" requiredMessage="生产日期不能为空" validator="inv5010_production_dateValidator"/>
                    <a:field name="comments"/>
                    <a:field name="serial_num" requiredMessage="INV5010.SERIAL_NUM_CAN_NOT_NULL"/>
                    <a:field name="lots_num" required="true" requiredMessage="INV5010.BATCH_NUM_CAN_NOT_NULL" validator="inv5010_asnCreateLineDsValidator"/>
                    <a:field name="lots_validity_date" requiredMessage="INV5010.DATE_OF_EXPIRY_CAN_NOT_NULL"/>
                    <a:field name="packet_weight" requiredMessage="单重不能为空"/>
                    <a:field name="packet_quantity" required="true" requiredMessage="单包装数不能为空"/>
                    <!--  <a:field name="isrosh" requiredMessage="ROSH要求不能为空" displayField="flex_desc" options="find_rosh_ds" 
                       required="true" returnField="isrosh" valueField="flex_value" lovWidth="120" >
                        <a:mapping >
                            <a:map from="flex_value" to="isrosh" />
                        </a:mapping>
                    </a:field> -->
                    <!-- <a:field name="isrosh" required="true" requiredMessage="是否ROSH不能为空"/>
                    <a:field name="isrosh_desc" displayField="code_value_name" options="yes_or_no_ds" required="true" requiredMessage="是否ROSH不能为空" returnField="isrosh" valueField="code_value"/>
                     -->
                </a:fields>
                <a:events>
                    <a:event name="load" handler="inv5010_asnCreateLine_loadFun"/>
                    <a:event name="update" handler="inv5010_asnEditUpdate"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <!-- <a:toolbarButton click="inv5010_inv_asn_header_save" style="margin-left:20px;" text="PROMPT.SAVE" width="100"/> -->
                <a:toolbarButton id="inv5010_inv_asn_header_create_btn" click="inv5010_inv_asn_header_create" style="margin-left:20px;" text="INV5010.CREATE_ASN" width="100"/>
                <!-- <a:toolbarButton id="inv5010_inv_asn_header_submit_btn" click="inv5010_inv_asn_header_submit" style="margin-left:20px;" text="INV5010.SUBMIT_ASN" width="100"/> -->
                <a:gridButton bind="inv5010_asn_create_grid" className="item-rbtn-blue button-excel" type="excel" width="100"/>
                <a:toolbarButton click="inv5010_inv_asn_line_import" text="PROMPT.IMPORT" width="100"/>
                <a:toolbarButton click="inv5010_inv_asn_header_attachment" style="margin-left:20px;" text="PROMPT.ATTACHMENT" width="100"/>
                <a:toolbarButton click="inv5010_inv_asn_header_go_back" style="margin-left:20px;" text="HAP_BACK" width="100"/>
                <a:toolbarButton click="inv5010_inv_asn_header_eepi" style="margin-left:20px;" text="电子环保资料上传" width="140"/>
                <div>
                    <span style="display:block;margin-left:10px; margin-top:10px;color:red;"><![CDATA[“AB类材料的电子料请上传Rohs2.0、无卤、MSDS、规格书、REACH类型的电子环保资料或上传保证函，否则无法生成送货单]]></span>
                </div>
            </a:screenTopToolbar>
            <a:form marginWidth="70">
                <a:hBox labelWidth="90">
                    <a:label name="asn_number" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS.ASN_NUMBER" width="230"/>
                    <a:label name="vendor_name" bindTarget="inv5010_asn_create_header_ds" prompt="PUR_VENDORS.VENDOR" width="230"/>
                    <a:label name="vendor_site_name" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS.SHIPMENT_LOCATION" width="300"/>
                    <a:datePicker name="ship_date" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS.SHIP_DATE" width="120"/>
                </a:hBox>
                <a:hBox labelWidth="90">
                    <a:label name="company_name" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.COMPANY_ID" width="230"/>
                    <a:label name="ship_to_organization_name" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.SHIP_TO_ORGANIZATION_ID" width="230"/>
                    <a:label name="location_name" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.LOCATION_ID" width="300"/>
                    <a:datePicker name="expected_date" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS_TEMP.EXPECTED_DATE" width="120"/>
                </a:hBox>
                <a:hBox labelWidth="90">
                    <a:comboBox name="asn_type_name_display" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS.ASN_TYPE" width="230"/>
                    <a:label name="is_immed_shipped_flag_display" bindTarget="inv5010_asn_create_header_ds" prompt="PUR_LINES_ALL.IS_IMMED_SHIPPED_FLAG" width="230"/>
                    <a:label name="actual_receiver_name" bindTarget="inv5010_asn_create_header_ds" prompt="PUR_LINES_ALL.ACTUAL_RECEIVER_NAME" width="300"/>
                </a:hBox>
                <a:hBox labelWidth="90">
                    <a:textField name="header_desc" bindTarget="inv5010_asn_create_header_ds" prompt="INV_ASN_HEADERS.HEADER_DESC" width="850"/>
                </a:hBox>
            </a:form>
            <a:tabPanel marginHeight="330" marginWidth="70">
                <a:tabs>
                    <a:tab prompt="物料信息" width="130">
                        <a:grid id="inv5010_asn_create_grid" autoAppend="false" bindTarget="inv5010_asn_create_line_ds" marginHeight="370" marginWidth="85" navBar="false" style="margin:5px;">
                            <!-- <a:toolBar>
                                <a:button click="inv5010_inv_asn_line_reflesh" text="刷新"/>
                            </a:toolBar> -->
                            <a:columns>
                                <a:column name="operate" align="center" lock="true" prompt="PROMPT.OPERATE" renderer="inv5010_asnCreateGridRenderer" width="30"/>
                                <a:column name="asn_line_num" align="center" lock="true" prompt="INV_ASN_LINES_TEMP.LINE_NUM" width="30"/>
                                <a:column name="asn_number" align="center" hidden="true" lock="true" prompt="INV_ASN_HEADERS.ASN_NUMBER" width="80"/>
                                <a:column name="segment1" align="center" lock="true" prompt="INV_ASN_LINES_TEMP.SEGMENT1" width="80"/>
                                <a:column name="line_num" align="center" lock="true" prompt="INV_ASN_HEADERS.LINE_NUM" width="40"/>
                                <a:column name="del_plan_line_num" align="left" lock="true" prompt="送货计划行号" sortable="true" width="30"/>
                                <a:column name="require_item_code" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.ITEM_CODE" sortable="true" width="60"/>
                                <a:column name="require_item_name" align="left" lock="true" prompt="INV_ASN_LINES_TEMP.ITEM_NAME" sortable="true" width="100"/>
                                <a:placeHolder id="inv5010_modifyItemspecnRecords"/>
                                <a:column name="quantity" align="right" prompt="INV_ASN_LINES_TEMP.QUANTITY" renderer="Aurora.formatNumber" width="40"/>
                                <a:column name="quantity_enable_shipped" align="right" prompt="PUR_LINE_LOCATIONS_ALL.QUANTITY_ENABLE_SHIPPED" renderer="Aurora.formatNumber" width="40"/>
                                <a:column name="ship_quantity" align="right" editor="inv5010_asn_ship_quantity_nf" prompt="PUR_LINE_LOCATIONS_ALL.SHIPPED_QUANTITY" width="50"/>
                                <a:column name="lots_num" align="center" editor="inv5010_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.LOTS_NUM" width="50"/>
                                <!-- 生产日期 -->
                                <a:column name="production_date" editor="inv5010_asn_create_grid_dp" prompt="INV_ASN_LINES_TEMP.PRODUCTION_DATE" renderer="Aurora.formatDate" width="50"/>
                                <a:column name="packet_quantity" align="right" editor="inv5010_asn_ship_quantity_nf" prompt="INV_ASN_LINES_TEMP.PACKET_QUANTITY" width="40"/>
                                <!-- 件数 -->
                                <a:column name="box_amount" prompt="INV_ASN_LINES_TEMP.BOX_AMOUNT" width="30"/>
                                <!-- 尾数 -->
                                <a:column name="mantissa_quantity" prompt="DZINV1010.MANTISSA_QUANTITY" width="30"/>
                                <!--   <a:column name="isrosh" editor="inv5010_asn_create_grid_tf_cbx" prompt="ROSH要求" width="40"/>
                               -->
                                <!--  保质期 -->
                                <a:column name="quality_guarantee_date" prompt="INV_ASN_LINES_TEMP.QUALITY_GUARANTEE_DATE" width="40"/>
                                <a:column name="delivery_lead_days" align="right" prompt="送货提前期" width="50"/>
                                <a:column name="packet_weight" align="right" editor="inv5010_asn_ship_quantity_nf" prompt="单重" width="50"/>
                                <a:column name="uom_name" align="center" prompt="INV_ASN_LINES_TEMP.UNIT_MEAS_LOOKUP_CODE" width="30"/>
                                <a:column name="package_min_amount" align="right" prompt="最小包装量" width="50"/>
                                <a:column name="lots_validity_date" align="center" editor="inv5010_asn_create_grid_dp" prompt="INV_ASN_LINES_TEMP.LOTS_VALIDITY_DATE" renderer="Aurora.formatDate" width="50"/>
                                <!-- <a:column name="serial_num" align="center" editor="inv5010_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.SERIAL_NUM" width="50"/> -->
                                <!-- <a:column name="invoice_num" align="center" editor="inv5010_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.INVOICE_NUM" width="50"/> -->
                                <a:column name="comments" align="left" editor="inv5010_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.VENDOR_COMMENTS" width="100"/>
                                <a:column name="release_num" align="center" prompt="INV_ASN_LINES_TEMP.RELEASE_NUM" width="40"/>
                                <!--   <a:column name="environmental_batch" align="left" editor="inv5010_asn_create_grid_tf" prompt="INV_ASN_LINES_TEMP.ENVIRONMENTAL_BATCH" width="40"/>
                                <a:column name="box_weight" align="left" editor="inv5010_asn_ship_quantity_nf" prompt="INV_ASN_LINES_TEMP.BOX_WEIGHT_KG" width="40"/> -->
                                <a:column name="shipment_num" align="center" prompt="INV_ASN_LINES_TEMP.SHIPMENT_NUM" width="40"/>
                                <a:column name="revision_num" align="center" prompt="INV_ASN_LINES_TEMP.REVISION_NUM" width="40"/>
                                <a:column name="del_plan_number" align="left" prompt="INV8010.DELIVERY_PLAN_NUMBER" sortable="true" width="60"/>
                                <a:column name="need_del_quantity" align="left" prompt="要求送货数量" sortable="true" width="40"/>
                                <a:column name="need_arrive_date" align="left" prompt="要求送货日期" sortable="true" width="50"/>
                                <a:column name="send_address" align="left" prompt="送货地址" sortable="true" width="50"/>
                                <a:column name="need_by_date" align="center" prompt="INV_ASN_LINES_TEMP.NEED_BY_DATE" width="50"/>
                                <!--  <a:column name="request_arrival_date" align="center" prompt="INV_ASN_IMPORT_TEMP.REQUEST_ARRIVAL_DATE" renderer="Aurora.formatDate" width="80"/> -->
                                <!-- <a:column name="promised_date" align="center" prompt="INV_ASN_LINES_TEMP.PROMISED_DATE" width="50"/> -->
                                <!-- <a:column name="contacts_info" align="center" prompt="PUR_LINES_ALL.CONTACTS_INFO" width="80"/> -->
                                <a:column name="line_desc" align="left" prompt="PUR_LINES_ALL.PUR_LINE_DESC" width="100"/>
                                <!-- <a:column name="ean_code" align="left" prompt="PUR_LINES_ALL.EAN_CODE" sortable="true" width="50"/> -->
                                <!-- <a:column name="supply_item_code" align="left" prompt="INV_ASN_LINES_TEMP.VENDOR_ITEM_CODE" sortable="true" width="60"/> -->
                                <!-- <a:column name="supply_item_name" align="left" prompt="INV_ASN_LINES_TEMP.VENDOR_ITEM_NAME" sortable="true" width="60"/> -->
                                <!-- <a:column name="line_attachment" align="center" prompt="PROMPT.ATTACHMENT" renderer="inv5010_asnCreateGridRenderer" width="60"/> -->
                            </a:columns>
                            <a:editors>
                                <a:textField id="inv5010_asn_create_grid_tf"/>
                                <a:datePicker id="inv5010_asn_create_grid_dp"/>
                                <a:numberField id="inv5010_asn_ship_quantity_nf" allowDecimals="true" allowFormat="true" allowNegative="false" decimalPrecision="4"/>
                                <a:comboBox id="inv5010_asn_create_grid_tf_cbx"/>
                            </a:editors>
                        </a:grid>
                    </a:tab>
                    <a:tab prompt="PROMPT.LOGISTICS_INFO" width="130">
                        <a:vBox labelWidth="90" style="margin:5px;">
                            <a:hBox>
                                <a:lov name="logistics_company" bindTarget="inv5010_asn_create_header_ds" maxLength="200" prompt="INV_ASN_HEADERS_TEMP.LOGISTICS_COMPANY" width="230"/>
                            </a:hBox>
                            <a:hBox>
                                <a:textField name="dispatching_staff" bindTarget="inv5010_asn_create_header_ds" maxLength="200" prompt="INV_ASN_HEADERS_TEMP.DELIVERY_STAFF" width="230"/>
                            </a:hBox>
                            <a:hBox>
                                <a:textField name="contact_information" bindTarget="inv5010_asn_create_header_ds" maxLength="200" prompt="FND1000.CONTACT_INFO" width="230"/>
                            </a:hBox>
                            <a:hBox>
                                <a:textField name="logistics_cost" bindTarget="inv5010_asn_create_header_ds" maxLength="200" prompt="INV_ASN_HEADERS_TEMP.LOGISTICS_COST" width="230"/>
                            </a:hBox>
                            <a:hBox>
                                <a:textField name="express_number" bindTarget="inv5010_asn_create_header_ds" maxLength="200" prompt="INV_ASN_HEADERS_TEMP.EXPRESS_NUMBER" width="230"/>
                            </a:hBox>
                        </a:vBox>
                    </a:tab>
                </a:tabs>
            </a:tabPanel>
        </a:screenBody>
    </a:view>
    <a:view-config>
        <c:create-config targetId="inv5010_modifyItemspecnRecords">
            <p:switch test="/model/bg_item_po_14/record/@bg_config_item_value">
                <p:case value="Y">
                    <c:process-config>
                        <a:column name="item_specs" align="left" lock="true" prompt="MTL_SYSTEM_VENDOR_ITEMS.ITEM_SPECS" sortable="true" width="60"/>
                        <a:column name="item_model" align="left" lock="true" prompt="MTL_SYSTEM_VENDOR_ITEMS.ITEM_MODEL" sortable="true" width="60"/>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
    </a:view-config>
</a:screen>
