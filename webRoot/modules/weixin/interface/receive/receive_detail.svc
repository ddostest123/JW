<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-10-22 下午02:38:31  
    $Revision: 1.0  
    $Purpose: 微信企业号，采购接收行明细
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.【采购接收行明细】 查询接口
             *2.对传入参数进行校验。进行其他动作之前，必须先获取用户id，角色id，BG等信息。
             *3.指定每页页数和页码，定义全局默认值。
             *4.对传入的查询条件进行处理。
             *5.处理查询的数据集合，按指定格式返回。
             *6.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
            
                var parameter = $ctx.parameter;
            
                var result; //返回结果，json格式字符串
                var pagesize = 10; //页数，默认每页10条
                var pagenum = 1; //页码，默认第1页
                var check = true; //校验结果,true通过,false不通过
                var supply = 'supply'; //来之供应商
                var purchase = 'purchase'; //来之采购方
                
                //赋值user_id
                parameter.user_id = $session.user_id;
            
                /*
                 ***************
                 * 测试代码
                 */
                // //供应商
                // if (parameter.from == supply) {
                // parameter.user_id = 1285826;
                // //采购方
                // } else if (parameter.from == purchase) {
                // parameter.user_id = 1285624;
                // }
                /*
                 ***************
                 * 测试代码
                 */
            
                //判断from是否有值
                if (check) {
                    if (!parameter.from) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断from的值，默认的值只有purchase
                if (check) {
                    if (parameter.from != purchase) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 的值不是“purchase”，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断user_id
                if (check) {
                    if (!parameter.user_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'user_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断 po_location_id
                if (check) {
                    if (!parameter.po_location_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'po_location_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //通过所有校验
                if (check) {
            
                    //获取用户信息，用户id，角色id，BG
                    var user_info_bm = new ModelService('weixin.interface.public.user_info_with_userid');
                    user_info_bm.execute({
                        from_user_id: parameter.user_id
                    });
            
                    //接收订单信息
                    var receive_detail_bm = new ModelService('weixin.interface.receive.purchase.receive_detail');
                    //接收图片
                    var receive_picture_bm = new ModelService('weixin.interface.receive.purchase.receive_detail_picture');
                    //接收标准
                    var receive_standard_bm = new ModelService('weixin.interface.receive.purchase.receive_detail_standard');
            
                    //获取接收订单信息
                    var receive_detail_records = receive_detail_bm.queryAsMap({
                        po_location_id: parameter.po_location_id
                    }).getChildren();
                    if(receive_detail_records.length > 0){
	                    var receive_detail_record = receive_detail_records[0];
                    }
            
                    //整理接收图片信息
                    var receive_picture_records = receive_picture_bm.queryAsMap({
                        standard_id: parameter.standard_id
                    }).getChildren();
                    var receive_pictures = [];
                    for (var i = 0;i < receive_picture_records.length;i++) {
            
                        var receive_picture = {};
            
                        if (receive_picture_records[i].attachment_id) {
                            receive_picture.attachment_id = receive_picture_records[i].attachment_id;
                        } else {
                            receive_picture.attachment_id = '';
                        }
            
                        if (receive_picture_records[i].file_name) {
                            receive_picture.file_name = receive_picture_records[i].file_name;
                        } else {
                            receive_picture.file_name = '';
                        }
            
                        if (receive_picture_records[i].file_size) {
                            receive_picture.file_size = receive_picture_records[i].file_size;
                        } else {
                            receive_picture.file_size = '';
                        }
            
                        if (receive_picture_records[i].primary_flag) {
                            receive_picture.primary_flag = receive_picture_records[i].primary_flag;
                        } else {
                            receive_picture.primary_flag = '';
                        }
            
                        if (receive_picture_records[i].file_path) {
                            receive_picture.file_path = '/img' + receive_picture_records[i].file_path;
                        } else {
                            receive_picture.file_path = '';
                        }
            
                        receive_pictures.push(receive_picture);
                    }
            
                    //获取接收标准信息
                    if(parameter.standard_id){
	                    var receive_standard_records = receive_standard_bm.queryAsMap({
	                        standard_id: parameter.standard_id
	                    }).getChildren();
	                    if(receive_standard_records.length > 0){
		                    var receive_standard_record = receive_standard_records[0];
		                    if (!receive_standard_record.latest_standard) {
		                        receive_standard_record.latest_standard = '';
		                    }
	                    }
                    }
            
            		if(receive_detail_record){
            		    
	                    //处理头数据
	                    if (!receive_detail_record.display_po_number) {
	                        receive_detail_record.display_po_number = '';
	                    }
	            
	                    if (!receive_detail_record.line_num) {
	                        receive_detail_record.line_num = '';
	                    }
	            
	                    if (!receive_detail_record.item_code) {
	                        receive_detail_record.item_code = '';
	                    }
	            
	                    if (!receive_detail_record.item_desc) {
	                        receive_detail_record.item_desc = '';
	                    }
	            
	                    if (!receive_detail_record.unit_meas_lookup_code) {
	                        receive_detail_record.unit_meas_lookup_code = '';
	                    }
	            
	                    if (!receive_detail_record.max_receive_quantity) {
	                        receive_detail_record.max_receive_quantity = '';
	                    }
	            
	                    //拼接头行信息
	                    var record = {
	                        header: {
	                            display_po_number: receive_detail_record.display_po_number,
	                            line_num: receive_detail_record.line_num,
	                            item_code: receive_detail_record.item_code,
	                            item_desc: receive_detail_record.item_desc,
	                            unit_meas_lookup_code: receive_detail_record.unit_meas_lookup_code,
	                            max_receive_quantity: receive_detail_record.max_receive_quantity
	                        },
	                        lines: receive_pictures
	                    }
	                    
	                    if(parameter.standard_id){
	                        record.header.latest_standard = receive_standard_record.latest_standard;
	                    }else{
	                        record.header.latest_standard = '';
	                    }
	                    
            		}else{
            		    var record = {};
            		}
            
                    //返回字符串
                    result = {
                        result: {
                            record: record,
                            totalCount: 0
                        },
                        success: true
                    };
                }
            
            } catch (e) {
                $ctx.success = true;
                result = {
                    success: false,
                    error: {
                        message: e.message
                    }
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
