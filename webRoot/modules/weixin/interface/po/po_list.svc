<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-09-08 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 微信企业号，订单列表
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.订单列表查询接口
             *2.对传入参数进行校验。进行其他动作之前，必须先获取用户id，角色id，BG等信息。
             *3.指定每页页数和页码，定义全局默认值。
             *4.对传入的查询条件进行处理。
             *5.处理查询的数据集合，按指定格式返回。
             *6.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
            
                var parameter = $ctx.parameter;
            
                var result; //返回结果，json格式字符串
                var pagesize = 10; //页数，默认每页10条
                var pagenum = 1; //页码，默认第1页
                var check = true; //校验结果,true通过,false不通过
                var supply = 'supply'; //来之供应商
                var purchase = 'purchase'; //来之采购方
                
                //赋值user_id
                parameter.user_id = $session.user_id;
                
                /*
                ***************
                * 测试代码
                */
                // //供应商
                // if (parameter.from == supply) {
                    // parameter.user_id = 1285826;
        
                // //采购方
                // } else if (parameter.from == purchase) {
        			// parameter.user_id = 1285624;
                // }
                /*
                ***************
                * 测试代码
                */
                
                //判断from是否有值
                if (check) {
                    if (!parameter.from) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断from的值，默认的值只有supply和purchase
                if (check) {
                    if (parameter.from != supply && parameter.from != purchase) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 的值不是“supply”或者“purchase”，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断user_id是否为值
                if (check) {
                    if (!parameter.user_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'user_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //通过所有校验
                if (check) {
            
                    //获取用户信息，用户id，角色id，BG
                    var user_info_bm = new ModelService('weixin.interface.public.user_info_with_userid');
                    user_info_bm.execute({
                        from_user_id: parameter.user_id
                    });
            
                    //供应商
                    if (parameter.from == supply) {
                        //指定查询订单列表BM，指定分页信息
                        var po_list_bm = new ModelService('weixin.interface.po.supply.po_list');
            
                        //采购方
                    } else if (parameter.from == purchase) {
                        var po_list_bm = new ModelService('weixin.interface.po.purchase.po_list');
            
                    }
            
                    //设置查询分页条件
                    if (parameter.pagenum) {
                        pagenum = parameter.pagenum;
                    }
                    po_list_bm.fetchDescriptor = {
                        pagesize: pagesize,
                        pagenum: pagenum
                    };
            
                    //处理查询条件
                    var param = {};
                    
                    if(parameter.po_num){
                        param.po_num = parameter.po_num;
                    }

                    if(parameter.release_date_from){
                        param.release_date_from = parameter.release_date_from;
                    }

                    if(parameter.release_date_to){
                        param.release_date_to = parameter.release_date_to;
                    }

                    if(parameter.srm_status){
                        if(parameter.srm_status == 'RELEASED' || parameter.srm_status == 'CONFIRMED'){
	                        param.srm_status = parameter.srm_status;
                        }else if(parameter.srm_status == 'READY_TO_SEND'){
                            param.ready_to_shipped_flag = 'Y';
                        }else if(parameter.srm_status == 'SEND_OUT'){
                            param.already_shipped_flag = 'Y';
                        }
                    }
                    
                    if(parameter.vendor_id){
                        param.vendor_id = parameter.vendor_id;
                    }
                    
                    if(parameter.only_urgent == 'false'){
                        param.only_urgent = 'N';
                    }else if(parameter.only_urgent == 'true'){
                        param.only_urgent = 'Y';
                    }
                    
                    //处理订单列表数据
                    var po_list_records = po_list_bm.queryAsMap(param).getChildren();
                    var po_lists = [];
                    for (var i = 0;i < po_list_records.length;i++) {
            
                        var po_list = {};
            
                        if (po_list_records[i].pur_header_id) {
                            po_list.pur_header_id = po_list_records[i].pur_header_id;
                        } else {
                            po_list.pur_header_id = '';
                        }
            
                        if (po_list_records[i].po_num) {
                            po_list.po_num = po_list_records[i].po_num;
                        } else {
                            po_list.po_num = '';
                        }
            
                        if (po_list_records[i].release_num) {
                            po_list.release_num = po_list_records[i].release_num;
                        } else {
                            po_list.release_num = '';
                        }
            
                        if (po_list_records[i].revision_num) {
                            po_list.revision_num = po_list_records[i].revision_num;
                        } else {
                            po_list.revision_num = '';
                        }
            
                        if (po_list_records[i].company_name) {
                            po_list.company_name = po_list_records[i].company_name;
                        } else {
                            po_list.company_name = '';
                        }
            
                        if (po_list_records[i].vendor_name) {
                            po_list.vendor_name = po_list_records[i].vendor_name;
                        } else {
                            po_list.vendor_name = '';
                        }
            
                        if (po_list_records[i].srm_status_name) {
                            po_list.srm_status = po_list_records[i].srm_status_name;
                        } else {
                            po_list.srm_status = '';
                        }
            
                        if (po_list_records[i].release_date) {
                            po_list.release_date = po_list_records[i].release_date;
                        } else {
                            po_list.release_date = '';
                        }
            
                        if (po_list_records[i].release_time) {
                            po_list.release_time = po_list_records[i].release_time;
                        } else {
                            po_list.release_time = '';
                        }
            
                        if (po_list_records[i].release_day) {
                            po_list.release_day = po_list_records[i].release_day;
                        } else {
                            po_list.release_day = '';
                        }
            
                        if (po_list_records[i].urgent_flag) {
                            po_list.urgent_flag = po_list_records[i].urgent_flag;
                        } else {
                            po_list.urgent_flag = '';
                        }
            
                        if (po_list_records[i].attachment_flag) {
                            po_list.attachment_flag = po_list_records[i].attachment_flag;
                        } else {
                            po_list.attachment_flag = '';
                        }

                        po_list.is_checked = 'false';
            
                        po_lists.push(po_list);
                    }
            
                    //返回字符串
                    result = {
                        result: {
                            record: po_lists,
                            totalCount: 0
                        },
                        success: true
                    };
                }
            
            } catch (e) {
                $ctx.success = true;
                result = {
                    success: false,
                    error: {
                        message: e.message
                    }
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
