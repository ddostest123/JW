<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-09-08 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 微信企业号，送货单明细
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.送货单明细查询接口
             *2.对传入参数进行校验。进行其他动作之前，必须先获取用户id，角色id，BG等信息。
             *3.指定每页页数和页码，定义全局默认值。
             *4.对传入的查询条件进行处理。
             *5.处理查询的数据集合，按指定格式返回。
             *6.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
            
                var parameter = $ctx.parameter;
            
                var result; //返回结果，json格式字符串
                var pagesize = 10; //页数，默认每页10条
                var pagenum = 1; //页码，默认第1页
                var check = true; //校验结果,true通过,false不通过
                var supply = 'supply'; //来之供应商
                var purchase = 'purchase'; //来之采购方
                
                //赋值user_id
                parameter.user_id = $session.user_id;
                
                /*
                ***************
                * 测试代码
                */
                // //供应商
                // if (parameter.from == supply) {
                    // parameter.user_id = 1285826;
        
                // //采购方
                // } else if (parameter.from == purchase) {
        			// parameter.user_id = 1285624;
                // }
                /*
                ***************
                * 测试代码
                */
                
                //判断from是否有值
                if (check) {
                    if (!parameter.from) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断from的值，默认的值只有supply和purchase
                if (check) {
                    if (parameter.from != supply && parameter.from != purchase) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 的值不是“supply”或者“purchase”，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断user_id
                if (check) {
                    if (!parameter.user_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'user_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断 asn_header_id
                if (check) {
                    if (!parameter.asn_header_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'asn_header_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //通过所有校验
                if (check) {
            
                    //获取用户信息，用户id，角色id，BG
                    var user_info_bm = new ModelService('weixin.interface.public.user_info_with_userid');
                    user_info_bm.execute({
                        from_user_id: parameter.user_id
                    });
            
                    //供应商
                    if (parameter.from == supply) {
                        //获取送货单头信息
                        var asn_header_bm = new ModelService('weixin.interface.asn.supply.asn_detail_header');
                        //获取送货单行明细
                        var asn_lines_bm = new ModelService('weixin.interface.asn.supply.asn_detail_lines');
            
                        //采购方
                    } else if (parameter.from == purchase) {
                        //获取送货单头信息
                        var asn_header_bm = new ModelService('weixin.interface.asn.purchase.asn_detail_header');
                        //获取送货单行明细
                        var asn_lines_bm = new ModelService('weixin.interface.asn.purchase.asn_detail_lines');
                    }
            
                    //获取头信息
                    var asn_header_records = asn_header_bm.queryAsMap({
                        asn_header_id: parameter.asn_header_id
                    }).getChildren();
                    if(asn_header_records.length > 0){
	                    var asn_header_record = asn_header_records[0];
                    }
            
                    //设置查询分页条件
                    if (parameter.pagenum) {
                        pagenum = parameter.pagenum;
                    }
                    asn_lines_bm.fetchDescriptor = {
                        pagesize: pagesize,
                        pagenum: pagenum
                    };
            
                    //整理送货单行数据
                    var asn_lines_records = asn_lines_bm.queryAsMap({
                        asn_header_id: parameter.asn_header_id
                    }).getChildren();
                    var asn_liness = [];
                    for (var i = 0;i < asn_lines_records.length;i++) {
            
                        var asn_lines = {};
            
                        if (asn_lines_records[i].line_num) {
                            asn_lines.line_num = asn_lines_records[i].line_num;
                        } else {
                            asn_lines.line_num = '';
                        }
            
                        if (asn_lines_records[i].item_code) {
                            asn_lines.item_code = asn_lines_records[i].item_code;
                        } else {
                            asn_lines.item_code = '';
                        }
            
                        if (asn_lines_records[i].item_name) {
                            asn_lines.item_name = asn_lines_records[i].item_name;
                        } else {
                            asn_lines.item_name = '';
                        }
            
                        if (asn_lines_records[i].po_num) {
                            asn_lines.po_num = asn_lines_records[i].po_num;
                        } else {
                            asn_lines.po_num = '';
                        }
            
                        if (asn_lines_records[i].ship_quantity) {
                            asn_lines.ship_quantity = asn_lines_records[i].ship_quantity;
                        } else {
                            asn_lines.ship_quantity = '0';
                        }
            
                        if (asn_lines_records[i].uom_desc) {
                            asn_lines.uom_desc = asn_lines_records[i].uom_desc;
                        } else {
                            asn_lines.uom_desc = '';
                        }
                        
                        if (asn_lines_records[i].receive_quantity) {
                            asn_lines.receive_quantity = asn_lines_records[i].receive_quantity;
                        } else {
                            asn_lines.receive_quantity = '0';
                        }
            
                        if (asn_lines_records[i].on_the_way_quantity) {
                            asn_lines.on_the_way_quantity = asn_lines_records[i].on_the_way_quantity;
                        } else {
                            asn_lines.on_the_way_quantity = '0';
                        }
            
                        asn_liness.push(asn_lines);
                    }
            
            		if(asn_header_record){
            		    
	                    //处理头数据
	                    if (!asn_header_record.ship_to_organization_name) {
	                        asn_header_record.ship_to_organization_name = '';
	                    }
	            
	                    if (!asn_header_record.location_name) {
	                        asn_header_record.location_name = '';
	                    }
	            
	                    if (!asn_header_record.expected_date) {
	                        asn_header_record.expected_date = '';
	                    }
	            
	                    if (!asn_header_record.comments) {
	                        asn_header_record.comments = '';
	                    }
	            
	                    //拼接头行信息
	                    var record = {
	                        header: {
	                            ship_to_organization_name: asn_header_record.ship_to_organization_name,
	                            location_name: asn_header_record.location_name,
	                            expected_date: asn_header_record.expected_date,
	                            comments: asn_header_record.comments
	                        },
	                        lines: asn_liness
	                    }
	                    
            		}else{
            		    var record = {};
            		}
            
                    //返回字符串
                    result = {
                        result: {
                            record: record,
                            totalCount: 0
                        },
                        success: true
                    };
                }
            
            } catch (e) {
                $ctx.success = true;
                result = {
                    success: false,
                    error: {
                        message: e.message
                    }
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
