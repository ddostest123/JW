<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-09-08 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 微信企业号，历史消息列表
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.历史消息列表查询接口
             *2.对传入参数进行校验。进行其他动作之前，必须先获取用户id，角色id，BG等信息。
             *3.指定每页页数和页码，定义全局默认值。
             *4.对传入的查询条件进行处理。
             *5.处理查询的数据集合，按指定格式返回。
             *6.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
            
                var parameter = $ctx.parameter;
            
                var result; //返回结果，json格式字符串
                var pagesize = 10; //页数，默认每页10条
                var pagenum = 1; //页码，默认第1页
                var check = true; //校验结果,true通过,false不通过
                var supply = 'supply'; //来之供应商
                var purchase = 'purchase'; //来之采购方
            
                //赋值user_id
                parameter.user_id = $session.user_id;
            
                /*
                 ***************
                 * 测试代码
                 */
                // //供应商
                // if (parameter.from == supply) {
                    // parameter.user_id = 1285826;
                    
                    // //采购方
                // } else if (parameter.from == purchase) {
                    // parameter.user_id = 1285624;
                // }
                /*
                 ***************
                 * 测试代码
                 */
            
                //判断from是否有值
                if (check) {
                    if (!parameter.from) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断from的值，默认的值只有supply和purchase
                if (check) {
                    if (parameter.from != supply && parameter.from != purchase) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 的值不是“supply”或者“purchase”，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断user_id是否为值
                if (check) {
                    if (!parameter.user_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'user_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //通过所有校验
                if (check) {
            
                    //获取用户信息，用户id，角色id，BG
                    var user_info_bm = new ModelService('weixin.interface.public.user_info_with_userid');
                    user_info_bm.execute({
                        from_user_id: parameter.user_id
                    });
            
                    var msg_list_bm = new ModelService('weixin.interface.message.history_message_list');
            
                    //设置查询分页条件
                    if (parameter.pagenum) {
                        pagenum = parameter.pagenum;
                    }
                    msg_list_bm.fetchDescriptor = {
                        pagesize: pagesize,
                        pagenum: pagenum
                    };
            
                    //设置查询条件
                    var param = {
                        // po_num: parameter.po_num,
                        // release_date_from: parameter.release_date_from,
                        // release_date_to: parameter.release_date_to,
                        // srm_status: parameter.srm_status,
                        // vendor_id: parameter.vendor_id,
                        // only_urgent: parameter.only_urgent
                    };
            
                    //处理订单列表数据
                    var msg_list_records = msg_list_bm.queryAsMap(param).getChildren();
                    var msg_lists = [];
                    for (var i = 0;i < msg_list_records.length;i++) {
            
                        var msg_list = {};
            
                        if (msg_list_records[i].message_type) {
                            msg_list.message_type = msg_list_records[i].message_type;
                        } else {
                            msg_list.message_type = '';
                        }
                        if (msg_list_records[i].message_id) {
                            msg_list.message_id = msg_list_records[i].message_id;
                        } else {
                            msg_list.message_id = '';
                        }
                        if (msg_list_records[i].title) {
                            msg_list.title = msg_list_records[i].title;
                        } else {
                            msg_list.title = '';
                        }
            
                        if (msg_list_records[i].contents) {
                            msg_list.contents = msg_list_records[i].contents;
                        } else {
                            msg_list.contents = '';
                        }
            
                        if (msg_list_records[i].message_date) {
                            msg_list.message_date = msg_list_records[i].message_date;
                        } else {
                            msg_list.message_date = '';
                        }
            
                        if (msg_list_records[i].message_time) {
                            msg_list.message_time = msg_list_records[i].message_time;
                        } else {
                            msg_list.message_time = '';
                        }
            
                        if (msg_list_records[i].message_day) {
                            msg_list.message_day = msg_list_records[i].message_day;
                        } else {
                            msg_list.message_day = '';
                        }
            
                        if (msg_list_records[i].attachment_flag) {
                            msg_list.attachment_flag = msg_list_records[i].attachment_flag;
                        } else {
                            msg_list.attachment_flag = '';
                        }
            
                        msg_lists.push(msg_list);
                    }
            
                    //返回字符串
                    result = {
                        result: {
                            record: msg_lists,
                            totalCount: 0
                        },
                        success: true
                    };
                }
            
            } catch (e) {
                $ctx.success = true;
                result = {
                    success: false,
                    error: {
                        message: e.message
                    }
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
