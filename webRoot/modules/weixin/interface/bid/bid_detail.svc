<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-09-08 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 微信企业号，招标书明细
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <s:server-script><![CDATA[
            /**
             *read me
             *1.招标书明细查询接口
             *2.对传入参数进行校验。进行其他动作之前，必须先获取用户id，角色id，BG等信息。
             *3.指定每页页数和页码，定义全局默认值。
             *4.对传入的查询条件进行处理。
             *5.处理查询的数据集合，按指定格式返回。
             *6.调试函数:println(Object);会将Object打印在控制台（如应用服务器tomcat的控制台）。例如：println($session.toXML());会将session对象以xml格式打印出来。
             */
            try {
            
                var parameter = $ctx.parameter;
            
                var result; //返回结果，json格式字符串
                var pagesize = 10; //页数，默认每页10条
                var pagenum = 1; //页码，默认第1页
                var check = true; //校验结果,true通过,false不通过
                var supply = 'supply'; //来之供应商
                var purchase = 'purchase'; //来之采购方
            
                //赋值user_id
                parameter.user_id = $session.user_id;
            
                /*
                 ***************
                 * 测试代码
                 */
                // //供应商
                // if (parameter.from == supply) {
                // parameter.user_id = 1285826;
                // //采购方
                // } else if (parameter.from == purchase) {
                // parameter.user_id = 1285624;
                // }
                /*
                 ***************
                 * 测试代码
                 */
            
                //判断from是否有值
                if (check) {
                    if (!parameter.from) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断from的值，默认的值只有supply和purchase
                if (check) {
                    if (parameter.from != supply) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'from 的值不是“supply”，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断user_id
                if (check) {
                    if (!parameter.user_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'user_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断 entrustment_header_id
                if (check) {
                    if (!parameter.entrustment_header_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'entrustment_header_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //判断 bidder_company_id
                if (check) {
                    if (!parameter.bidder_company_id) {
                        check = false;
                        result = {
                            success: false,
                            error: {
                                message: 'bidder_company_id 没有获取到值，请联系管理员！'
                            }
                        };
                    }
                }
            
                //通过所有校验
                if (check) {
            
                    //获取用户信息，用户id，角色id，BG
                    var user_info_bm = new ModelService('weixin.interface.public.user_info_with_userid');
                    user_info_bm.execute({
                        from_user_id: parameter.user_id
                    });
            
                    //供应商
                    if (parameter.from == supply) {
                        //获取招标书头信息
                        var bid_header_bm = new ModelService('weixin.interface.bid.supply.bid_detail_header');
                        //获取招标申请行明细,指定查询招标书列表BM，指定分页信息
                        var entrustment_lines_bm = new ModelService('weixin.interface.bid.supply.bid_detail_entrustment_lines');
                        //获取投标书行明细,指定查询招标书列表BM，指定分页信息
                        var docm_lines_bm = new ModelService('weixin.interface.bid.supply.bid_detail_docm_lines');
                        //指定查询供应商列表BM，指定分页信息
                        var tax_list_bm = new ModelService('weixin.interface.public.tax_type_rate_list');
                    }
            
                    //获取头信息
                    var bid_header_records = bid_header_bm.queryAsMap({
                        entrustment_header_id: parameter.entrustment_header_id,
                        bidder_company_id: parameter.bidder_company_id
                    }).getChildren();
                    if (bid_header_records.length > 0) {
                        var bid_header_record = bid_header_records[0];
                    }
            
                    if (bid_header_record) {
            
                        //处理税率列表数据列表
                        var tax_list_records = tax_list_bm.queryAsMap({
                            business_group: bid_header_record.owner_business_group
                        }).getChildren();
                        var tax_lists = [];
                        for (var i = 0;i < tax_list_records.length;i++) {
            
                            var tax_list = {};
            
                            if (tax_list_records[i].tax_type_id) {
                                tax_list.tax_type_id = tax_list_records[i].tax_type_id;
                            } else {
                                tax_list.tax_type_id = '';
                            }
            
                            if (tax_list_records[i].tax_type_rate) {
                                tax_list.tax_type_rate = tax_list_records[i].tax_type_rate;
                            } else {
                                tax_list.tax_type_rate = '';
                            }
            
                            tax_lists.push(tax_list);
                        }
            
                        //设置查询分页条件
                        if (parameter.pagenum) {
                            pagenum = parameter.pagenum;
                        }
            
                        //判断使用招标申请行明细，还是投标书行明细
                        if (bid_header_record.bid_header_id) {
                            docm_lines_bm.fetchDescriptor = {
                                pagesize: pagesize,
                                pagenum: pagenum
                            };
                            var bid_lines_records = docm_lines_bm.queryAsMap({
                                bid_header_id: bid_header_record.bid_header_id
                            }).getChildren();
            
            
                        } else {
                            entrustment_lines_bm.fetchDescriptor = {
                                pagesize: pagesize,
                                pagenum: pagenum
                            };
                            var bid_lines_records = entrustment_lines_bm.queryAsMap({
                                entrustment_header_id: parameter.entrustment_header_id
                            }).getChildren();
                        }
            
                        //整理招标书行数据
                        var bid_liness = [];
                        for (var i = 0;i < bid_lines_records.length;i++) {
            
                            var bid_lines = {};
            
                            if (bid_lines_records[i].bid_line_id) {
                                bid_lines.bid_line_id = bid_lines_records[i].bid_line_id;
                            } else {
                                bid_lines.bid_line_id = '';
                            }
            
                            if (bid_lines_records[i].bid_header_id) {
                                bid_lines.bid_header_id = bid_lines_records[i].bid_header_id;
                            } else {
                                bid_lines.bid_header_id = '';
                            }
            
                            if (bid_lines_records[i].entrustment_item_id) {
                                bid_lines.entrustment_item_id = bid_lines_records[i].entrustment_item_id;
                            } else {
                                bid_lines.entrustment_item_id = '';
                            }
            
                            if (bid_lines_records[i].line_num) {
                                bid_lines.line_num = bid_lines_records[i].line_num;
                            } else {
                                bid_lines.line_num = '';
                            }
            
                            if (bid_lines_records[i].item_desc) {
                                bid_lines.item_desc = bid_lines_records[i].item_desc;
                            } else {
                                bid_lines.item_desc = '';
                            }
            
                            if (bid_lines_records[i].quantity) {
                                bid_lines.quantity = bid_lines_records[i].quantity;
                            } else {
                                bid_lines.quantity = '';
                            }
            
                            if (bid_lines_records[i].bid_quantity) {
                                bid_lines.bid_quantity = bid_lines_records[i].bid_quantity;
                            } else {
                                bid_lines.bid_quantity = '';
                            }
            
                            if (bid_lines_records[i].uom_code) {
                                bid_lines.uom_code = bid_lines_records[i].uom_code;
                            } else {
                                bid_lines.uom_code = '';
                            }
            
                            if (bid_lines_records[i].unit_price) {
                                bid_lines.unit_price = bid_lines_records[i].unit_price;
                            } else {
                                bid_lines.unit_price = '';
                            }
            
                            if (bid_lines_records[i].tax_type_id) {
                                bid_lines.tax_type_id = bid_lines_records[i].tax_type_id;
                            } else {
                                bid_lines.tax_type_id = '';
                            }
            
                            if (bid_lines_records[i].tax_type_code) {
                                bid_lines.tax_type_code = bid_lines_records[i].tax_type_code;
                            } else {
                                bid_lines.tax_type_code = '';
                            }
            
                            if (bid_lines_records[i].tax_type_rate) {
                                bid_lines.tax_type_rate = bid_lines_records[i].tax_type_rate;
                            } else {
                                bid_lines.tax_type_rate = '';
                            }
            
                            if (bid_lines_records[i].tax_included_flag) {
                                bid_lines.tax_included_flag = bid_lines_records[i].tax_included_flag;
                            } else {
                                bid_lines.tax_included_flag = '';
                            }
            
                            bid_liness.push(bid_lines);
                        }
                    }
            
                    if (bid_header_record) {
            
                        //处理头数据
                        if (!bid_header_record.bidding_method) {
                            bid_header_record.bidding_method = '';
                        }
            
                        if (!bid_header_record.bidding_method_name) {
                            bid_header_record.bidding_method_name = '';
                        }
            
                        if (!bid_header_record.round) {
                            bid_header_record.round = '';
                        }
            
                        if (!bid_header_record.version) {
                            bid_header_record.version = '';
                        }
            
                        if (!bid_header_record.participation) {
                            bid_header_record.participation = '';
                        }
            
                        if (!bid_header_record.approve_participation) {
                            bid_header_record.approve_participation = '';
                        }
            
                        if (!bid_header_record.bid_header_id) {
                            bid_header_record.bid_header_id = '';
                        }
            
                        //处理税率
                        if (tax_list_records.length == 0) {
                            bid_header_record.tax_lists = '';
                        } else {
                            bid_header_record.tax_lists = tax_lists;
                        }
            
                        if (!parameter.bidder_company_id) {
                            parameter.bidder_company_id = '';
                        }
            
                        //拼接头行信息
                        var record = {
                            header: {
                                bidding_method: bid_header_record.bidding_method,
                                bidding_method_name: bid_header_record.bidding_method_name,
                                round: bid_header_record.round,
                                version: bid_header_record.version,
                                participation: bid_header_record.participation,
                                approve_participation: bid_header_record.approve_participation,
                                bid_header_id: bid_header_record.bid_header_id,
                                tax_lists: bid_header_record.tax_lists,
                                bidder_company_id: parameter.bidder_company_id
                            },
                            lines: bid_liness
                        }
            
                    } else {
                        var record = {};
                    }
            
                    //返回字符串
                    result = {
                        result: {
                            record: record,
                            totalCount: 0
                        },
                        success: true
                    };
                }
            
            } catch (e) {
                $ctx.success = true;
                result = {
                    success: false,
                    error: {
                        message: e.message
                    }
                };
            } finally {
                //执行finally代码，将result对象回写
                $ctx.parameter.json = JSON.stringify(result);
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter/@json"/>
</a:service>
