<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: LIBIN  
    $Date: 2014-10-27 上午11:25:49  
    $Revision: 1.0  
    $Purpose: 
-->
<a:service xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query model="pur.PUR7110.pur_rfx_ln_items" rootPath="pur_item_line"/>
        <!-- 获取所有选用供应商 -->
        <a:model-query model="pur.PUR7110.pur_rfx_get_suggest_vendor_all" rootPath="pur_ln_vendor_all"/>
        <a:model-query model="pur.PUR7110.pur_rfx_get_suggest_item_map_vendor" rootPath="pur_ln_item_map_vendor"/>
        <p:echo/>
        <s:server-script import="fsl_excel_export_lib.js"><![CDATA[
            var logger = $logger('server-script');
            
            function log(msg) {
                logger.info(msg);
            }
            
            function creatTitle(sheet) {
                var cur_list = {
                    0: ['佛山照明记录', '0', '1', 'head'],
                    11: ['FSL/QD7.4-12', '0', '2', 'head_1']
                };
                create_from_list(sheet, 0, cur_list)
                create_from_list(sheet, 1, {
                    0: ['报   价   审   批   表', '0', '13', 'head_2']
                })
            }
            
            function createBodyTitle(sheet, data) {
                var cur_list = {
                    0: ['报价方:' + data[0].vendor_desc, '0', '3', 'body_1'],
                    4: ['报价日期:' + data[0].feedback_time, '0', '2', 'body_1'],
                    7: ['采购组:', '0', '2', 'body_1'],
                    10: ['归档编号:', '0', '3', 'body_1']
                };
                create_from_list(sheet, 3, cur_list);
                var cur_list = {
                    0: ['物料号', '1', '0', 'body'],
                    1: ['物料名称规格', '1', '0', 'body'],
                    2: ['价格', '0', '2', 'body'],
                    5: ['对比比例', '0', '1', 'body'],
                    7: ['需求部门', '1', '0', 'body'],
                    8: ['预计', '0', '3', 'body'],
                    12: ['维护工厂', '1', '0', 'body'],
                    13: ['备注', '1', '0', 'body']
                };
                create_from_list(sheet, 4, cur_list);
                var cur_list = {
                    2: ['系统原最低价', '0', '0', 'body'],
                    3: ['报价方系统原报价', '0', '0', 'body'],
                    4: ['现报价', '0', '0', 'body'],
                    5: ['对比系统原最低价', '0', '0', 'body'],
                    6: ['对比自身原报价', '0', '0', 'body'],
                    8: ['年需求（个）', '0', '0', 'body'],
                    9: ['年采购金额（元）', '0', '0', 'body'],
                    10: ['对系统最低价年差额(元)', '0', '0', 'body'],
                    11: ['对比自身原报价年差额（元）', '0', '0', 'body'],
                };
                create_from_list(sheet, 5, cur_list, 1200);
            }
            
            function createBodyTitle_1(sheet, data, vendor_list, length) {
                var cur_list = {
                    0: ['报价日期:' + data[0].feedback_time, '0', '3', 'body_1'],
                    4: ['采购组:', '0', '4', 'body_1'],
                    9: ['归档编号:', '0', '3', 'body_1']
                };
                create_from_list(sheet, 3, cur_list);
                var vendor_length = length;
                log(vendor_list);
                var li = [vendor_length * 5 + 3, vendor_length * 5 + 4, vendor_length * 5 + 7, vendor_length * 5 + 8];
                var cur_list = {
                    0: ['物料号', '2', '0', 'body'],
                    1: ['物料名称规格', '2', '0', 'body'],
                    2: ['价格（元/个）', '0', String(vendor_length * 5), 'body']
                };
                cur_list[li[0]] = ['使用部门', '2', '0', 'body'];
                cur_list[li[1]] = ['预计', '0', '2', 'body'];
                cur_list[li[2]] = ['维护工厂', '2', '0', 'body'];
                cur_list[li[3]] = ['备注', '2', '0', 'body'];
            
                create_from_list(sheet, 4, cur_list);
            
                var cur_list = {
                    2: ['系统原最低价', '1', '0', 'body']
                };
                cur_list[vendor_length * 5 + 4] = ['年需求（个）', '1', '0', 'body'];
                cur_list[vendor_length * 5 + 5] = ['年采购金额（元）', '1', '0', 'body'];
                cur_list[vendor_length * 5 + 6] = ['年差额（元）', '1', '0', 'body'];
                for (var i = 0;i < vendor_list.length;i++) {
                    cur_list[i * 5 + 3] = [vendor_list[i].vendor_desc, '0', '4', 'body'];
                }
                create_from_list(sheet, 5, cur_list);
                var cur_list = {};
                for (var i = 0;i < vendor_list.length;i++) {
                    cur_list[i * 5 + 3] = ['系统原报价', '0', '0', 'body'];
                    cur_list[i * 5 + 4] = ['现报价', '0', '0', 'body'];
                    cur_list[i * 5 + 5] = ['对比系统原价', '0', '0', 'body'];
                    cur_list[i * 5 + 6] = ['对比系统最低价', '0', '0', 'body'];
                    cur_list[i * 5 + 7] = ['对比现报最低价', '0', '0', 'body'];
                }
                create_from_list(sheet, 6, cur_list);
            }
            
            
            var length = 6;
            
            function createBodyData(sheet, data) {
                for (var i = 0;i < data.length;i++) {
                    var cur_list = {
                        0: [data[i].item_code],
                        1: [data[i].item_desc]
                    };
                    length = 6 + i;
                    create_from_list(sheet, length, cur_list);
                }
                var cur_list = {
                    0: ['合计', '0', '1', 'body']
                };
                length = length + 1;
                create_from_list(sheet, length, cur_list);
            }
            
            function createBodyData_1(sheet,data,item_map){
                length = 7;
                for (var i = 0;i < data.length;i++) {
                    var cur_list = {
                        0: [data[i].item_code],
                        1: [data[i].item_desc]
                    };
                    length = 7 + i;
                    create_from_list(sheet, length, cur_list);
                }
                var cur_list = {
                    0: ['合计', '0', '1', 'body']
                };
                length = length + 1;
                create_from_list(sheet, length, cur_list);
            }
            
            
            function createComments(sheet) {
                var cur_list = {
                    0: ['申请说明：1、价格含运费、  税。 \n2、', '0', '13']
                };
                length = length + 1;
                create_from_list(sheet, length, cur_list);
                var cur_list = {
                    0: ['经办人：', '0', '1', 'body_1'],
                    2: ['采购组长意见：', '0', '3', 'body_1'],
                    6: ['采购副总审核：', '0', '7', 'body_1']
                };
                length = length + 1;
                create_from_list(sheet, length, cur_list);
                var cur_list = {
                    0: ['采购经理审核：', '0', '5', 'body_1'],
                    6: ['总经理审批：', '0', '7', 'body_1']
                };
                length = length + 1;
                create_from_list(sheet, length, cur_list);
            }
            
            function createExcel() {
                var rfx_item_all = $ctx.model.getChild("pur_item_line").getChildren();
                var pur_ln_vendor_all = $ctx.model.getChild("pur_ln_vendor_all").getChildren();
                createFilePath();
                //创建excel文件，并填充内容
                var wb = new HSSFWorkbook();
                var sheet1 = wb.createSheet('报价审批表');
            
                for (var i = 0;i < 14;i++) {
                    sheet1.setColumnWidth(i, 1024 * 3);
                }
                style_map['head'] = ceateStyle(wb, '宋体', 11, false, HSSFCellStyle.ALIGN_LEFT, false, HSSFColor.BLACK.index, true);
                style_map['head_1'] = ceateStyle(wb, '宋体', 11, false, HSSFCellStyle.ALIGN_RIGHT, false, HSSFColor.BLACK.index, true);
                style_map['head_2'] = ceateStyle(wb, '黑体', 20, true, HSSFCellStyle.ALIGN_CENTER, false, HSSFColor.BLACK.index);
                style_map['body'] = ceateStyle(wb, '宋体', 11, true, HSSFCellStyle.ALIGN_CENTER, false, HSSFColor.BLACK.index);
                style_map['body_1'] = ceateStyle(wb, '宋体', 11, true, HSSFCellStyle.ALIGN_LEFT, false, HSSFColor.BLACK.index);
                // sheet1.setDisplayGridlines(false);
                //对应单供应商和多供应商的打印
                if (pur_ln_vendor_all.length > 1) {
                    var pur_ln_item_map_vendor = $ctx.model.getChild("pur_ln_item_map_vendor").getChildren();
                    var item_map_vendor = {};
                    for (var i = 0;i < rfx_item_all.length;i++) {
                        for (var j = 0;j < pur_ln_item_map_vendor.length;j++) {
                            if (pur_ln_item_map_vendor[i].item_desc == pur_ln_item_map_vendor[j].item_desc) {
                                if (!item_map_vendor[pur_ln_item_map_vendor[i].item_desc]) {
                                    item_map_vendor[pur_ln_item_map_vendor[i].item_desc] = {};
                                }
                                if (!item_map_vendor[pur_ln_item_map_vendor[i].item_desc][pur_ln_item_map_vendor[j].coop_company_id]) {
                                    item_map_vendor[pur_ln_item_map_vendor[i].item_desc][pur_ln_item_map_vendor[j].coop_company_id] = {};
                                }
                                //放入数据，用映射方式存各个动态字段
                                //item_map_vendor:{物料1:{供应商1:{映射字段1:{},...},供应商2:{}...},物料2:...}
                                item_map_vendor[pur_ln_item_map_vendor[i].item_desc][pur_ln_item_map_vendor[j].coop_company_id]['price'] = '0';
                            }
                        }
                    }
                    creatTitle(sheet1);
                    createBodyTitle_1(sheet1, rfx_item_all, pur_ln_vendor_all, pur_ln_vendor_all.length);
            		createBodyData_1(sheet1,rfx_item_all,item_map_vendor);
                    createComments(sheet1);
                } else {
                    creatTitle(sheet1);
                    createBodyTitle(sheet1, rfx_item_all);
                    //数据映射
                    createBodyData(sheet1, rfx_item_all);
                    createComments(sheet1);
                }
            
                var fileOut = new FileOutputStream(parameter.fileRoute);
                println(response);
                wb.write(fileOut);
                //回写返回请求
                setResponseHeader();
                transferOutputStream(response.getOutputStream(), new FileInputStream(parameter.fileRoute));
            }
            
            //excel主函数
            createExcel();
        ]]></s:server-script>
    </a:init-procedure>
</a:service>
