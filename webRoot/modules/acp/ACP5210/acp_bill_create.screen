<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao $ 
    $Date: 2013-1-30 下午03:14:06 $  
    $Revision: 1.0 $ 
    $Purpose: 非寄销开票单创建，入口页面 $
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="business_group = ${/session/@business_group} AND acp_type=&apos;ACP_NON_CSGN&apos;" fetchAll="true" model="acp.PUBLIC.fnd_config_cnt_acp_merge_rule" rootPath="acp5210_merge_rule_data"/>
        <a:model-query defaultWhereClause="cbi.config_classify_code = &apos;INVOICE&apos; AND cbi.config_item_code = &apos;INVOICE_08&apos;" fetchAll="true" model="public.get_fnd_config_center_bg_item_value" rootPath="bg_item_invoice_08"/>
        <a:model-query fetchAll="true" model="acp.PUBLIC.acp_get_default_past_date" rootPath="default_date"/>
    </a:init-procedure>
    <a:view>
        <a:link id="acp5210_bill_detail_link" url="${/request/@context_path}/modules/acp/ACP5210/acp_bill_detail.screen"/>
        <a:link id="acp5210_pur_detail_link" url="${/request/@context_path}/modules/acp/ACP5210/acp_bill_pur_detail.screen"/>
        <a:link id="acp5210_bill_base_to_trx_clear_update_link" model="acp.ACP5210.acp_bill_details" modelaction="batch_update"/>
        <a:link id="acp5210_bill_create_validation_link" model="acp.PUBLIC.acp_bill_create_validation" modelaction="batch_update"/>
        <a:link id="acp5210_bill_auto_handle_subject_document_link" model="acp.ACP5210.acp_bill_auto_handle_subject_document" modelaction="batch_update"/>
        <!-- <a:link id="acp5210_bill_auto_create_link" model="acp.ACP5210.acp_bill_details" modelaction="execute"/> -->
        <script><![CDATA[
            var merge_num_flag = 0; //校验并单数量是否全正数或负数
            //加法
            function acp5210_accAdd(arg1, arg2) {
                var r1, r2, m, c;
                try {
                    r1 = arg1.toString().split(".")[1].length;
                } catch (e) {
                    r1 = 0;
                }
                try {
                    r2 = arg2.toString().split(".")[1].length;
                } catch (e) {
                    r2 = 0;
                }
                c = Math.abs(r1 - r2);
                m = Math.pow(10, Math.max(r1, r2));
                if (c > 0) {
                    var cm = Math.pow(10, c);
                    if (r1 > r2) {
                        arg1 = Number(arg1.toString().replace(".", ""));
                        arg2 = Number(arg2.toString().replace(".", "")) * cm;
                    } else {
                        arg1 = Number(arg1.toString().replace(".", "")) * cm;
                        arg2 = Number(arg2.toString().replace(".", ""));
                    }
                } else {
                    arg1 = Number(arg1.toString().replace(".", ""));
                    arg2 = Number(arg2.toString().replace(".", ""));
                }
                return (arg1 + arg2) / m;
            
            }
            
            //乘法
            function acp5210_accMul(arg1, arg2) {
                var m = 0,
                    s1 = arg1.toString(),
                    s2 = arg2.toString();
                try {
                    m += s1.split(".")[1].length;
                } catch (e) {}
                try {
                    m += s2.split(".")[1].length;
                } catch (e) {}
                return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);
            }
            
            //取精度
            
            function acp5210_js_round(para1, para2) {
                return Math.round(acp5210_accMul(para1, Math.pow(10, para2))) / Math.pow(10, para2);
            }
            
            //日期比较
            
            function acp5210_compareDate(start, end) {
                if (start > end) {
                    return false;
                }
                return true;
            }
            
            //日期校验
            
            function acp5210_trx_dateValidator(record, name, value) {
                if (name == 'trx_date_from' || name == 'trx_date_to') {
                    var start = record.get('trx_date_from');
                    var end = record.get('trx_date_to');
            
                    if ( !! end) {
                        if (!acp5210_compareDate(start, end)) {
                            return '${l:START_GREATER_THAN_END}';
                        }
                    }
                    return true;
                }
            }
            
            function acp5210_bill_query() {
                $('acp5210_result_ds').query();
            }
            
            //校验开票单头是否已存在
            
            function acp5210_checkHeaderExists(record) {
                var header_record = $('acp5210_bill_headers_ds').getCurrentRecord();
                //并单规则
                var merge_rule_records = $('acp5210_merge_rule_ds').getAll();
                if (header_record.get('company_id') != record.get('company_id') || header_record.get('vendor_id') != record.get('vendor_id') || header_record.get('vendor_site_id') != record.get('vendor_site_id') || header_record.get('currency_code') != record.get('currency_code')) {
                    Aurora.showMessage('${l:PROMPT}', '${l:ACP_BILL.SELECTED_RECORDS_BE_SAME}', null, 300, 120);
                    return false;
                }
                //如果配置了并单规则,按照配置规则校检
                if (merge_rule_records.length > 0) {
                    //业务实体
                    if (merge_rule_records[0].get('business_unit_flag') == 'Y') {
                        if (header_record.get('owner_business_unit_id') != record.get('owner_business_unit_id')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_BU}', null, 300, 120);
                            return false;
                        }
                    }
                    //库存组织
                    if (merge_rule_records[0].get('inv_organization_flag') == 'Y') {
                        if (header_record.get('inv_organization_id') != record.get('inv_organization_id')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_INV_ORG}', null, 300, 120);
                            return false;
                        }
                    }
                    //采购组织
                    if (merge_rule_records[0].get('pur_organization_flag') == 'Y') {
                        if (header_record.get('pur_organization_id') != record.get('pur_organization_id')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_PUR_ORG}', null, 300, 120);
                            return false;
                        }
                    }
                    //采购员
                    if (merge_rule_records[0].get('pur_buyer_flag') == 'Y') {
                        if (header_record.get('pur_buyer_id') != record.get('pur_buyer_id')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_PUR_BUYER}', null, 300, 120);
                            return false;
                        }
                    }
                    //订单
                    if (merge_rule_records[0].get('pur_po_flag') == 'Y') {
                        if (header_record.get('from_po_header_id') != record.get('from_po_header_id')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_PO_NUMBER}', null, 300, 120);
                            return false;
                        }
                    }
                    //订单类型
                    if (merge_rule_records[0].get('pur_po_type_flag') == 'Y') {
                        if (header_record.get('type_lookup_code') != record.get('type_lookup_code')) {
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_DIFFERENT_PO_TYPE}', null, 300, 120);
                            return false;
                        }
                    }
                    //并单数量
                    if (merge_rule_records[0].get('acp_merge_flag') == 'Y') {
                        var old_merge_num_flag = Math.abs(merge_num_flag) > Math.abs(record.get('trx_quantity'))?merge_num_flag : record.get('trx_quantity');
                        merge_num_flag = merge_num_flag + record.get('trx_quantity');
                       if(Math.abs(old_merge_num_flag)> Math.abs(merge_num_flag)){
                           merge_num_flag = 0;
                           Aurora.showMessage('${l:PROMPT}', '${l:ACP_MERGE_RULE.CHOOSE_ACP_MERGE_NUM}', null, 300, 120);
                            return false;
                       }
                    }
                }
                return true;
            }
            
            //校验开票单行是否已存在
            
            function acp5210_checkBillLineExists(record) {
                var line_records = $('acp5210_bill_lines_ds').getAll();
                var flag = false;
                var item_value = '${/model/bg_item_invoice_08/record/@bg_config_item_value}';//获取“使用含税价开票”配置项的值
                for (var i = 0;i < line_records.length;i++) {

                    //含税价开票
                    if (!Aurora.isEmpty(item_value) && item_value == 'Y') {
                        if (line_records[i].get('item_id') == record.get('item_id') && line_records[i].get('item_name') == record.get('item_name') && line_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && line_records[i].get('tax_code_id') == record.get('tax_code_id') && line_records[i].get('tax_unit_price') == record.get('tax_unit_price')) {
                            flag = true;
                            return flag;
                        }
            
                        //净价开票
                    } else {
                        if (line_records[i].get('item_id') == record.get('item_id') && line_records[i].get('item_name') == record.get('item_name') && line_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && line_records[i].get('tax_code_id') == record.get('tax_code_id') && line_records[i].get('unit_price') == record.get('unit_price')) {
                            flag = true;
                            return flag;
                        }
                    }
                }
                return flag;
            }
            
            //获取同物料、单位、单价的数量之和
            
            function acp5210_getBillLineSumQuantity(record) {
                var trx_records = $('acp5210_bill_select_ds').getAll();
                var sum_quantity = 0;
                var item_value = '${/model/bg_item_invoice_08/record/@bg_config_item_value}';//获取“使用含税价开票”配置项的值
                for (var i = 0;i < trx_records.length;i++) {
                    
                    //含税价开票
                    if (!Aurora.isEmpty(item_value) && item_value == 'Y') {
                        if (trx_records[i].get('item_id') == record.get('item_id') && trx_records[i].get('item_name') == record.get('item_name') && trx_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && trx_records[i].get('tax_code_id') == record.get('tax_code_id') && trx_records[i].get('tax_unit_price') == record.get('tax_unit_price')) {
                            sum_quantity = acp5210_accAdd(sum_quantity,(trx_records[i].get('trx_quantity') * 1));
                        }
            
                        //净价开票
                    } else {
                        if (trx_records[i].get('item_id') == record.get('item_id') && trx_records[i].get('item_name') == record.get('item_name') && trx_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && trx_records[i].get('tax_code_id') == record.get('tax_code_id') && trx_records[i].get('unit_price') == record.get('unit_price')) {
                            sum_quantity = acp5210_accAdd(sum_quantity,(trx_records[i].get('trx_quantity') * 1));
                        }
                    }
                }
                return sum_quantity;
            }
            
            //获取同物料、单位、单价的金额之和
            
            function acp5210_getBillLineSumAmount(record) {
                var trx_records = $('acp5210_bill_select_ds').getAll();
                var result = {};
                var trx_quantity = 0;
                var unit_price = 0;
                var tax_unit_price = 0;
                var sum_amount = 0;
                var tax_sum_amount = 0;
                var display_sum_amount = 0;
                var display_tax_sum_amount = 0;
                var item_value = '${/model/bg_item_invoice_08/record/@bg_config_item_value}';//获取“使用含税价开票”配置项的值
                for (var i = 0;i < trx_records.length;i++) {
                    
                    //含税价开票
                    if (!Aurora.isEmpty(item_value) && item_value == 'Y') {
                        if (trx_records[i].get('item_id') == record.get('item_id') && trx_records[i].get('item_name') == record.get('item_name') && trx_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && trx_records[i].get('tax_code_id') == record.get('tax_code_id') && trx_records[i].get('tax_unit_price') == record.get('tax_unit_price')) {
                            trx_quantity = trx_records[i].get('trx_quantity') * 1;
                        
	                        //计算净价
	                        if(!Aurora.isEmpty(trx_records[i].get('unit_price'))){
		                        unit_price = trx_records[i].get('unit_price') * 1;
		                        sum_amount = acp5210_accAdd(sum_amount,acp5210_accMul(trx_quantity,unit_price));
		                        if (trx_records[i].get('display_unit_price') == '***') {
		                            display_sum_amount = '***';
		                        } else {
		                            display_sum_amount = sum_amount;
		                        }
	                        }
	                        
	                        //计算含税价
	                        if(!Aurora.isEmpty(trx_records[i].get('tax_unit_price'))){
		                        tax_unit_price = trx_records[i].get('tax_unit_price') * 1;
		                        tax_sum_amount = acp5210_accAdd(tax_sum_amount,acp5210_accMul(trx_quantity,tax_unit_price));
		                        if (trx_records[i].get('display_tax_unit_price') == '***') {
		                            display_tax_sum_amount = '***';
		                        } else {
		                            display_tax_sum_amount = tax_sum_amount;
		                        }
	                        }
                        }
            
                        //净价开票
                    } else {
                        if (trx_records[i].get('item_id') == record.get('item_id') && trx_records[i].get('item_name') == record.get('item_name') && trx_records[i].get('unit_meas_lookup_code') == record.get('unit_meas_lookup_code') && trx_records[i].get('tax_code_id') == record.get('tax_code_id') && trx_records[i].get('unit_price') == record.get('unit_price')) {
                            trx_quantity = trx_records[i].get('trx_quantity') * 1;
                        
	                        //计算净价
	                        if(!Aurora.isEmpty(trx_records[i].get('unit_price'))){
		                        unit_price = trx_records[i].get('unit_price') * 1;
		                        sum_amount = acp5210_accAdd(sum_amount,acp5210_accMul(trx_quantity,unit_price));
		                        if (trx_records[i].get('display_unit_price') == '***') {
		                            display_sum_amount = '***';
		                        } else {
		                            display_sum_amount = sum_amount;
		                        }
	                        }
	                        
	                        //计算含税价
	                        if(!Aurora.isEmpty(trx_records[i].get('tax_unit_price'))){
		                        tax_unit_price = trx_records[i].get('tax_unit_price') * 1;
		                        tax_sum_amount = acp5210_accAdd(tax_sum_amount,acp5210_accMul(trx_quantity,tax_unit_price));
		                        if (trx_records[i].get('display_tax_unit_price') == '***') {
		                            display_tax_sum_amount = '***';
		                        } else {
		                            display_tax_sum_amount = tax_sum_amount;
		                        }
	                        }
                        }
                    }
                }
                
                if(sum_amount != 0){
	                sum_amount = acp5210_js_round(sum_amount, 2);
	                if (display_sum_amount != '***') {
	                    display_sum_amount = acp5210_js_round(display_sum_amount, 2);
	                }
	                result.sum_amount = sum_amount;
                	result.display_sum_amount = display_sum_amount;
                }else{
	                result.sum_amount = '';
	                result.display_sum_amount = '';
                }
                
                if(tax_sum_amount != 0){
	                tax_sum_amount = acp5210_js_round(tax_sum_amount, 2);
	                if (display_tax_sum_amount != '***') {
	                    display_tax_sum_amount = acp5210_js_round(display_tax_sum_amount, 2);
	                }
	                result.tax_sum_amount = tax_sum_amount;
	                result.display_tax_sum_amount = display_tax_sum_amount;
                }else{
	                result.tax_sum_amount = '';
	                result.display_tax_sum_amount = '';
                }
                
                return result;
            }
            
            //获取勾选数据的金额之和
            
            function acp5210_getBillSumAmount() {
                var trx_records = $('acp5210_bill_select_ds').getAll();
                var result = {};
                var trx_quantity = 0;
                var unit_price = 0;
                var tax_unit_price = 0;
                var sum_amount = 0;
                var tax_sum_amount = 0;
                var display_sum_amount = 0;
                var display_tax_sum_amount = 0;
                for (var i = 0;i < trx_records.length;i++) {
                	trx_quantity = trx_records[i].get('trx_quantity') * 1;
                	
                	//计算净价
                    if(!Aurora.isEmpty(trx_records[i].get('unit_price'))){
	                    unit_price = trx_records[i].get('unit_price') * 1;
	                    sum_amount = acp5210_accAdd(sum_amount,acp5210_accMul(trx_quantity,unit_price));
	                    if (trx_records[i].get('display_unit_price') == '***') {
	                        display_sum_amount = '***';
	                    } else {
	                        display_sum_amount = sum_amount;
	                    }
                    }
                    
                    //计算含税价
                    if(!Aurora.isEmpty(trx_records[i].get('tax_unit_price'))){
	                    tax_unit_price = trx_records[i].get('tax_unit_price') * 1;
	                    tax_sum_amount = acp5210_accAdd(tax_sum_amount,acp5210_accMul(trx_quantity,tax_unit_price));
	                    if (trx_records[i].get('display_tax_unit_price') == '***') {
	                        display_tax_sum_amount = '***';
	                    } else {
	                        display_tax_sum_amount = tax_sum_amount;
	                    }
                    }
                }
                
                if(sum_amount != 0){
	                sum_amount = acp5210_js_round(sum_amount, 2);
	                if (display_sum_amount != '***') {
	                    display_sum_amount = acp5210_js_round(display_sum_amount, 2);
	                }
	                result.sum_amount = sum_amount;
                	result.display_sum_amount = display_sum_amount;
                }else{
	                result.sum_amount = '';
                	result.display_sum_amount = '';
                }
                
                if(tax_sum_amount != 0){
	                tax_sum_amount = acp5210_js_round(tax_sum_amount, 2);
	                if (display_tax_sum_amount != '***') {
	                    display_tax_sum_amount = acp5210_js_round(display_tax_sum_amount, 2);
	                }
	                result.tax_sum_amount = tax_sum_amount;
	                result.display_tax_sum_amount = display_tax_sum_amount;
                }else{
	                result.tax_sum_amount = '';
	                result.display_tax_sum_amount = '';
                }
                
                return result;
            }
            
            function acp5210_auto_handle_subject_document(trx_records) {
                var subject_document_auto_flag = false;
                var datas = [];
                for (var i = 0;i < trx_records.length;i++) {
                    if (!Aurora.isEmpty(trx_records[i].get('cut_payment')) && trx_records[i].get('cut_payment') > 0) {
                        data = {
                            "_status": "update",
                            "rcv_trx_line_id": trx_records[i].get('rcv_trx_line_id')
                        };
                        datas.push(data);
                    }
                }
                if (datas.length > 0) {
                    subject_document_auto_flag = true;
                    Aurora.request({
                        url: $('acp5210_bill_auto_handle_subject_document_link').getUrl(),
                        para: datas,
                        success: function(res) {},
                        failure: function(res) {},
                        error: function(res) {},
                        scope: this
                    });
                }
                return subject_document_auto_flag;
            }
            
            //创建开票单
            
            function acp5210_create_view_bill(trx_records) {
                var header_ds = $('acp5210_bill_headers_ds');
                var line_ds = $('acp5210_bill_lines_ds');
                var detail_ds = $('acp5210_bill_detail_ds');
            
                //开票单头
                var now = new Date();
                var month = now.getMonth() + 1;
                month = month > 9 ? month : '0' + month;
                var day = now.getDate();
                day = day > 9 ? day : '0' + day;
                var date = now.getFullYear() + '-' + month + '-' + day; //STRING类型
                trx_records[0].set('creation_date',date); //创建日期
                trx_records[0].set('bill_amount',acp5210_getBillSumAmount().sum_amount); //净价总金额
                trx_records[0].set('display_bill_amount',acp5210_getBillSumAmount().display_sum_amount); //净价总金额,展示
                trx_records[0].set('tax_bill_amount', acp5210_getBillSumAmount().tax_sum_amount); //含税总金额
                trx_records[0].set('display_tax_bill_amount', acp5210_getBillSumAmount().display_tax_sum_amount); //含税总金额,展示
                header_ds.create(trx_records[0].data);
            
            
                //校验
                for (var i = 0;i < trx_records.length;i++) {
                    if (!acp5210_checkHeaderExists(trx_records[i])) {
                        return false;
                    }
                }
                
                merge_num_flag = 0;//通过校验 并单数量判断flag置零
            
                //如果配置了并单规则,但没有勾选按照采购组采购组织合并，则清空头上的采购组采购组织信息
                var merge_rule_records = $('acp5210_merge_rule_ds').getAll(),
                    header_record = header_ds.getCurrentRecord();
                if (merge_rule_records.length > 0) {
                    //采购组织
                    if (merge_rule_records[0].get('pur_buyer_flag') != 'Y') {
                        header_record.set('pur_buyer_id', '');
                        header_record.set('pur_buyer_name', '');
                    }
                    //采购员
                    if (merge_rule_records[0].get('pur_organization_flag') != 'Y') {
                        header_record.set('pur_organization_id', '');
                        header_record.set('pur_organization_name', '');
                    }
                } else {
                    header_record.set('pur_buyer_id', '');
                    header_record.set('pur_buyer_name', '');
                    header_record.set('pur_organization_id', '');
                    header_record.set('pur_organization_name', '');
                }
            
                //开票行
                var bill_line_num = 1;
                var new_line = false;
                trx_records[0].set('bill_line_num', bill_line_num);
                trx_records[0].set('sum_quantity', acp5210_getBillLineSumQuantity(trx_records[0]));
                trx_records[0].set('sum_amount', acp5210_getBillLineSumAmount(trx_records[0]).sum_amount);
                trx_records[0].set('display_sum_amount', acp5210_getBillLineSumAmount(trx_records[0]).display_sum_amount);
                trx_records[0].set('tax_sum_amount', acp5210_getBillLineSumAmount(trx_records[0]).tax_sum_amount);
                trx_records[0].set('display_tax_sum_amount', acp5210_getBillLineSumAmount(trx_records[0]).display_tax_sum_amount);
                //add by Hunter 2658 at 2018-01-21
                //判断勾选的接收事务是否有扣款金额，自动更新行备注为“扣款”
                if (!Aurora.isEmpty(trx_records[0].get('cut_payment')) && trx_records[0].get('cut_payment') > 0) {
                    trx_records[0].set('line_desc', '扣款');
                }
                line_ds.create(trx_records[0].data);
                detail_ds.create(trx_records[0].data);
                for (var k = 1;k < trx_records.length;k++) {
                    //add by Hunter 2658 at 2018-01-21
	                //判断勾选的接收事务是否有扣款金额，自动更新行备注为“扣款”
	                if (!Aurora.isEmpty(trx_records[k].get('cut_payment')) && trx_records[k].get('cut_payment') > 0) {
	                    trx_records[k].set('line_desc', '扣款');
	                }
                    if (!acp5210_checkBillLineExists(trx_records[k])) {
                        bill_line_num++;
                        trx_records[k].set('bill_line_num', bill_line_num);
                        trx_records[k].set('sum_quantity', acp5210_getBillLineSumQuantity(trx_records[k]));
                        trx_records[k].set('sum_amount', acp5210_getBillLineSumAmount(trx_records[k]).sum_amount);
                        trx_records[k].set('display_sum_amount', acp5210_getBillLineSumAmount(trx_records[k]).display_sum_amount);
                        trx_records[k].set('tax_sum_amount', acp5210_getBillLineSumAmount(trx_records[k]).tax_sum_amount);
                        trx_records[k].set('display_tax_sum_amount', acp5210_getBillLineSumAmount(trx_records[k]).display_tax_sum_amount);
                        line_ds.create(trx_records[k].data);
                        new_line = true;
                    }
                    //明细行
                    detail_ds.create(trx_records[k].data);
                }
                return true;
            }
            
            // 创建
            
            function acp5210_create() {
                var header_ds = $('acp5210_bill_headers_ds');
                var line_ds = $('acp5210_bill_lines_ds');
                var detail_ds = $('acp5210_bill_detail_ds');
                var records = $('acp5210_bill_select_ds').getAll();
                if (records.length < 1) {
                    Aurora.showMessage('${l:PROMPT}', '${l:ACP_BILL.PLEASE_SELECT_AT_LEASE_ONE_RECORD}', null, 300, 120);
                    return false;
                } else {
                    header_ds.removeAll();
                    line_ds.removeAll();
                    detail_ds.removeAll();
            
                    //add by Hunter 2658 at 2018-01-21
                    //判断勾选的接收事务是否有扣款金额，然后做自动创建和审批扣款单
                    var subject_document_auto_flag = acp5210_auto_handle_subject_document(records);
                    var auto_show;
                    if(subject_document_auto_flag){
	                    auto_show = 'Y'; //自动显示总账科目
                    }else{
                        auto_show = 'N';
                    }
            
                    //添加开票单头、行、明细行
                    var flag = acp5210_create_view_bill(records);
                    if (flag) {
            
                        //获取勾选的数据
                        var datas = [];
                        for (var i = 0;i < records.length;i++) {
                            records[i].set('_status', 'execute');
                            datas.push(records[i].data);
                        }
            
                        Aurora.Masker.mask($('acp5210_bill_create_link_window').wrap, '${l:LOADING}');
                        Aurora.request({
                            url: $('acp5210_bill_create_validation_link').getUrl(),
                            para: datas,
                            success: function(res) {
                                Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                                //打开预览页面
                                new Aurora.Window({
                                    id: 'acp5210_bill_detail_link_window',
                                    url: $('acp5210_bill_detail_link').getUrl() + '?base_to=TRANSACTION&auto_show=' + auto_show,
                                    title: '${l:ACP_BILL.BILL_CREATE}', 
                                    fullScreen: true
                                });
                            },
                            failure: function(res) {
                                Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                            },
                            error: function(res) {
                                Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                            },
                            scope: this
                        });
                    }
                }
            }
            
            function acp5210_result_ds_select(ds, record) {
                /* debugger; */
                var list_ds = $('acp5210_bill_select_ds');
                var rcv_trx_line_id = record.get('rcv_trx_line_id');
                var result_record = list_ds.find('rcv_trx_line_id', rcv_trx_line_id);
                if (Aurora.isEmpty(result_record) && record.get('clear_flag') == "N") {
                    $('acp5210_bill_select_ds').create(record.data);
                }
            }
            
            function acp5210_result_ds_unselect(ds, record) {
                var list_ds = $('acp5210_bill_select_ds');
                var rcv_trx_line_id = record.get('rcv_trx_line_id');
                var result_record = list_ds.find('rcv_trx_line_id', rcv_trx_line_id);
                if (!Aurora.isEmpty(result_record)) {
                    list_ds.remove(result_record);
                }
            }
            
            // 页面执行重新查询时所做的操作
            
            function acp5210_result_ds_grid_render(grid) {
                var ds = $('acp5210_result_ds');
                var records = ds.getAll();
                var list_ds = $('acp5210_bill_select_ds');
                var list_records = list_ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    var select_record = list_ds.find('rcv_trx_line_id', records[i].get('rcv_trx_line_id'));
                    if (!Aurora.isEmpty(select_record)) {
                        ds.select(records[i]);
                    }
                }
            }
            
            function acp5210_gridRenderer(value, record, name){
                if (name == 'display_unit_price' || name == 'display_amount' || name == 'display_tax_unit_price' || name == 'display_tax_amount') {
                    if (value == '***') {
                        return value;
                    } else {
            
                        //暂估标识
                        var provisional_estimate_flag = record.get('provisional_estimate_flag');
            
                        if (name == 'display_unit_price') {
                            if (provisional_estimate_flag == 'Y') {
                                return '<div style="color:#FF0000;font-weight:bold;">' + Aurora.formatNumber(value) + '</div>';
                            } else {
                                return Aurora.formatNumber(value);
                            }
                        } else {
                            return Aurora.formatNumber(value);
                        }
            
                    }
                } else if (name == 'details') {
                    return '<a href="javascript:acp5210_pur_details(' + record.get('from_po_header_id') + ')">' + '${l:PROMPT.DETAIL}' + '</>';
                }
            }
            
            function acp5210_pur_details(pur_header_id) {
                new Aurora.Window({
                    id: 'acp5210_pur_details_window',
                    url: $('acp5210_pur_detail_link').getUrl() + '?pur_header_id=' + pur_header_id,
                    title: '${l:PUR_HEADER_DETAIL_TITLE}',
                    fullScreen: true
                });
            }
            
            function acp5210_back() {
                $('acp5210_bill_create_link_window').close();
            }
            
            function acp5210_bill_create_bese_to_trx_update_clear(clear_flag) {
                var list_records = $('acp5210_result_ds').getSelected();
                Aurora.showConfirm('${l:PROMPT}', '${l:ACP_BILL.SURE_ABOUT_THIS_OPERATION}', function() {
                    var datas = [];
                    for (var i = 0;i < list_records.length;i++) {
                        var data = {};
                        data._status = 'update';
                        data.base_to = 'TRANSACTION';
                        data.trx_line_id = list_records[i].get('rcv_trx_line_id');
                        data.clear_flag = clear_flag;
                        datas.push(data);
                    }
                    Aurora.Masker.mask($('acp5210_bill_create_link_window').wrap, '${l:LOADING}');
                    Aurora.request({
                        url: $('acp5210_bill_base_to_trx_clear_update_link').getUrl(),
                        para: datas,
                        success: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                            $('acp5210_bill_select_ds').removeAll();
                            acp5210_bill_query();
                        },
                        failure: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                        },
                        error: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                        },
                        scope: this
                    });
                });
            }
            
            function acp5210_bill_create_base_to_trx_clear() {
                var records = $('acp5210_result_ds').getSelected();
                var count = 0;
                for (var i = 0;i < records.length;i++) {
                    if (records[i].get('clear_flag') == 'N') {
                        count++;
                    }
                }
                if (count == 0) {
                    Aurora.showMessage('${l:PROMPT}', '${l:ACP_BILL.AT_LEAST_CHOICE_ONE_UNCLEAR_DATE}', null, 300, 120);
                    return false;
                } else {
                    acp5210_bill_create_bese_to_trx_update_clear('Y');
                }
            }
            
            function acp5210_bill_create_base_to_trx_unclear() {
                var records = $('acp5210_result_ds').getSelected();
                var count = 0;
                for (var i = 0;i < records.length;i++) {
                    if (records[i].get('clear_flag') == 'Y') {
                        count++;
                    }
                }
                if (count == 0) {
                    Aurora.showMessage('${l:PROMPT}', '${l:ACP_BILL.AT_LEAST_CHOICE_ONE_CLEAR_DATE}', null, 300, 120);
                    return false;
                } else {
                    acp5210_bill_create_bese_to_trx_update_clear('N');
                }
            }
            
            /* function acp5210_auto_create(){
                Aurora.showConfirm('${l:PROMPT}', '${l:ACP5210.AUTO_CREATE_BILL_REQUEST_FOR_SURE}', function() {
                    Aurora.Masker.mask($('acp5210_bill_create_link_window').wrap, '${l:LOADING}');
                    Aurora.request({
                        url: $('acp5210_bill_auto_create_link').getUrl(),
                        para: {},
                        success: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                            Aurora.showMessage('${l:PROMPT}', '${l:ACP5210.WAIT_FOR_AUTO_CREATE_BILL_REQUEST_RESULT}', function(){
	                            $('acp5210_bill_select_ds').removeAll();
	                            acp5210_bill_query();
                            });
                        },
                        failure: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                        },
                        error: function(res) {
                            Aurora.Masker.unmask($('acp5210_bill_create_link_window').wrap);
                        },
                        scope: this
                    });
                });
            } */
        ]]></script>
        <a:dataSets>
            <a:dataSet id="acp5210_bill_headers_ds" fetchAll="true"/>
            <a:dataSet id="acp5210_bill_lines_ds" fetchAll="true"/>
            <a:dataSet id="acp5210_bill_detail_ds" fetchAll="true"/>
            <a:dataSet id="acp5210_bill_select_ds"/>
            <a:dataSet id="acp5210_merge_rule_ds">
                <a:datas dataSource="acp5210_merge_rule_data"/>
            </a:dataSet>
            <a:dataSet id="acp5210_query_ds">
                <a:fields>
                    <a:field name="trx_date_from" defaultValue="${/model/default_date/record/@past_date}" validator="acp5210_trx_dateValidator"/>
                    <a:field name="trx_date_to" validator="acp5210_trx_dateValidator"/>
                    <a:field name="vendor_name" autoComplete="true" autoCompleteField="vendor_name" lovHeight="500" lovService="public.pur_vendors_by_user_authority_lov" lovWidth="500" title="ACP_BILL_SOURCE.VENDOR_CODE_NAME">
                        <a:mapping>
                            <a:map from="vendor_id" to="vendor_id"/>
                            <a:map from="vendor_code" to="vendor_code"/>
                            <a:map from="vendor_name" to="vendor_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="item_name" autoComplete="true" autoCompleteField="item_name" lovGridHeight="320" lovHeight="500" lovService="public.mtl_item_mapping_supply_lov" lovWidth="1000" title="ACP_BILL_LINES.ITEM_ID">
                        <a:mapping>
                            <a:map from="item_id" to="item_id"/>
                            <a:map from="item_name" to="item_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="currency_code" autoComplete="true" autoCompleteField="currency_code" lovHeight="490" lovService="public.pur_currency_code_lov" lovWidth="490" title="ACP_BILL_SOURCE.CURRENCY_CODE">
                        <a:mapping>
                            <a:map from="currency_code" to="currency_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="company_name" autoComplete="true" autoCompleteField="company_code" lovHeight="510" lovService="public.fnd_companies_lov" lovWidth="500" title="ACP_BILL_HEADERS.COMPANY_ID">
                        <a:mapping>
                            <a:map from="company_short_name" to="company_name"/>
                            <a:map from="company_id" to="company_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="business_unit_name" autoComplete="true" autoCompleteField="business_unit_name" lovHeight="500" lovService="public.fnd_business_unit_lov" lovWidth="600" title="ACP_BILL_DETAILS.BUSINESS_UNIT_ID">
                        <a:mapping>
                            <a:map from="business_unit_id" to="business_unit_id"/>
                            <a:map from="business_unit_name" to="business_unit_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="clear_flag" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="inv_organization_name" autoComplete="true" autoCompleteField="inv_organization_name" lovHeight="520" lovService="public.inv_organizations_lov" lovWidth="560" lovlabelWidth="150" title="PUR_RCV_TRX_LINES.INV_ORGANIZATION_ID">
                        <a:mapping>
                            <a:map from="inv_organization_id" to="inv_organization_id"/>
                            <a:map from="inv_organization_name" to="inv_organization_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="pur_organization_name" autoComplete="true" autoCompleteField="pur_organization_code_name" lovHeight="480" lovService="public.pur_organization_lov" lovWidth="500" title="PUR_ORGANIZATIONS.PUR_ORGANIZATION">
                        <a:mapping>
                            <a:map from="pur_organization_id" to="pur_organization_id"/>
                            <a:map from="pur_organization_name" to="pur_organization_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="pur_buyer_name" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="480" lovService="public.pur_buyers_lov" lovWidth="500" title="PUR_HEADERS_ALL.PUR_BUYER">
                        <a:mapping>
                            <a:map from="buyer_id" to="pur_buyer_id"/>
                            <a:map from="buyer_code" to="pur_buyer_code"/>
                            <a:map from="description" to="pur_buyer_name"/>
                        </a:mapping>
                    </a:field>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="acp5210_result_ds" autoCount="true" autoPageSize="true" autoQuery="false" fetchAll="false" model="acp.ACP5210.acp_bill_source" queryDataSet="acp5210_query_ds" selectable="true">
                <a:fields>
                    <a:field name="bill_source_id"/>
                    <a:field name="clear_flag" checkedValue="Y" uncheckedValue="N"/>
                </a:fields>
                <a:events>
                    <a:event name="select" handler="acp5210_result_ds_select"/>
                    <a:event name="unselect" handler="acp5210_result_ds_unselect"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:toolbarButton click="acp5210_create" text="ACP_BILL.CREATION_PREVIEW" width="100"/>
                <!-- <a:toolbarButton click="acp5210_auto_create" text="ACP_BILL.AUTO_CREATE_BILL" width="100"/> -->
                <a:toolbarButton click="acp5210_back" text="HAP_BACK" width="100"/>
                <a:gridButton bind="acp5210_grid" type="excel" width="100"/>
                <a:toolbarButton click="acp5210_bill_create_base_to_trx_clear" text="HAP_CLEAR" width="100"/>
                <a:toolbarButton click="acp5210_bill_create_base_to_trx_unclear" text="ACP_BILL.REVOCATION_CLEAR" width="100"/>
            </a:screenTopToolbar>
            <a:queryForm id="acp5210_query_form" bindTarget="acp5210_query_ds" resultTarget="acp5210_result_ds" style="width:100%;border:none">
                <a:formToolBar>
                    <a:hBox labelWidth="100">
                        <a:textField name="from_po_display_number" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.SEGMENT1">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <a:lov name="business_unit_name" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.BUSINESS_UNIT_ID">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                        <a:lov name="vendor_name" bindTarget="acp5210_query_ds" prompt="ACP_BILL_SOURCE.VENDOR_CODE_NAME">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                        <a:label width="80"/>
                        <a:checkBox name="clear_flag" bindTarget="acp5210_query_ds" label="ACP_BILL.QUERY_UNCLEAR_DATA">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:checkBox>
                    </a:hBox>
                </a:formToolBar>
                <a:formBody style="margin-left:-3px">
                    <a:hBox labelWidth="100">
                        <a:textField name="from_po_line_num" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.PO_LINE_NUM">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <a:textField name="receipt_num" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.RECEIPT_NUM">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <a:textField name="display_release_num" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.PO_RELEASE_NUM">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <!--
                        <a:textField name="trx_number" bindTarget="acp5210_query_ds" prompt="ACP_BILL.RECEIVING_TRX_NUMBER">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        -->
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:textField name="from_asn_display_number" bindTarget="acp5210_query_ds" prompt="INV_ASN_HEADERS.ASN_NUMBER">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <a:textField name="from_asn_line_num" bindTarget="acp5210_query_ds" prompt="INV_ASN_LINES_TEMP.ASN_LINE_NUM">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                        <a:lov name="item_name" bindTarget="acp5210_query_ds" prompt="ACP_BILL_LINES.ITEM_ID">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:datePicker name="trx_date_from" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.TRANSACTION_DATE_FROM">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:datePicker>
                        <a:datePicker name="trx_date_to" bindTarget="acp5210_query_ds" prompt="ACP_BILL_DETAILS.TRANSACTION_DATE_TO">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:datePicker>
                        <a:lov name="currency_code" bindTarget="acp5210_query_ds" prompt="ACP_BILL_SOURCE.CURRENCY_CODE">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:lov name="pur_organization_name" bindTarget="acp5210_query_ds" prompt="PUR_ORGANIZATIONS.PUR_ORGANIZATION">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                        <a:lov name="pur_buyer_name" bindTarget="acp5210_query_ds" prompt="PUR_HEADERS_ALL.PUR_BUYER">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                        <a:lov name="inv_organization_name" bindTarget="acp5210_query_ds" prompt="PUR_RCV_TRX_LINES.INV_ORGANIZATION_ID">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:lov>
                    </a:hBox>
                    <a:hBox labelWidth="100">
                        <a:textField name="type_lookup_desc" bindTarget="acp5210_query_ds" prompt="PUR_HEADERS_ALL.ORDER_TYPE_ID">
                            <a:events>
                                <a:event name="enterdown" handler="acp5210_bill_query"/>
                            </a:events>
                        </a:textField>
                    </a:hBox>
                </a:formBody>
            </a:queryForm>
            <a:grid id="acp5210_grid" autoAppend="false" bindTarget="acp5210_result_ds" marginHeight="180" marginWidth="65" navBar="true">
                <a:columns>
                    <a:column name="receipt_num" align="left" prompt="ACP_BILL_DETAILS.RECEIPT_NUM" sortable="true" width="50"/>
                    <a:column name="receipt_line_num" align="left" prompt="ACP_BILL_DETAILS.RECEIPT_LINE_NUM" sortable="true" width="30"/>
                    <!--
                    <a:column name="trx_number" align="left" prompt="ACP_BILL.RECEIVING_TRX_NUMBER" sortable="true" width="50"/>
                    -->
                    <a:column name="from_po_display_number" align="left" prompt="ACP_BILL_DETAILS.SEGMENT1" sortable="true" width="60"/>
                    <a:column name="trx_date_fmt" align="center" prompt="ACP_BILL_DETAILS.TRANSACTION_DATE" sortable="true" width="60"/>
                    <a:column name="item_code" align="left" prompt="ACP_BILL_LINES.ITEM_CODE" sortable="true" width="100"/>
                    <a:column name="item_name" align="left" prompt="ACP_BILL_LINES.ITEM_NAME" sortable="true" width="120"/>
                    <a:column name="ean_code" align="left" prompt="PUR_LINES_ALL.EAN_CODE" sortable="true" width="80"/>
                    <a:column name="trx_quantity" align="right" prompt="ACP_BILL_DETAILS.AVAILABLE_QUANTITY" sortable="true" width="60"/>
                    <a:column name="unit_meas_lookup_code_desc" align="left" prompt="ACP_BILL_DETAILS.UNIT_MEAS_LOOKUP_CODE" sortable="true" width="60"/>
                    <a:column name="display_unit_price" align="right" prompt="ACP_BILL.NET_PRICE" renderer="acp5210_gridRenderer" sortable="true" width="60"/>
                    <a:column name="display_amount" align="right" prompt="ACP_BILL.NET_LINE_AMOUNT" renderer="acp5210_gridRenderer" sortable="true" width="60"/>
                    <a:column name="tax_rate" align="right" prompt="FND_TAX_TYPE_CODES.TAX_TYPE_RATE" sortable="true" width="60"/>
                    <a:column name="display_tax_unit_price" align="right" prompt="ACP_BILL.TAX_PRICE" renderer="acp5210_gridRenderer" sortable="true" width="60"/>
                    <a:column name="display_tax_amount" align="right" prompt="ACP_BILL.TAX_LINE_AMOUNT" renderer="acp5210_gridRenderer" sortable="true" width="60"/>
                    <a:column name="used_item_code" align="center" prompt="MTL2060.USED_ITEM_CODE" width="60"/>
                    <a:column name="pur_organization_name" align="left" prompt="PUR_ORGANIZATIONS.PUR_ORGANIZATION" sortable="true" width="100"/>
                    <a:column name="pur_buyer_name" align="left" prompt="PUR_HEADERS_ALL.PUR_BUYER" sortable="true" width="100"/>
                    <a:column name="company_name" align="left" prompt="ACP_BILL_HEADERS.COMPANY_NAME" sortable="true" width="120"/>
                    <a:column name="business_unit_name" align="left" prompt="ACP_BILL_DETAILS.BUSINESS_UNIT_ID" sortable="true" width="80"/>
                    <a:column name="inv_organization_name" align="left" prompt="ACP_BILL_DETAILS.INV_ORGANIZATION_NAME" sortable="true" width="85"/>
                    <a:column name="from_po_line_num" align="left" prompt="ACP_BILL_DETAILS.PO_LINE_NUM" sortable="true" width="50"/>
                    <a:column name="type_lookup_desc" align="left" prompt="PUR_HEADERS_ALL.ORDER_TYPE_ID" width="60"/>
                    <a:column name="display_release_num" align="left" prompt="ACP_BILL_DETAILS.PO_RELEASE_NUM" sortable="true" width="80"/>
                    <a:column name="from_po_line_location_num" align="left" prompt="ACP_BILL_DETAILS.PO_SHIPMENT_NUM" sortable="true" width="80"/>
                    <a:column name="tax_rate" align="left" prompt="PUR_LINES_ALL.TAX_RATE" sortable="true" width="40"/>
                    <a:column name="from_asn_display_number" align="left" prompt="INV_ASN_HEADERS.ASN_NUMBER" sortable="true" width="80"/>
                    <a:column name="from_asn_line_num" align="left" prompt="INV_ASN_LINES_TEMP.ASN_LINE_NUM" sortable="true" width="50"/>
                    <!-- <a:column name="inv_organization_name" align="left" prompt="ACP_BILL_DETAILS.ORGANIZATION_ID" sortable="true" width="80"/> -->
                    <a:column name="vendor_name" align="left" prompt="ACP_BILL_SOURCE.VENDOR_CODE_NAME" sortable="true" width="150"/>
                    <a:column name="vendor_site_name" align="left" prompt="ACP_BILL_SOURCE.VENDOR_SITE_CODE_NAME" sortable="true" width="80"/>
                    <a:column name="currency_code" align="center" prompt="ACP_BILL_SOURCE.CURRENCY_CODE" sortable="true" width="60"/>
                    <a:column name="rcv_trx_type_desc" align="center" prompt="ACP_BILL_DETAILS.TRANSACTION_TYPE" sortable="true" width="70"/>
                    <a:column name="details" align="center" prompt="PROMPT.PURCHASE_ORDER" renderer="acp5210_gridRenderer" width="80"/>
                    <a:column name="order_line_desc" prompt="ACP5210.ORDER_LINE_DESC" width="100"/>
                    <a:column name="clear_flag" align="center" prompt="HAP_CLEAR" sortable="true" width="30"/>
                </a:columns>
                <a:events>
                    <a:event name="render" handler="acp5210_result_ds_grid_render"/>
                </a:events>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
