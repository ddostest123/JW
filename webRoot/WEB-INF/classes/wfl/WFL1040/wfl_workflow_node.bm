<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:e="aurora.service.exception" xmlns:o="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" baseTable="WFL_WORKFLOW_NODE"  defaultOrderBy="sequence_num" >
    <bm:fields>
        <bm:field name="node_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="NODE_ID" prompt="WFL_WORKFLOW_NODE.NODE_ID"/>
        <bm:field name="workflow_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="WORKFLOW_ID" prompt="WFL_WORKFLOW_NODE.WORKFLOW_ID"/>
        <bm:field name="sequence_num" databaseType="NUMBER" datatype="java.lang.Long" physicalName="SEQUENCE_NUM" prompt="WFL_WORKFLOW_NODE.SEQUENCE_NUM"/>
        <bm:field name="node_desc" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="NODE_DESC" prompt="WFL_WORKFLOW_NODE.NODE_DESC"/>
        <bm:field name="node_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="NODE_TYPE" prompt="WFL_WORKFLOW_NODE.NODE_TYPE"/>
        <bm:field name="node_type_desc" datatype="java.lang.String" expression="(select v.code_value_name from sys_code_values_vl v,sys_codes t where v.code_id = t.code_id and v.enabled_flag = &apos;Y&apos; and t.enabled_flag = &apos;Y&apos; and t.code = &apos;NODE_TYPE&apos; and v.code_value = t1.node_type)" forInsert="false" forUpdate="false"/>
        <bm:field name="approval_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="APPROVAL_TYPE" prompt="WFL_WORKFLOW_NODE.APPROVAL_TYPE"/>
        <bm:field name="approval_type_desc" datatype="java.lang.String" expression="(select v.code_value_name from sys_code_values_vl v,sys_codes t where v.code_id = t.code_id and v.enabled_flag = &apos;Y&apos; and t.enabled_flag = &apos;Y&apos; and t.code = &apos;APPROVAL_TYPE&apos; and v.code_value = t1.approval_type)" forInsert="false" forUpdate="false"/>
        <bm:field name="can_no_approver_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CAN_NO_APPROVER_FLAG" prompt="WFL_WORKFLOW_NODE.CAN_NO_APPROVER_FLAG"/>
        <bm:field name="can_no_approver_flag_desc" datatype="java.lang.String" expression="(decode(t1.can_no_approver_flag,&apos;Y&apos;,&apos;允许&apos;,&apos;不允许&apos;))" forInsert="false" forUpdate="false"/>
        <bm:field name="mail_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="MAIL_FLAG" prompt="WFL_WORKFLOW_NODE.MAIL_FLAG"/>
        <bm:field name="mail_flag_desc" datatype="java.lang.String" expression="(decode(t1.mail_flag,&apos;Y&apos;,&apos;发送&apos;,&apos;不发送&apos;))" forInsert="false" forUpdate="false"/>
        <bm:field name="link_workflow_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="LINK_WORKFLOW_ID" prompt="WFL_WORKFLOW_NODE.LINK_WORKFLOW_ID"/>
        <bm:field name="link_workflow_code" datatype="java.lang.String" expression="(select w.workflow_code from wfl_workflow w where w.workflow_id = t1.link_workflow_id)" forInsert="false" forUpdate="false"/>
        <bm:field name="link_workflow_desc" datatype="java.lang.String" expression="(select w.workflow_desc from wfl_workflow w where w.workflow_id = t1.link_workflow_id)" forInsert="false" forUpdate="false"/>
        <bm:field name="notify_template_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="NOTIFY_TEMPLATE_ID"/>
        <bm:field name="notify_template_code" databaseType="VARHCAR2" datatype="java.lang.String" expression="(select nt.notify_template_code from sys_notify_template nt where nt.notify_template_id = t1.notify_template_id)" forInsert="false" forUpdate="false"/>
        <bm:field name="notify_template_desc" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select fd.description_text from sys_notify_template nt,fnd_descriptions fd where nt.notify_template_id = t1.notify_template_id and nt.description_id = fd.description_id and fd.language = ${/session/@lang})" forInsert="false" forUpdate="false"/>
        <bm:field name="branch_procedure" databaseType="NUMBER" datatype="java.lang.Long" physicalName="BRANCH_PROCEDURE"/>
        <bm:field name="branch_procedure_code" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select wp.procedure_code from wfl_workflow_procedure wp where wp.procedure_id = t1.branch_procedure)" forInsert="false" forUpdate="false"/>
        <bm:field name="branch_procedure_desc" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select wp.procedure_desc from wfl_workflow_procedure wp where wp.procedure_id = t1.branch_procedure)" forInsert="false" forUpdate="false"/>
        <bm:field name="can_auto_pass_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CAN_AUTO_PASS_FLAG" prompt="WFL_WORKFLOW_NODE.CAN_AUTO_PASS_FLAG"/>
        <bm:field name="is_self_re_commit_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="IS_SELF_RE_COMMIT_FLAG" prompt="WFL_WORKFLOW_NODE.IS_SELF_RE_COMMIT_FLAG"/>
        <bm:field name="system_maintain_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="SYSTEM_MAINTAIN_FLAG" prompt="WFL_WORKFLOW_NODE.SYSTEM_MAINTAIN_FLAG"/>
    </bm:fields>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="node_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field field="node_id" queryOperator="="/>
        <bm:query-field name="workflow_id" queryExpression="t1.workflow_id = ${/parameter/@workflow_id}"/>
    </bm:query-fields>
    <bm:operations>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
            begin
				wfl_workflow_pkg.delete_wfl_node
				(
					p_node_id        	      => ${@node_id},					
					p_user_id                 => ${/session/@user_id}
				);
			end;
			]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <e:exception-descriptor-config>
        <e:exception-descriptor exception="java.sql.SQLException" handleClass="aurora.database.SQLExceptionDescriptor">
            <e:error-message code="1" message="节点序号${@sequence_num}已经存在!"/>
        </e:exception-descriptor>
    </e:exception-descriptor-config>
</bm:model>
