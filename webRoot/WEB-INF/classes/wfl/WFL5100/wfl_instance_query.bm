<?xml version="1.0" encoding="UTF-8"?>
<ns1:model xmlns:ns2="aurora.database.local.oracle" xmlns:ns1="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <ns1:operations>
        <ns1:operation name="query">
            <ns1:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        t.*,
                        (SELECT
                            war.node_id
                        FROM
                            wfl_approve_record war
                        WHERE
                            instance_id   = t.instance_id AND
                            created_by    = ${/session/@user_id} AND
                            war.record_id =
                            (SELECT
                                MAX(war.record_id)
                            FROM
                                wfl_approve_record war
                            WHERE
                                instance_id = t.instance_id AND
                                created_by  = ${/session/@user_id}
                            )
                        ) node_id,
                        DECODE(t.last_approve_name, NULL, NULL, TO_CHAR(t.last_update_date, 'yyyy-mm-dd hh24:mi')) last_update_date_desc,
                        wfl_core_pkg.check_new_approve_created( t.instance_id,${/session/@user_id}) recipient_status
                    FROM
                        (SELECT
                            rs.*,
                            TO_CHAR(rs.creation_date, 'yyyy-mm-dd hh24:mi') creation_date_desc,
                            (SELECT
                                code_value_name
                            FROM
                                sys_service_lookup_v
                            WHERE
                                code       = 'WFL_WORKFLOW_INSTANCE_STATUS' AND
                                code_value = TO_CHAR(rs.status) AND
                                language   = 'ZHS'
                            ) status_name,
                            wfl_common_pkg.get_current_node(rs.workflow_id, rs.instance_id, rs.current_node) curr_approve_name,
                            wfl_common_pkg.get_wfl_user_name(rs.created_by) create_by_name,
                            wfl_common_pkg.get_wfl_user_name(rs.created_by) AS employee_name,
                            rs.created_by AS employee_id,
                            wfl_common_pkg.get_wfl_user_name(
                            (SELECT
                                r.created_by
                            FROM
                                wfl_approve_record r
                            WHERE
                                r.instance_id      = rs.instance_id and
                                r.last_update_date =
                                (select
                                    max(last_update_date)
                                from
                                    wfl_approve_record
                                WHERE
                                    instance_id = rs.instance_id
                                ) AND
                                rownum=1
                            )) last_approve_name,
                            (SELECT
                                code_value_name
                            FROM
                                sys_service_lookup_v v
                            WHERE
                                code           = 'WFL_WORKFLOW_CATEGORY' AND
                                v.enabled_flag = 'Y' AND
                                LANGUAGE       = ${/session/@lang} AND
                                code_value     = rs.workflow_category
                            ) order_type,
                            TO_CHAR(
                            (SELECT
                                MAX(nr.date_limit)
                            FROM
                                wfl_instance_node_recipient nr,
                                wfl_workflow_node n
                            WHERE
                                nr.instance_id = rs.instance_id AND
                                nr.node_id     = n.node_id AND
                                n.sequence_num = rs.current_node
                            ), 'yyyy-mm-dd hh24:mi') date_limit
                        FROM
                            (SELECT
                                a.instance_id,
                                a.workflow_id,
                                a.current_node,
                                a.created_by,
                                a.creation_date,
                                a.document_number order_no,
                                b.name workflow_name,
                                a.last_update_date,
                                b.workflow_category,
                                a.status,
                                a.status_desc,
                                a.instance_amount,
                                a.document_number,
                                a.instance_param,
                                a.document_title_description,
                                wfl_core_pkg.get_document_title(a.instance_id,${/session/@user_id}) project_title
                            FROM
                                wfl_workflow_instance a,
                                Wfl_Workflow_Vl b
                            WHERE
                                a.workflow_id = b.workflow_id AND
                                NOT EXISTS
                                (SELECT
                                    1
                                FROM
                                    wfl_instance_node_recipient r
                                WHERE
                                    (
                                        r.user_id                                                                    = ${/session/@user_id} OR
                                        wfl_core_pkg.check_auto_commission_ignore(r.record_id, ${/session/@user_id}) = 'Y'
                                    )
                                    AND
                                    r.instance_id = a.instance_id
                                ) AND
                                EXISTS
                                (SELECT
                                    1
                                FROM
                                    wfl_approve_record
                                WHERE
                                    instance_id = a.instance_id AND
                                    (
                                        created_by                                                                     = ${/session/@user_id} OR
                                        wfl_core_pkg.check_auto_commission_ignore(rcpt_record_id,${/session/@user_id}) = 'Y'
                                    )
                                )
                            ) rs
                        ) t
                    ORDER BY
                        last_update_date_desc DESC,
                        t.order_no DESC
                    ) t1 #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></ns1:query-sql>
        </ns1:operation>
    </ns1:operations>
    <ns1:query-fields>
        <ns1:query-field name="creation_date_from" datatype="java.lang.String" queryexpression="t1.creation_date &gt; to_date(${@creation_date_from}, &apos;yyyy-mm-dd&apos;)"/>
        <ns1:query-field name="creation_date_to" datatype="java.lang.String" queryexpression="t1.creation_date &lt; to_date(${@creation_date_to}, &apos;yyyy-mm-dd&apos;) + 1"/>
        <ns1:query-field name="workflow_status" datatype="java.lang.String" queryexpression="t1.status = ${@workflow_status}"/>
        <ns1:query-field name="order_type" datatype="java.lang.String" queryexpression="t1.workflow_category = ${@order_type}"/>
        <ns1:query-field name="create_by_name" datatype="java.lang.String" queryexpression="t1.create_by_name like ${@create_by_name}"/>
        <ns1:query-field name="approver" datatype="java.lang.String" queryexpression="t1.curr_approve_name like &apos;%&apos;||${@approver}||&apos;%&apos;"/>
        <ns1:query-field name="workflow_name" datatype="java.lang.String" queryexpression="t1.workflow_name like ${@workflow_name}"/>
        <ns1:query-field name="order_no" datatype="java.lang.String" queryexpression="t1.order_no like ${@order_no}"/>
        <ns1:query-field name="ast_requisition_type_name" queryexpression="eam_asset_common_pkg.get_eam_requisition_type(instance_param)= ${@ast_requisition_type_name}"/>
    </ns1:query-fields>
    <ns1:data-filters>
        <!--<ns1:data-filter name="fil" enforceOperations="query" expression="t.status=&apos;10&apos;"/>--><![CDATA[
        
        
        
        
        
        
        
        
    ]]></ns1:data-filters>
    <ns1:operations>
        <ns1:operation name="execute">
            <ns1:update-sql><![CDATA[
             begin
 				 wfl_core_pkg.cux_send_back_to_approve(p_instance_id => ${@instance_id},
                                  p_node_id     =>  ${@node_id},
                                  p_user_id     =>${/session/@user_id}) ;
			end;
		]]></ns1:update-sql>
        </ns1:operation>
    </ns1:operations>
</ns1:model>
