<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="rv.role_code asc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        srv.role_id,
                        srv.role_code,
                        srv.role_name,
                        srv.role_description,
                        srv.start_date,
                        srv.end_date,
                        srv.role_camp,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'SYS_ROLE_CAMP' AND
                            cvv.code_value = srv.role_camp
                        ) AS role_camp_display,
                        srv.role_type,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'SYS_ROLE_TYPE' AND
                            cvv.code_value = srv.role_type
                        ) AS role_type_display,
                        srv.login_screen,
                        (SELECT
                            ss.service_name
                        FROM
                            sys_service ss
                        WHERE
                            ss.service_id = login_screen
                        ) AS login_screen_name,
                        srv.max_user_number,
                        srv.role_souce_id,
                        (SELECT sv.role_name FROM sys_role_vl sv WHERE sv.role_id = srv.role_souce_id
                        ) AS role_souce_name,
                        srv.role_source,
                        srv.role_source_business_group
                    FROM
                        sys_role_vl srv
                    WHERE
                        srv.end_date IS NULL OR
                        srv.end_date >= SYSDATE
                    ) rv #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
	            begin
	            	fnd_bg_function_pkg.save_bg_role_function(p_business_group 	    => ${/session/@business_group},
	            											  p_role_id         	=> ${@role_id},
									                          p_function_id         => ${@function_id},
									                          p_start_date          => to_date(${@start_date},'YYYY-MM-DD'),
									                          p_end_date            => to_date(${@end_date},'YYYY-MM-DD'),
									                          p_checked_flag        => 'Y',
									                          p_session_user_id     => ${/session/@user_id});
	            end;                                 
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
	            begin
	            	fnd_bg_function_pkg.save_bg_role_function(p_business_group 	    => ${/session/@business_group},
	            											  p_role_id         	=> ${@role_id},
									                          p_function_id         => ${@function_id},
									                          p_start_date          => to_date(${@start_date},'YYYY-MM-DD'),
									                          p_end_date            => to_date(${@end_date},'YYYY-MM-DD'),
									                          p_checked_flag        => 'Y',
									                          p_session_user_id     => ${/session/@user_id});
	            end;                                 
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
	            begin
	            	fnd_bg_function_pkg.save_bg_role_function(p_business_group 	    => ${/session/@business_group},
	            											  p_role_id         	=> ${@role_id},
									                          p_function_id         => ${@function_id},
									                          p_checked_flag        => 'N',
									                          p_session_user_id     => ${/session/@user_id});
	            end;                                 
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="1=1 and rv.role_type in (&apos;NORMAL&apos;,&apos;GROUP_ADMIN&apos;,&apos;COMPANY_ADMIN&apos;)"/>
        <bm:data-filter expression="(role_source_business_group is null or role_source_business_group=${/session/@business_group})"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="unassign_flag" queryExpression="NOT EXISTS (SELECT * FROM fnd_bg_role_function f WHERE f.role_id = rv.role_id and f.business_group = ${/session/@business_group} and f.function_id = ${@function_id})"/>
        <bm:query-field name="assign_flag" queryExpression="EXISTS (SELECT * FROM fnd_bg_role_function f WHERE f.role_id = rv.role_id and f.business_group = ${/session/@business_group} and f.function_id = ${/parameter/@function_id})"/>
        <bm:query-field name="unassign_role_code_name" queryExpression="(rv.role_code like &apos;%&apos; || trim(UPPER(${@unassign_role_code_name})) || &apos;%&apos; or rv.role_name like &apos;%&apos; || trim(UPPER(${@unassign_role_code_name})) ||&apos;%&apos;)"/>
        <bm:query-field name="assigned_role_code_name" queryExpression="(rv.role_code like &apos;%&apos; || trim(UPPER(${@assigned_role_code_name})) || &apos;%&apos; or rv.role_name like &apos;%&apos; || trim(UPPER(${@assigned_role_code_name})) ||&apos;%&apos;)"/>
    </bm:query-fields>
</bm:model>
