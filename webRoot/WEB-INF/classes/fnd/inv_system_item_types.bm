<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:ns2="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" baseTable="inv_system_item_category_vl" defaultorderby="item_category_code">
    <bm:fields>
        <bm:field name="item_category_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="ITEM_CATEGORY_ID" prompt="INV_SYSTEM_ITEM_CATEGORIES.ITEM_TYPE_ID"/>
        <bm:field name="item_category_code" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="200" forDisplay="true" forQuery="true" physicalName="ITEM_CATEGORY_CODE" prompt="INV_SYSTEM_ITEM_CATEGORIES.ITEM_CATEGORY_CODE"/>
        <bm:field name="item_category_name" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="200" forDisplay="true" forQuery="true" physicalName="ITEM_CATEGORY_NAME" prompt="INV_SYSTEM_ITEM_CATEGORIES.ITEM_CATEGORY_NAME_ID"/>
        <bm:field name="coding_method" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CODING_METHOD" prompt="INV_SYSTEM_ITEM_CATEGORIES.CODING_METHOD"/>
        <bm:field name="coding_rule" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CODING_RULE" prompt="INV_SYSTEM_ITEM_CATEGORIES.CODING_RULE"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ENABLED_FLAG" prompt="INV_SYSTEM_ITEM_CATEGORIES.ENABLED_FLAG"/>
        <bm:field name="coding_rule_display" expression="(decode(t1.coding_method, &apos;SIMPLIFIED&apos;, (SELECT cvv.code_value_name FROM sys_code_values_v cvv WHERE cvv.code = &apos;CODING_RULE_DOC_CATEGORY&apos; AND cvv.code_value = t1.coding_rule),&apos;&apos;))" forInsert="false" forUpdate="false"/>
        <bm:field name="complex_coding_rule_display" expression="(decode(t1.coding_method, &apos;SIMPLIFIED&apos;, &apos;&apos;,(SELECT tv.template_desc FROM fnd_flex_tmpl_instances ti, fnd_flex_templates_t_vl tv WHERE ti.tmpl_instance_id = t1.coding_rule AND ti.template_id = tv.template_id)))" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:primary-key>
        <bm:pk-field name="item_category_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field name="item_category_id" queryExpression="t1.item_category_id=${@item_category_id}"/>
        <bm:query-field field="item_category_id" queryOperator="="/>
        <bm:query-field name="item_category_name" queryExpression="item_category_name like &apos;%&apos;||${@item_category_name}||&apos;%&apos;"/>
    </bm:query-fields>
    <bm:operations>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="item_category_id" input="false" output="true" outputPath="@item_category_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
		       BEGIN
				  inv_system_item_categories_pkg.insert_system_item_category(p_item_category_id   => ${@item_category_id},
				                                                             p_item_category_code => ${@item_category_code},
				                                                             p_item_category_name => ${@item_category_name},
				                                                             p_enabled_flag       => ${@enabled_flag},
				                                                             p_coding_method      => ${@coding_method},
				                                                             p_coding_rule        => ${@coding_rule},
				                                                             p_user_id            => ${/session/@user_id});
				END;
   			]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
		        BEGIN
				  inv_system_item_categories_pkg.update_system_item_category(p_item_category_id   => ${@item_category_id},
				                                                             p_item_category_name => ${@item_category_name},
				                                                             p_enabled_flag       => ${@enabled_flag},
				                                                             p_user_id            => ${/session/@user_id});
				END;                               
        ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <!-- <bm:relations> -->
    <!-- <bm:relation name="im" joinType="INNER" refModel="fnd.FND2305.inv_item_type_management"> -->
    <!-- <bm:reference foreignField="item_type_id" localField="item_type_id"/> -->
    <!-- </bm:relation> -->
    <!-- <bm:relation name="ex" joinType="INNER" refModel="fnd.exp_expense_items_vl">
            <bm:reference foreignField="expense_item_id" localField="expense_item_id_origin"/>
        </bm:relation> -->
    <!-- </bm:relations> -->
    <!-- <bm:ref-fields> -->
    <!-- <bm:ref-field name="maintain_company_id" relationname="im" sourcefield="maintain_company_id"/> -->
    <!-- <bm:ref-field name="expense_item_id" prompt="EXP_EXPENSE_ITEMS_VL.EXPENSE_ITEM_ID" relationname="ex" sourcefield="expense_item_id"/> -->
    <!-- </bm:ref-fields> -->
    <!-- <bm:data-filters>
        <bm:data-filter name="item_type_id" enforceOperations="query" expression="t1.item_type_id in(select i.item_type_id from inv_item_type_management i where i.maintain_company_id=${/session/@company_id})"/>
    </bm:data-filters> -->
    <bm:features>
        <f:standard-who/>
        <ns2:sequence-pk/>
    </bm:features>
</bm:model>
