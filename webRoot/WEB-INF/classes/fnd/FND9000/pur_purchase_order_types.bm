<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: 7211
    $Date: 2014-9-28 上午9:54:47  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="order_type_code">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            SELECT * FROM 
				(SELECT pt.order_type_id,
				       pt.order_type_code,
				       pt.description,
				       pt.company_id,
				       pt.currency_code,
				       pt.enabled_flag,
				       pt.line_number_beginning,
				       pt.step_length,
				       pt.auto_approve_flag,
				       pt.auto_audit_flag,
				       pt.one_off_flag,
				       pt.tolerance_flag,
				       pt.tolerance_range,
				       pt.tolerance_ratio,
				       pt.reserve_budget,
				       pt.budget_control_enabled,
				       pt.requisition_flag,
				       pt.create_asn_flag,
				       pte.es_id AS external_system_id,
				       (select f.external_system_name from fnd_bg_external_system_vl f where f.external_system_id = pte.es_id) external_system_name,
				       pt.business_group,
				       pt.outsourcing_flag,
				       pt.return_order_flag
				  FROM pur_purchase_order_types_vl pt,
				       pur_purchase_order_types_es pte
				 WHERE pt.order_type_id = pte.order_type_id) t
                #WHERE_CLAUSE#
                #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="order_type_id" dataType="java.lang.Long" input="false" output="true" outputPath="@order_type_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                begin
                	pur_purchase_order_types_pkg.save_pur_purchase_order_type(
                			p_order_type_id				=>${@order_type_id},
                			p_order_type_code			=>${@order_type_code},
                			p_description				=>${@description},
                			p_enabled_flag				=>${@enabled_flag},
                			p_user_id					=>${/session/@user_id},
                			p_company_id				=>${@company_id},
                			p_currency_code				=>${@currency_code},
                			p_auto_approve_flag			=>${@auto_approve_flag},
                			p_reserve_budget			=>${@reserve_budget},
                			p_budget_control_enabled	=>${@budget_control_enabled},
                			p_requisition_flag			=>${@requisition_flag},
                			p_create_asn_flag			=>${@create_asn_flag},
                			p_return_order_flag			=>${@return_order_flag},
                			p_outsourcing_flag			=>${@outsourcing_flag},
                			p_external_system_id     => ${@external_system_id},
                            p_business_Group         =>  ${/session/@business_group}
                			);
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                begin
                	pur_purchase_order_types_pkg.save_pur_purchase_order_type(
                			p_order_type_id				=>${@order_type_id},
                			p_order_type_code			=>${@order_type_code},
                			p_description				=>${@description},
                			p_enabled_flag				=>${@enabled_flag},
                			p_user_id					=>${/session/@user_id},
                			p_company_id				=>${@company_id},
                			p_currency_code				=>${@currency_code},
                			p_auto_approve_flag			=>${@auto_approve_flag},
                			p_reserve_budget			=>${@reserve_budget},
                			p_budget_control_enabled	=>${@budget_control_enabled},
                			p_requisition_flag			=>${@requisition_flag},
                			p_create_asn_flag	        =>${@create_asn_flag},
                			p_return_order_flag			=>${@return_order_flag},
                			p_outsourcing_flag			=>${@outsourcing_flag},
                			p_external_system_id        =>${@external_system_id}
                			);
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="order_type_code_name" queryExpression="(order_type_code like &apos;%&apos;||trim(UPPER(${@order_type_code_name}))||&apos;%&apos; or description like &apos;%&apos;||trim(${@order_type_code_name})||&apos;%&apos;)"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="t.business_group = ${/session/@business_group}"/>
    </bm:data-filters>
</bm:model>
