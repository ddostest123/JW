<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Dru  
    $Date: 2014-7-4 下午4:22:48  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[SELECT *
  FROM (SELECT f.company_id cooperative_company_id,
       f.business_group cooperative_bg,
       f.company_code cooperative_company_code,
       f.company_short_name,
       f.company_full_name cooperative_company_name,
       f.business_license_number,
       f.national_organization_code,
       f.registered_country_code,
       (SELECT fc.description FROM fnd_country_code_vl fc WHERE fc.country_code = f.registered_country_code) registered_country_name,
       f.registered_province_id,
       (SELECT r.description FROM fnd_region_code_vl r WHERE r.region_id = f.registered_province_id) registered_province_desc,
       f.registered_city_id,
       (SELECT r.description FROM fnd_region_code_vl r WHERE r.region_id = f.registered_city_id) registered_city_desc,
       'SUPPLY' cooperative_ways,
       fnd_cooperative_partner_pkg.check_already_coop_pratner(p_owner_company_id       => ${@owner_company_id},
                                                              p_owner_ways             => 'REQUIRE',
                                                              p_cooperative_company_id => f.company_id,
                                                              p_cooperative_ways       => 'SUPPLY') already_flag                                                        
  FROM fnd_companies_vl f
 WHERE f.complete_supply_flag = 'Y'
       AND f.company_id <> ${@owner_company_id}
       AND 'REQUIRE' = ${@owner_ways}
UNION ALL
SELECT f.company_id cooperative_company_id,
       f.business_group cooperative_bg,
       f.company_code cooperative_company_code,
       f.company_short_name,
       f.company_full_name cooperative_company_name,
       f.business_license_number,
       f.national_organization_code,
       f.registered_country_code,
       (SELECT fc.description FROM fnd_country_code_vl fc WHERE fc.country_code = f.registered_country_code) registered_country_name,
       f.registered_province_id,
       (SELECT r.description FROM fnd_region_code_vl r WHERE r.region_id = f.registered_province_id) registered_province_desc,
       f.registered_city_id,
       (SELECT r.description FROM fnd_region_code_vl r WHERE r.region_id = f.registered_city_id) registered_city_desc,
       'REQUIRE' cooperative_ways,
       fnd_cooperative_partner_pkg.check_already_coop_pratner(p_owner_company_id       => ${@owner_company_id},
                                                              p_owner_ways             => 'SUPPLY',
                                                              p_cooperative_company_id => f.company_id,
                                                              p_cooperative_ways       => 'REQUIRE') already_flag                                                              
  FROM fnd_companies_vl f
 WHERE f.company_id <> ${@owner_company_id}
       AND 'SUPPLY' = ${@owner_ways}
)
   #WHERE_CLAUSE# #ORDER_BY_CLAUSE#]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:parameters>
                <bm:parameter name="requisition_id" dataType="java.lang.Long" input="false" output="true" outputPath="@requisition_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
               BEGIN
  fnd_cooperative_partner_pkg.create_coop_pratner_req(x_requisition_id         => ${@requisition_id},
                                                      p_owner_bg               => ${/session/@business_group},
                                                      p_owner_company_id       => ${@owner_company_id},
                                                      p_owner_ways             => ${@owner_ways},
                                                      p_cooperative_bg         => ${@cooperative_bg},
                                                      p_cooperative_company_id => ${@cooperative_company_id},
                                                      p_cooperative_ways       => ${@cooperative_ways},
                                                      p_comments               => ${@comments},
                                                      p_user_id                => ${/session/@user_id});
END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="cooperative_company_code" queryExpression="cooperative_company_code like &apos;%&apos;||trim(${@cooperative_company_code})||&apos;%&apos;"/>
        <bm:query-field name="cooperative_company_name" queryExpression="cooperative_company_name like &apos;%&apos;||trim(${@cooperative_company_name})||&apos;%&apos;"/>
        <bm:query-field name="company_short_name" queryExpression="company_short_name like &apos;%&apos;||trim(${@company_short_name})||&apos;%&apos;"/>
        <bm:query-field name="business_license_number" queryExpression="business_license_number like &apos;%&apos;||trim(${@business_license_number})||&apos;%&apos;"/>
        <bm:query-field name="national_organization_code" queryExpression="national_organization_code like &apos;%&apos;||trim(${@national_organization_code})||&apos;%&apos;"/>
        <bm:query-field name="registered_country_code" queryExpression="registered_country_code = ${@registered_country_code}"/>
        <bm:query-field name="registered_province_id" queryOperator="registered_province_id = ${@registered_province_id}"/>
        <bm:query-field name="registered_city_id" queryOperator="registered_city_id = ${@registered_city_id}"/>
    </bm:query-fields>
</bm:model>
