<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
				select itf_interface_api_history_s.nextval history_id,
				       itf_interface_api_pkg.get_api_url(a.api_code) api_url,
				       a.api_id,
				       a.config_id,
				       c.sn_appscreat,
				       s.sn_appkey,
				       n.sn_serverurl,
				       '{"sn_code":"' || trim(u.sn_code) || '","skus":[' ||
				       sn_api_procedure_pkg.get_request_parameter('SN_PRODPRICE') || '],' ||
				       '"cityId":"' || sn.cityid || '"}' request_data
				  from itf_interface_api a,
				       (select c.url sn_code
				          from itf_interface_api_config c, itf_interface_api a
				         where c.config_id = a.config_id
				           and a.api_code = 'SN_PRODPRICE') u,
				       (select s.data_source_id cityid
				          from sn_system_areas s
				         where s.data_level = 2
				           and s.data_source_id = '010'
				           and s.data_source_id not in ('MA2', 'MA1', 'HK4')) sn,
				       (select c.url sn_appscreat
				          from itf_interface_api_config c
				         where c.config_code = 'SN_ACCESS_TOKEN') c,
				       (select c.url sn_appkey
				          from itf_interface_api_config c
				         where c.config_code = 'SN_APP_KEY') s,
				       (select c.url sn_serverurl
				          from itf_interface_api_config c
				         where c.config_code = 'SN_REQUEST') n
				 where a.api_code = 'SN_PRODPRICE'
				   and exists
				 (select 1
				          from sn_product_sku s
				         where s.skuid is not null
				           and not exists
				         (select 1 from sn_product_prices p where p.skuid = s.skuid)
				           and not exists
				         (select 1
				                  from sn_product_timestamp t
				                 where t.alert_type = 'SN_PRODPRICE'
				                   and t.skuid = s.skuid
				                   and t.alert_timestamp + 2 > sysdate))
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="history_id"/>
        <bm:field name="api_url"/>
        <bm:field name="api_id"/>
        <bm:field name="config_id"/>
        <bm:field name="sn_appscreat"/>
        <bm:field name="sn_appkey"/>
        <bm:field name="sn_serverurl"/>
        <bm:field name="request_data"/>
    </bm:fields>
</bm:model>
