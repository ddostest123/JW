<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:e="aurora.service.exception" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="api_code" needAccessControl="false">
    <bm:fields>
        <bm:field name="api_id" databaseType="NUMBER" datatype="java.lang.Long" prompt="API.API_ID"/>
        <bm:field name="config_id" databaseType="NUMBER" datatype="java.lang.Long" prompt="API.CONFIG_ID"/>
        <bm:field name="config_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.CONFIG_CODE"/>
        <bm:field name="api_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.API_CODE"/>
        <bm:field name="api_desc" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.API_DESC"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.ENABLED_FLAG"/>
        <bm:field name="procedure" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.PROCEDURE"/>
        <bm:field name="pre_procedure" databaseType="VARCHAR2" datatype="java.lang.String" prompt="API.PRE_PROCEDURE"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    a.api_id,
                    i.config_code,
                    i.config_id,
                    a.api_code,
                    a.api_desc,
                    a.enabled_flag,
                    a.procedure,
                    a.pre_procedure
                FROM
                    itf_interface_api_config i,
                    itf_interface_api a #WHERE_CLAUSE# AND
                    a.config_id=i.config_id
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
                itf_interface_api_config_pkg.save_itf_interface_api(
                        p_api_id => ${@api_id},
                        p_config_id => ${@config_id},
                        p_api_code=> ${@api_code},
                        p_api_desc => ${@pi_desc},
                        p_procedure => ${@procedure},
                        p_pre_procedure => ${@pre_procedure},
                        p_enabled_flag => ${@enabled_flag});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
                BEGIN
                 itf_interface_api_config_pkg.create_itf_interface_api(
                        p_config_id => ${@config_id},
                        p_api_code=> ${@api_code},
                        p_api_desc => ${@pi_desc},
                        p_procedure => ${@procedure},
                        p_pre_procedure => ${@pre_procedure},
                        p_enabled_flag => ${@enabled_flag});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                BEGIN
                 itf_interface_api_config_pkg.create_itf_api_template(
                        p_api_code=> ${@api_code},
                        p_request_para => ${@request_para},
                         p_config_code => ${@config_code},
                          p_url => ${@url},
                          p_api_result => ${@api_result}
                        );
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="config_code" queryExpression=" upper(i.config_code) like &apos;%&apos;||upper(${@config_code})||&apos;%&apos;"/>
        <bm:query-field name="api_code" queryExpression="upper(a.api_code) like &apos;%&apos;||upper(${@api_code})||&apos;%&apos;"/>
    </bm:query-fields>
</bm:model>
