<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lily  
    $Date: 2013-1-21 下午06:50:56  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="release_date desc,display_po_number desc,display_release_num desc,segment1 desc ">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                    SELECT *
					  FROM (SELECT pll.pur_line_location_id,
					               l.pur_line_id,
					               l.pur_header_id,
					               h.srm_status,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'SRM_STATUS'
					                       AND v.code_value = h.srm_status) AS srm_name_desc,
					               h.erp_status,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'PUR_HEADER_ERP_STATUS'
					                       AND v.code_value = h.erp_status) AS erp_status_desc,
					               pll.line_location_status,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'PUR_LINE_LOCATION_STATUS'
					                       AND v.code_value = pll.line_location_status) AS line_location_status_desc,
					               h.company_id,
					               h.company_name,
					               h.vendor_id,
					               (SELECT nvl(pvv.coop_company_id,
					                           -1)
					                  FROM pur_vendors_v pvv
					                 WHERE pvv.vendor_id = h.vendor_id) AS vendor_company_id,
					               nvl(pv.display_vendor_code,
					                   h.vendor_code) vendor_code,
					               h.vendor_name,
					               h.segment1,
					               h.display_po_number,
					               h.revision_num,
					               h.release_id,
					               h.release_num,
					               h.display_release_num,
					               l.line_num,
					               pll.shipment_num,
					               l.item_id,
					               nvl(msi.display_item_code,
					                   l.item_code) item_code,
					               l.item_description AS item_name,
					               msi.item_specs,
					               msi.item_model,
					               msi.ean_code,
					               nvl((SELECT vl.uom_desc
					                     FROM fnd_uom_codes_vl vl
					                    WHERE l.unit_meas_lookup_code = vl.uom_code
					                          AND vl.business_group = h.owner_business_group),
					                   l.unit_meas_lookup_code) unit_meas_lookup_code,
					               pll.quantity quantity_order,
               decode(fnd_config_cnt_price_pkg.get_price_shield(p_config_classify_code  => 'PO',
                                                                p_config_item_code      => 'PO_01',
                                                                p_ctrl_business_group   => h.owner_business_group,
                                                                p_ctrl_company_id       => h.owner_company_id,
                                                                p_ctrl_business_unit_id => h.business_unit_id,
                                                                p_client_business_group => '',
                                                                p_role_id               => 527),
                      'Y',
                      '***',
                      decode(h.type_lookup_code,
                             'BLANKET',
                             pll.price_override,
                             l.unit_price)) unit_price,
					               h.currency_code,
					               (SELECT gc.currency_name FROM gld_currency_vl gc WHERE gc.currency_code = h.currency_code) currency_code_display,
               decode(fnd_config_cnt_price_pkg.get_price_shield(p_config_classify_code  => 'PO',
                                                                p_config_item_code      => 'PO_01',
                                                                p_ctrl_business_group   => h.owner_business_group,
                                                                p_ctrl_company_id       => h.owner_company_id,
                                                                p_ctrl_business_unit_id => h.business_unit_id,
                                                                p_client_business_group => '',
                                                                p_role_id               => 527),
                      'Y',
                      '***',
                      pll.quantity * decode(h.type_lookup_code,
                                            'BLANKET',
                                            pll.price_override,
                                            l.unit_price)) line_amount,
					               pll.need_by_date,
					               to_char(pll.need_by_date,
					                       'yyyy-mm-dd') AS need_by_date_desc,
					               pll.promised_date,
					               to_char(pll.promised_date,
					                       'yyyy-mm-dd') AS promised_date_desc,
					               nvl(pll.consigned_flag,
					                   'N') consigned_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(pll.consigned_flag,
					                                              'N')) AS consigned_flag_dis,
					               pll.quantity_received,
					               nvl(pll.deliver_quantity,
					                   0) deliver_quantity,
					               nvl(pll.quantity_shipped,
					                   0) quantity_shipped,
					               pll.quantity_billed,
					               (SELECT pll.quantity - nvl(SUM(l.quantity),0)
					                  FROM acp_bill_headers h,
					                       acp_bill_lines   l,
					                       acp_bill_details d
					                 WHERE h.header_id = l.header_id
					                       AND l.line_id = d.line_id
					                       AND h.base_to = 'ORDER'
					                       AND d.po_line_location_id = pll.pur_line_location_id) AS quantity,
					               nvl(pll.closed_code,
					                   'OPEN') AS closed_code,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'CLOSED_CODE'
					                       AND v.code_value = nvl(pll.closed_code,
					                                              'OPEN')) AS closed_code_dis,
					               nvl(pll.cancel_flag,
					                   'N') AS cancel_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(pll.cancel_flag,
					                                              'N')) AS cancel_flag_dis,
					               l.line_type_id,
					               l.line_type_name,
					               l.category_id,
					               l.category_name,
					               l.vendor_desc,
					               h.type_lookup_code,
					               nvl(h.type_lookup_desc,
					                   h.erp_po_type_desc) type_lookup_desc,
					               h.vendor_site_id,
					               nvl(h.vendor_site_code,
					                   (SELECT nvl(vsv.display_site_code,
					                               vsv.vendor_site_code)
					                      FROM pur_vendor_sites_vl vsv
					                     WHERE vsv.vendor_site_id = h.vendor_site_id)) AS vendor_site_code,
					               h.vendor_site_name,
					               h.agent_id,
					               h.agent_code,
					               h.agent_name,
					               h.ship_to_location_id,
					               h.ship_to_location_code,
					               nvl(h.ship_to_location_code,
					                   h.ship_to_location_address) ship_to_location_name,
					               h.bill_to_location_id,
					               h.bill_to_location_code,
					               h.bill_to_location_name,
					               l.secondary_unit_of_measure,
					               l.secondary_quantity,
					               to_char(nvl(h.erp_creation_date,
					                           h.creation_date),
					                       'yyyy-mm-dd hh24:mi') AS creation_date_desc,
					               h.release_date,
					               to_char(h.release_date,
					                       'yyyy-mm-dd hh24:mi') AS release_date_desc,
					               h.confirm_date,
					               to_char(h.confirm_date,
					                       'yyyy-mm-dd hh24:mi') AS confirm_date_desc,
					               h.reply_date,
					               to_char(h.reply_date,
					                       'yyyy-mm-dd') AS reply_date_desc,
					               h.data_source,
					               h.reply_over_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(h.reply_over_flag,
					                                              'N')) AS reply_over_flag_dis,
					               pll.urgent_status,
					               (SELECT code_value_name
					                  FROM sys_code_values_v sc
					                 WHERE sc.code_value = pll.urgent_status
					                       AND sc.code = 'PUR_PO_URGENT_STATUS') urgent_status_desc,
					               to_char(pll.urgent_date,
					                       'yyyy-mm-dd hh24:mi') urgent_date_desc,
					               pll.urgent_date,
					               pll.c_attribute1,
					               pll.c_attribute2,
					               pll.c_attribute3,
					               (SELECT su.user_id
					                  FROM sys_user   su,
					                       pur_buyers pb
					                 WHERE su.user_id = pb.user_id
					                       AND pb.buyer_id = h.agent_id
					                       AND rownum = 1) agent_user_id,
					               pll.warehouse_id,
					               (SELECT iwv.description FROM inv_warehouses_vl iwv WHERE iwv.warehouse_id = pll.warehouse_id) warehouse_name,
					               pll.inv_location_id,
					               (SELECT ilv.description FROM inv_locations_vl ilv WHERE ilv.location_id = pll.inv_location_id) inv_location_name,
					               pv.coop_company_id,
					               pv.coop_business_group,
					               h.owner_company_id,
					               h.owner_business_group,
					               --h.inv_organization_id,
					               --h.inv_organization_name ship_to_organization_name,
					               h.pur_organization_id,
					               (SELECT pov.description
					                  FROM pur_organizations_vl pov
					                 WHERE pov.pur_organization_id = h.pur_organization_id) pur_organization_name,
					               h.business_unit_id,
					               pll.already_shipped_flag,
					               (SELECT bu.business_unit_name FROM fnd_business_units_vl bu WHERE bu.business_unit_id = h.business_unit_id) business_unit_name,
					               to_char(pll.request_arrival_date,
					                       'YYYY-MM-DD') request_arrival_date_desc,
					               l.is_returned_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(l.is_returned_flag,
					                                              'N')) AS is_returned_flag_desc,
					               l.is_free_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(l.is_free_flag,
					                                              'N')) AS is_free_flag_desc,
					               l.is_immed_shipped_flag,
					               (SELECT v.code_value_name
					                  FROM sys_code_values_v v
					                 WHERE v.code = 'YES_NO'
					                       AND v.code_value = nvl(l.is_immed_shipped_flag,
					                                              'N')) AS is_immed_shipped_flag_desc,
					               l.actual_receiver_code,
					               l.actual_receiver_name,
					               l.ship_to_location_address,
					               l.contacts_info,
					               h.inv_organization_id,
					               (SELECT iov.inv_organization_code
					                  FROM inv_organizations_vl iov
					                 WHERE iov.inv_organization_id = h.inv_organization_id) inv_organization_code,
					               (SELECT iov.description
					                  FROM inv_organizations_vl iov
					                 WHERE iov.inv_organization_id = h.inv_organization_id) inv_organization_name,
					               pll.bill_matched_flag,
					               nvl(pll.clear_flag,
					                   'N') clear_flag,
					               l.tax_code_id,
					               (SELECT ttc.tax_type_rate
					                  FROM fnd_tax_type_codes ttc
					                 WHERE ttc.tax_type_id = l.tax_code_id) AS tax_rate,
					               (SELECT ttc.description
					                  FROM fnd_tax_type_codes_vl ttc
					                 WHERE ttc.tax_type_id = l.tax_code_id) AS tax_name,
					               l.rate_type,
					               l.rate_date,
					               l.rate,
					               h.terms_id,
					               NULL useless_id_3,
					               NULL useless_id_4,
					               NULL useless_id_5,
					               NULL useless_id_6,
					               NULL useless_id_7,
					               NULL useless_id_8,
					               NULL useless_id_9,
					               NULL useless_id_10,
					               NULL useless_id_11
					          FROM pur_vendors            pv,
					               mtl_system_items       msi,
					               pur_headers_all        h,
					               pur_lines_all          l,
					               pur_line_locations_all pll
					         WHERE pv.vendor_id = h.vendor_id
					               AND msi.item_id(+) = l.item_id
					               AND h.pur_header_id = l.pur_header_id
					               AND l.pur_line_id = pll.pur_line_id
					               AND h.last_version = 'Y'
					               AND
					               ((h.comments IS NOT NULL AND h.comments NOT IN ('体外诊断试剂申领',
					                                                               'SIMS')) OR h.comments IS NULL)
					               AND h.owner_business_group = ${/session/@business_group}
					               AND (EXISTS (SELECT 1
                              FROM fnd_config_center_bg_item_dtl ccbid
                             WHERE ccbid.config_classify_code = 'PO'
                                   AND ccbid.config_item_code = 'PO_02'
                                   AND ccbid.config_item_detail_code = 'PO_02_02'
                                   AND ccbid.business_group = h.owner_business_group
                                   AND ccbid.bg_config_item_value = 'Y') OR NOT EXISTS
                (SELECT 1
                       FROM fnd_config_center_bg_item_dtl ccbid
                      WHERE ccbid.config_classify_code = 'PO'
                            AND ccbid.config_item_code = 'PO_02'
                            AND ccbid.config_item_detail_code = 'PO_02_02'
                            AND ccbid.business_group = h.owner_business_group))) v
					                    
               #AUTHORIY_FROM#  #WHERE_CLAUSE# #AUTHORIY_WHERE# #ORDER_BY_CLAUSE# 
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="display_po_number" queryExpression="display_po_number like &apos;%&apos;||trim(${@display_po_number})||&apos;%&apos;"/>
        <bm:query-field name="company_id" queryExpression="company_id = ${@company_id}"/>
        <bm:query-field name="line_num" queryExpression="line_num = ${@line_num}"/>
        <bm:query-field name="shipment_num" queryExpression="shipment_num = ${@shipment_num}"/>
        <bm:query-field name="agent_id" queryExpression="agent_id = ${@agent_id}"/>
        <bm:query-field name="srm_status" queryExpression="srm_status = ${@srm_status}"/>
        <bm:query-field name="erp_status" queryExpression="erp_status = ${@erp_status}"/>
        <bm:query-field name="type_lookup_code" queryExpression="type_lookup_code = ${@type_lookup_code}"/>
        <bm:query-field name="type_lookup_desc" queryExpression="type_lookup_desc like &apos;%&apos;||trim(${@type_lookup_desc})||&apos;%&apos;"/>
        <bm:query-field name="cancel_flag" queryExpression="cancel_flag = ${@cancel_flag}"/>
        <bm:query-field name="display_release_num" queryExpression="display_release_num = ${@display_release_num}"/>
        <bm:query-field name="vendor_id" queryExpression="vendor_id = ${@vendor_id}"/>
        <bm:query-field name="vendor_site_id" queryExpression="v.vendor_site_id = ${@vendor_site_id}"/>
        <bm:query-field name="item_id" queryExpression="item_id = ${@item_id}"/>
        <bm:query-field name="release_date_from" queryExpression="release_date &gt;= to_date(${@release_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="release_date_to" queryExpression="release_date &lt;= to_date(${@release_date_to},&apos;YYYY-MM-DD&apos;)+1"/>
        <bm:query-field name="confirm_date_from" queryExpression="confirm_date &gt;= to_date(${@confirm_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="confirm_date_to" queryExpression="confirm_date &lt;= to_date(${@confirm_date_to},&apos;YYYY-MM-DD&apos;)+1"/>
        <bm:query-field name="need_by_date_from" queryExpression="need_by_date &gt;= to_date(${@need_by_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="need_by_date_to" queryExpression="need_by_date &lt;= to_date(${@need_by_date_to},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="promised_date_from" queryExpression="promised_date &gt;= to_date(${@promised_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="promised_date_to" queryExpression="promised_date &lt;= to_date(${@promised_date_to},&apos;YYYY-MM-DD&apos;)+1"/>
        <bm:query-field name="closed_code" queryExpression="closed_code = ${@closed_code}"/>
        <bm:query-field name="consigned_flag" queryExpression="consigned_flag = ${@consigned_flag}"/>
        <bm:query-field name="reply_over_flag" queryExpression="reply_over_flag = ${@reply_over_flag}"/>
        <bm:query-field name="urgent_status" queryExpression="urgent_status = ${@urgent_status}"/>
        <bm:query-field name="urgent_date_from" queryExpression="urgent_date &gt;= to_date(${@urgent_date_from},&apos;YYYY-MM-DD hh24:mi:ss&apos;)"/>
        <bm:query-field name="urgent_date_to" queryExpression="urgent_date &lt;= to_date(${@urgent_date_to},&apos;YYYY-MM-DD hh24:mi:ss&apos;)+1"/>
        <bm:query-field name="line_location_status" queryExpression=" line_location_status = ${@line_location_status}"/>
        <bm:query-field name="business_unit_id" queryExpression="business_unit_id = ${@business_unit_id}"/>
        <!-- <bm:query-field name="cancel_flag" queryExpression="v.cancel_flag = ${@cancel_flag}"/> -->
        <bm:query-field name="closed_flag" queryExpression="v.closed_code in (&apos;CLOSED&apos;,&apos;FINALLY CLOSED&apos;)"/>
        <!-- <bm:query-field name="closed_code" queryExpression="v.closed_code = ${@closed_code}"/> -->
        <!-- <bm:query-field name="already_shipped_flag" queryExpression="v.already_shipped_flag = ${@already_shipped_flag}"/> -->
        <bm:query-field name="is_immed_shipped_flag" queryExpression="v.is_immed_shipped_flag = ${@is_immed_shipped_flag}"/>
        <bm:query-field name="is_free_flag" queryExpression="v.is_free_flag = ${@is_free_flag}"/>
        <bm:query-field name="pur_organization_id" queryExpression="v.pur_organization_id = ${@pur_organization_id}"/>
        <bm:query-field name="pur_line_location_ids" queryExpression="pur_line_location_id in (${:@pur_line_location_ids})"/>
        <bm:query-field name="ready_to_shipped_flag" queryExpression="(${@ready_to_shipped_flag} = &apos;Y&apos; and EXISTS (SELECT 1 FROM inv_asn_headers iah,inv_asn_lines ial WHERE iah.asn_header_id = ial.asn_header_id AND iah.status = &apos;NEW&apos; AND ial.line_location_id = v.pur_line_location_id))"/>
        <bm:query-field name="already_shipped_flag" queryExpression="(${@already_shipped_flag} = &apos;Y&apos; and EXISTS (SELECT 1 FROM inv_asn_headers iah,inv_asn_lines ial WHERE iah.asn_header_id = ial.asn_header_id AND iah.status = &apos;SEND_OUT&apos; AND ial.line_location_id = v.pur_line_location_id))"/>
        <bm:query-field name="clear_flag" queryExpression="((${@clear_flag} = &apos;Y&apos; and clear_flag = &apos;N&apos;) or (${@clear_flag} = &apos;N&apos; and 1=1))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1 = 1"/>
        <bm:data-filter expression="v.quantity &gt; 0"/>
    </bm:data-filters>
    <authority foundation_code="PUR_PO">
        <authority-segment source_alias="v" source_name="agent_user_id" type="CREATER"/>
        <authority-segment source_alias="v" source_name="owner_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id_3" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="inv_organization_id" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="vendor_company_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id_9" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="item_id" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_11" type="SALES_PRODUCTION"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="vendor_site_id" type="VENDOR_SITE"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
