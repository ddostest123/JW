<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" baseTable="ves_archive_total_lines">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            SELECT t1.total_line_id,
			       t1.archive_id,
			       t1.total_line_status,
			       (SELECT t.flex_desc
			          FROM (SELECT v.flex_value_id        flex_value_id,
			                       v.parent_flex_value_id,
			                       v.flex_value           flex_value,
			                       v.flex_desc,
			                       s.flex_value_set_code
			                  FROM fnd_flex_values_vl  v,
			                       fnd_flex_value_sets s
			                 WHERE v.flex_value_set_id = s.flex_value_set_id) t
			         WHERE t.flex_value_set_code = 'VES_ARC_TOTAL_LINE_STATUS'
			               AND t.flex_value = t1.total_line_status) AS total_line_status_display,
			       t1.suggestion,
			       assess_event_maintain_pkg.get_second_node(p_archive_header_id =>t1.archive_id,p_total_line_id =>t1.total_line_id) as second_node_id,
			        assess_event_maintain_pkg.get_third_node(p_archive_header_id =>t1.archive_id,p_total_line_id =>t1.total_line_id) as third_node_id,
			         assess_event_maintain_pkg.get_q_node(p_archive_header_id =>t1.archive_id,p_total_line_id =>t1.total_line_id) as q_node_id,
			          assess_event_maintain_pkg.get_first_node(p_archive_header_id =>t1.archive_id,p_total_line_id =>t1.total_line_id) as first_node_id,
			       (SELECT t.flex_desc
			          FROM (SELECT v.flex_value_id        flex_value_id,
			                       v.parent_flex_value_id,
			                       v.flex_value           flex_value,
			                       v.flex_desc,
			                       s.flex_value_set_code
			                  FROM fnd_flex_values_vl  v,
			                       fnd_flex_value_sets s
			                 WHERE v.flex_value_set_id = s.flex_value_set_id) t
			         WHERE t.flex_value_set_code = 'VES_ARCHIVE_SUGGESTION'
			               AND t.flex_value = t1.suggestion) AS suggestion_display,
			       t1.risk_level,
			       (SELECT t.flex_desc
			          FROM (SELECT v.flex_value_id        flex_value_id,
			                       v.parent_flex_value_id,
			                       v.flex_value           flex_value,
			                       v.flex_desc,
			                       s.flex_value_set_code
			                  FROM fnd_flex_values_vl  v,
			                       fnd_flex_value_sets s
			                 WHERE v.flex_value_set_id = s.flex_value_set_id) t
			         WHERE t.flex_value_set_code = 'VES_ARCHIVE_RISK_LEVEL'
			               AND t.flex_value = t1.risk_level) AS risk_level_display,
			       t1.vendor_id,
			       (SELECT pvv.display_vendor_code vendor_code FROM pur_vendors_vl pvv WHERE pvv.vendor_id = t1.vendor_id) AS vendor_code,
			       (SELECT nvl(pvv.short_name,
			                   pvv.full_name)
			          FROM pur_vendors_vl pvv
			         WHERE pvv.vendor_id = t1.vendor_id) AS vendor_desc,
			       t1.item_category_id,
			       (SELECT mcud.category_code
			          FROM mtl_categories_user_defined_vl mcud
			         WHERE mcud.category_udf_id = t1.item_category_id) AS item_category_code,
			       (SELECT mcud.category_name
			          FROM mtl_categories_user_defined_vl mcud
			         WHERE mcud.category_udf_id = t1.item_category_id) AS item_category_desc,
			           (SELECT v.flex_desc
                 FROM fnd_flex_values_vl  v,
                      fnd_flex_value_sets s
                WHERE v.flex_value_set_id = s.flex_value_set_id
                      AND s.enabled_flag = 'Y'
                      AND s.flex_value_set_code = 'RATING_GROUP'
                      AND v.flex_value = t1.rating_classify_code) AS rating_group,
			       t1.score,
			       t1.score_level,
			       t1.feedback_desc,
			       t1.ranking,
			       t1.improvement_countermeasures,
			       t1.root_cause_analysis,
			       t1.vendor_represent,
			       t1.approved_by,
			       t1.vendor_position,
			       t1.approve_position,
			       nvl(t1.submit_date,sysdate) submit_date,
			       t1.creation_date,
			       t1.created_by,
			       t1.last_update_date,
			       t1.last_updated_by,
       --pmj 20220818 获取模板
       (SELECT vt.ve_template_code
          FROM ves_template vt
         WHERE vt.ve_template_id =
               (SELECT vh.template_id FROM ves_archive_headers vh WHERE vh.archive_header_id = t1.archive_id)) ve_template_code,
       (SELECT 1
           FROM ves_template vt
          WHERE vt.ve_template_id =
                (SELECT vh.template_id FROM ves_archive_headers vh WHERE vh.archive_header_id = t1.archive_id)
                AND (vt.ve_template_code LIKE '%FC%' OR vt.ve_template_code LIKE '%EC%' OR
                vt.ve_template_code LIKE '%SB%' OR vt.ve_template_code LIKE '%GC%')) template_code_flage
			  FROM ves_archive_total_lines t1
			   where t1.total_line_id = ${/parameter/@total_line_id}
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                BEGIN
                    ves_archive_pkg.submit_archive_total_line(
                    				p_total_line_id          =>${@total_line_id},
                    				p_root_cause_analysis     =>${@root_cause_analysis},
                    				p_vendor_represent        =>${@vendor_represent},
                    				p_vendor_position           =>${@vendor_position},
                    				p_approved_by               =>${@approved_by},
                    				p_approve_position           =>${@approve_position},
                    				p_improvement_countermeasures =>${@improvement_countermeasures},
                    				p_submit_date    =>${@submit_date},
                    				p_user_id		=> ${/session/@user_id}
                    );
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
 
</bm:model>
