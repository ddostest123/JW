<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-27 上午9:38:00  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="line_num">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    t.*,
                    to_char(decode(round(pl_conversion_rate*no_tax_amount,4),0,null,(ROUND(((fl_conversion_rate*untax_price - round(pl_conversion_rate*no_tax_amount,4))/round(pl_conversion_rate*no_tax_amount,4) *100),2))),'FM99990.099999')||'%' AS blank_range,
                    to_char(ROUND((((fl_conversion_rate*untax_price) - (pl_conversion_rate*vendor_min_tax_amount)) / (pl_conversion_rate*vendor_min_tax_amount) *100),2),'FM99990.099999')||'%' AS vendor_range
                FROM
                    (SELECT
                        l.feedback_line_id,
                        h.status header_status,
                        h.rfx_header_id,
                        h.rfx_version,
                        h.rfx_round,
                        h.coop_business_group,
                        h.coop_company_id,
                        h.vendor_id,
                        (SELECT
                            fc.company_code
                        FROM
                            fnd_companies fc
                        WHERE
                            fc.company_id = h.coop_company_id
                        ) vendor_code,
                        (SELECT
                            fc.company_full_name
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id = h.coop_company_id
                        ) vendor_desc,
                        TO_CHAR(l.feedback_time,'yyyy-mm-dd hh24:mi:ss') feedback_time,
                        l.feedback_header_id,
                        l.status,
                        l.rfx_line_item_id,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = l.status AND
                            sc.code        = 'PUR_RFX_FEEDBACK_LINE_STATUS'
                        ) status_desc,
                        l.inv_organization_id,
                        l.item_category_id,
                        l.item_id,
                        l.item_code,
                        l.item_desc,
                        l.uom_code,
                        rl.quantity,
                        TO_CHAR(l.need_by_date, 'yyyy-mm-dd') need_by_date,
                        l.feedback_range,
                        TO_CHAR(promised_date, 'yyyy-mm-dd') promised_date,
                        TO_CHAR(l.feedback_expiry_date_from, 'yyyy-mm-dd') feedback_expiry_date_from,
                        TO_CHAR(l.feedback_expiry_date_to, 'yyyy-mm-dd') feedback_expiry_date_to,
                        l.delivery_cycle,
                        l.current_fb_by,
                        (SELECT u.user_desc FROM sys_user_v u WHERE u.user_id = l.current_fb_by
                        ) current_fb_by_desc,
                        l.current_fb_quantity,
                        l.current_fb_retail_price,
                        l.current_fb_wholesale_price,
                        l.current_fb_reason,
                        l.current_bargain_by,
                        (SELECT u.user_desc FROM sys_user_v u WHERE u.user_id = l.current_bargain_by
                        ) current_bargain_by_desc,
                        l.current_bargain_quantity,
                        l.current_bargain_retail_price,
                        l.current_bargain_whlsale_price,
                        l.current_bargain_reason,
                        l.valid_fb_by,
                        l.quote_quantity,
                        (SELECT
                            u.user_desc
                        FROM
                            sys_user_v u
                        WHERE
                            u.user_id = l.valid_fb_by
                        ) valid_fb_by_desc,
                        l.valid_fb_quantity,
                        l.valid_fb_retail_price,
                        DECODE(
                        (SELECT
                            rh.is_quot_quantity_flag FROM pur_rfx_headers rh WHERE rh.rfx_header_id = h.rfx_header_id
                        ), 'Y',(NVL(l.valid_fb_retail_price, 0) * NVL(l.quote_quantity, 0)),(NVL(l.valid_fb_retail_price, 0) * NVL(rl.quantity, 0))) AS valid_fb_total_price_trial,
                        (NVL(l.valid_fb_retail_price, 0) * NVL(l.allotted_quantity, 0)) AS valid_fb_total_price,
                        l.valid_fb_wholesale_price,
                        l.valid_fb_reason,
                        l.valid_bargain_by,
                        (SELECT u.user_desc FROM sys_user_v u WHERE u.user_id = l.valid_bargain_by
                        ) valid_bargain_by_desc,
                        l.valid_bargain_quantity,
                        l.valid_bargain_retail_price,
                        l.valid_bargain_wholesale_price,
                        l.valid_bargain_reason,
                        l.abandoned_flag,
                        l.suggested_flag,
                        l.suggested_note,
                        l.comments,
                        l.min_package,
                        l.creation_date,
                        l.created_by,
                        l.last_update_date,
                        l.last_updated_by,
                        (SELECT
                            quote_header_id
                        FROM
                            pur_rfx_quote_headers rqh
                        WHERE
                            rqh.rfx_line_item_id = l.rfx_line_item_id
                        ) quote_header_id,
                        NVL(TO_CHAR(pur_rfx_feedback_pkg.get_last_round_price(h.rfx_header_id, h.owner_business_group, h.coop_company_id, l.item_id, ${/session/@user_id}),'fm99999999990.9999'),'无') AS last_valid_fb_retail_price,
                        pur_rfx_feedback_pkg.get_floating_percentage(h.rfx_header_id, l.valid_fb_retail_price, h.owner_business_group, h.coop_company_id, l.item_id, ${/session/@user_id}) AS floating_percentage,
                        l.allotted_quantity,
                        DECODE(
                        (SELECT
                            rh.is_quot_quantity_flag FROM pur_rfx_headers rh WHERE rh.rfx_header_id = h.rfx_header_id
                        ), 'Y',(
                            CASE
                                WHEN l.quote_quantity IS NOT NULL AND
                                    l.quote_quantity  != 0
                                THEN TO_CHAR(ROUND((l.allotted_quantity / l.quote_quantity), 4) * 100)
                                ELSE '-'
                            END),(
                            CASE
                                WHEN rl.quantity IS NOT NULL AND
                                    rl.quantity  != 0
                                THEN TO_CHAR(ROUND((l.allotted_quantity / rl.quantity), 4) * 100)
                                ELSE '-'
                            END)) AS allotted_percentage,
                        (SELECT
                            li.line_num
                        FROM
                            pur_rfx_ln_items li
                        WHERE
                            li.rfx_line_item_id = l.rfx_line_item_id
                        ) AS line_num,
                        NVL(l.price_batch_quantity,1) AS price_batch_quantity,
                        CASE
                            WHEN NVL(l.valid_fb_retail_price, 0) > NVL(rl.cost_price, 0)
                            THEN (
                                    CASE
                                        WHEN rl.cost_price IS NOT NULL AND
                                            rl.cost_price  != 0
                                        THEN TO_CHAR(ROUND((NVL(l.valid_fb_retail_price, 0) - NVL(rl.cost_price, 0)) / rl.cost_price,4) * 100)
                                        ELSE '-'
                                    END)
                            ELSE '-'
                        END AS super_cost,
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi am
                        WHERE
                            am.table_name     = 'PUR_RFX_FEEDBACK_LINES' AND
                            am.table_pk_value = TO_CHAR(l.feedback_line_id) AND
                            rownum            = 1
                        ) AS atm_counts_feedback,
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi am
                        WHERE
                            am.table_name     = 'PUR_RFX_LN_ITEMS' AND
                            am.table_pk_value = TO_CHAR(l.rfx_line_item_id) AND
                            rownum            = 1
                        ) AS atm_counts_item,
                        NVL(rl.ladder_inquiry_flag,'Y') ladder_inquiry_flag,
                        (SELECT
                            rh.trans_cost_flag
                        FROM
                            pur_rfx_headers rh
                        WHERE
                            rh.rfx_header_id = h.rfx_header_id
                        ) trans_cost_flag,
                        l.trans_cost,
                        CASE
                            WHEN l.bargain_flag ='Y'
                            THEN l.valid_fb_retail_price
                            WHEN l.suggested_flag = 'Y'
                            THEN ROUND(l.valid_fb_retail_price*h.bargain_amount/
                                (SELECT
                                    SUM(NVL(fl.valid_fb_retail_price, 0) * fl.allotted_quantity)
                                FROM
                                    pur_rfx_feedback_headers fh,
                                    pur_rfx_feedback_lines fl,
                                    pur_rfx_ln_items li
                                WHERE
                                    fh.rfx_header_id      = h.rfx_header_id AND
                                    fh.feedback_header_id = fl.feedback_header_id AND
                                    fl.rfx_line_item_id   = li.rfx_line_item_id AND
                                    fh.rfx_round          = li.current_round AND
                                    fh.rfx_version        = li.current_version AND
                                    fh.coop_company_id    = h.coop_company_id AND
                                    fl.suggested_flag     ='Y' AND
                                    fh.cancel_flag        = 'N' AND
                                    fl.cancel_flag        = 'N' AND
                                    li.cancel_flag        = 'N'
                                ),3)
                            ELSE NULL
                        END unit_price,
                        NVL(l.online_unit_price,l.valid_fb_retail_price) online_unit_price,
                        l.tax_included_flag,
                        l.tax_type_id,
                        l.tax_type_code,
                        l.tax_type_rate,
                        decode(pl.currency_code,'CNY',1,(select e.conversion_rate from apps.gl_daily_rates_v@ebslink e where e.to_currency = 'CNY' and trunc(sysdate) = e.conversion_date and e.from_currency = pl.currency_code)) pl_conversion_rate,
                        decode(l.currency_code,'CNY',1,(select e.conversion_rate from apps.gl_daily_rates_v@ebslink e where e.to_currency = 'CNY' and trunc(sysdate) = e.conversion_date and e.from_currency = l.currency_code)) fl_conversion_rate,
                        pl.no_tax_amount,
                        to_char(ROUND(pl.no_tax_amount,4)) AS min_tax_amount,
                        (SELECT
                            h.vendor_site_name
                        FROM
                            pack_agreement_headers h
                        WHERE
                            h.es_header_id = pl.es_header_id
                        ) blank_site_name,
                         to_char((SELECT
                            *
                        FROM
                            (SELECT
                                ROUND(ll.no_tax_amount,4) no_tax_amount
                            FROM
                                pack_agreement_lines ll,
                                pack_agreement_headers h
                            WHERE
                                ll.item_id               = l.item_id AND
                                h.es_header_id          = ll.es_header_id AND
                                h.vendor_id             = pv.vendor_id AND
                                ll.erp_last_update_date IS NOT NULL
                            ORDER BY
                                ll.erp_last_update_date DESC
                            ) vl
                        WHERE nvl( vl.no_tax_amount,0) <> 0
                          and  rownum = 1
                        )) AS vendor_min_tax_amount,
                        (pur_rfx_feedback_pkg.get_last_bid_price(p_rfx_header_id => h.rfx_header_id, p_item_id => l.item_id, p_business_group => ${/session/@business_group}, p_user_id => ${/session/@user_id}) )AS last_bid_price,
                        l.place_of_product,
                        l.spec,
                        l.pur_cycle,
                        l.warranty_period,
                        l.sup_comments,
                        l.exchange_rate,
                        l.untax_price,
                        l.brand,
                        l.currency_code,
                        (SELECT
                            cv.currency_name
                        FROM
                            GLD_CURRENCY_BG_V CV
                        WHERE
                            cv.enabled_flag    = 'Y' AND
                            cv.bg_enabled_flag = 'Y' AND
                            cv.business_group  = ${/session/@business_group} AND
                            cv.currency_code   = l.currency_code
                        ) currency_desc,
                        (SELECT
                            fv.uom_desc
                        FROM
                            fnd_uom_codes_vl fv
                        WHERE
                            fv.uom_code       = l.uom_code AND
                            fv.business_group = h.owner_business_group
                        ) uom_desc,
                        l.attribute1
                    FROM
                        pur_rfx_feedback_lines l,
                        pur_rfx_feedback_headers h,
                        pack_agreement_lines pl,
                        pur_rfx_ln_items rl,
                        pur_vendors_vl pv
                    WHERE
                        h.feedback_header_id = l.feedback_header_id AND
                        h.rfx_header_id      = rl.rfx_header_id AND
                        l.rfx_line_item_id   = rl.rfx_line_item_id AND
                        rl.cancel_flag       = 'N' AND
                        rl.rfx_finished_flag = 'N' AND
                        l.cancel_flag        = 'N' AND
                        pv.coop_company_id(+)    = h.coop_company_id AND
                        pl.item_id(+)         = rl.item_id AND
                        (
                            pl.item_id             IS NULL OR
                            pl.erp_last_update_date =
                            (SELECT
                                MAX(pll.erp_last_update_date)
                            FROM
                                pack_agreement_lines pll
                            WHERE
                                pll.item_id(+) = rl.item_id
                            GROUP BY
                                pll.item_id
                            )
                        )
                        AND
                         h.rfx_round          = rl.current_round AND
                        /* h.rfx_version        = rl.current_version AND */
                        l.rfx_line_item_id = rl.rfx_line_item_id
                    ) t #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              BEGIN
                pur_rfx_feedback_pkg.save_rfx_fb_ln_suggest(p_feedback_line_id =>${@feedback_line_id},
                                   p_suggested_flag    =>${@suggested_flag},
                                   p_suggested_note    =>${@suggested_note},
                                   p_allotted_quantity =>${@allotted_quantity},
                                   p_price_batch_quantity=>${@price_batch_quantity},
                                   p_user_id           =>${/session/@user_id});
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="feedback_line_id" queryExpression="feedback_line_id = ${@feedback_line_id}"/>
        <bm:query-field name="item_id" queryExpression="item_id = ${@item_id}"/>
        <bm:query-field name="rfx_line_item_id" queryExpression="rfx_line_item_id = ${@rfx_line_item_id}"/>
        <bm:query-field name="coop_company_id" queryExpression="coop_company_id = ${@coop_company_id}"/>
        <bm:query-field name="rfx_header_id" queryExpression="rfx_header_id = ${@rfx_header_id}"/>
        <bm:query-field name="current_round" queryExpression="rfx_round = ${@current_round}"/>
        <!-- <bm:query-field name="current_version" queryExpression="rfx_version = ${@current_version}"/> -->
    </bm:query-fields>
</bm:model>
