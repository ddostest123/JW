<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-28 下午4:13:34  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="rfx_header_id desc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*
                FROM
                    (SELECT
                        rh.rfx_header_id,
                        rh.rfx_number,
                        rh.type_po_item,
                        rh.owner_business_group,
                        rh.owner_company_id,
                        rh.owner_business_unit_id,
                        (SELECT
                            bu.business_unit_name
                        FROM
                            fnd_business_units_vl bu
                        WHERE
                            bu.business_unit_id = rh.owner_business_unit_id
                        ) business_unit_name,
                        rh.rfx_type_id,
                        rh.rfx_category,
                        rh.pur_organization_id,
                        pov.pur_organization_code,
                        pov.description AS pur_organization_name,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.rfx_category AND
                            sc.code        = 'PUR_RFX_CATEGORY'
                        ) rfx_category_desc,
                        rh.title,
                        rh.rfx_method,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.rfx_method AND
                            sc.code        = 'PUR_RFX_METHOD'
                        ) rfx_method_desc,
                        rh.auction_direction,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.auction_direction AND
                            sc.code        = 'PUR_RFX_AUCTION_DIRECTION'
                        ) auction_direction_desc,
                        rh.auction_rule,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.auction_rule AND
                            sc.code        = 'PUR_RFX_AUCTION_RULE'
                        ) auction_rule_desc,
                        rh.open_rule,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.open_rule AND
                            sc.code        = 'PUR_RFX_OPEN_RULE'
                        ) open_rule_desc,
                        rh.ranking_rule,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.ranking_rule AND
                            sc.code        = 'PUR_RFX_RANKING_RULE'
                        ) ranking_rule_desc,
                        rh.auction_ranking,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = rh.auction_ranking AND
                            sc.code        = 'PUR_RFX_AUCTION_RANKING'
                        ) auction_ranking_desc,
                        rh.payment_method_id,
                        (SELECT
                            pm.description
                        FROM
                            csh_payment_methods_vl pm
                        WHERE
                            pm.payment_method_id = rh.payment_method_id
                        ) payment_method_desc,
                        rh.currency_code,
                        (SELECT
                            gc.currency_name
                        FROM
                            gld_currency_vl gc
                        WHERE
                            gc.currency_code = rh.currency_code
                        ) currency_desc,
                        rh.exchange_rate,
                        rh.tax_type_id,
                        (SELECT
                            ttc.description
                        FROM
                            fnd_tax_type_codes_vl ttc
                        WHERE
                            ttc.tax_type_id = rh.tax_type_id
                        ) tax_type_desc,
                        rh.tax_type_rate,
                        rh.place_of_delivery,
                        rh.issued_date,
                        TO_CHAR(rh.issued_date, 'yyyy-mm-dd') issued_date_desc,
                        rh.round,
                        rh.version,
                        TO_CHAR(rh.feedback_start_time, 'yyyy-mm-dd hh24:mi:ss') feedback_start_time,
                        TO_CHAR(rh.feedback_end_time, 'yyyy-mm-dd hh24:mi:ss') feedback_end_time,
                        rh.terminated_time,
                        TO_CHAR(rh.terminated_time, 'yyyy-mm-dd hh24:mi:ss') terminated_time_desc,
                        rh.terminated_reason,
                        rh.template_id,
                        (SELECT
                            ft.template_desc
                        FROM
                            fnd_flex_templates_vl ft
                        WHERE
                            ft.template_id = rh.template_id
                        ) template_desc,
                        rh.cancel_flag,
                        rh.closed_flag,
                        rh.data_source,
                        rh.source_from,
                        rh.comments,
                        rh.flex_appl_relevance_id,
                        rh.creation_date,
                        TO_CHAR(rh.creation_date, 'yyyy-mm-dd hh24:mi:ss') creation_date_desc,
                        (
                            CASE
                                WHEN ${/session/@user_id} = rh.created_by
                                THEN rh.created_by
                                ELSE rh.deliver_id
                            END) created_by_or_receiver,
                        rh.created_by,
                        (SELECT u.description FROM sys_user u WHERE u.user_id = rh.created_by
                        ) created_by_desc,
                        rh.tax_included_flag,
                        (SELECT
                            s.code_value_name
                        FROM
                            sys_code_values_v s
                        WHERE
                            s.code       = 'YES_OR_NO' AND
                            s.code_value = NVL(rh.tax_included_flag, 'N')
                        ) tax_included_flag_desc,
                        rh.sealed_bid_flag,
                        (SELECT
                            s.code_value_name
                        FROM
                            sys_code_values_v s
                        WHERE
                            s.code       = 'YES_OR_NO' AND
                            s.code_value = NVL(rh.sealed_bid_flag, 'N')
                        ) sealed_bid_flag_desc,
                        (SELECT
                            COUNT(*)
                        FROM
                            pur_rfx_feedback_headers rfh
                        WHERE
                            rfh.rfx_header_id = rh.rfx_header_id AND
                            rfh.rfx_round     = rh.round
                        ) feedback_vendor_count,
                        NULL AS operation_code,
                        --rh.status,
                        (
                        SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = (pur_rfx_pkg.get_rfx_actual_status(rh.rfx_header_id,${/session/@user_id})) AND
                            sc.code        = 'PUR_RFX_STATUS'
                        ) status_desc,
                        (pur_rfx_pkg.get_rfx_actual_status(rh.rfx_header_id,${/session/@user_id})) AS status,
                        rh.deliver_id useless_id,
                        rh.prequal_flag,
                        rh.expert_score_flag,
                        (SELECT
                            TO_CHAR(bph.closing_date,'yyyy-mm-dd hh24:mi:ss')
                        FROM
                            bid_prequal_headers bph
                        WHERE
                            bph.entrustment_header_id=-rh.rfx_header_id
                        ) AS prequal_closing_date,
                        pur_rfx_pkg.get_quote_response(rh.rfx_header_id,${/session/@user_id}) AS quote_response,
                        public_tools_pkg.get_attachment_show_flag('RFX', rh.rfx_header_id) AS atm_show_flag,
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi aam
                        WHERE
                            aam.table_name = 'PUR_RFX_HEADERS' AND
                            EXISTS
                            (SELECT
                                1
                            FROM
                                fnd_atm_lines fal
                            WHERE
                                fal.source_table_name = 'PUR_RFX_HEADERS' AND
                                fal.atm_line_id       = aam.table_pk_value AND
                                fal.source_pk_value   = TO_CHAR(rh.rfx_header_id)
                            ) AND
                            rownum = 1
                        ) AS atm_counts,
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi aam
                        WHERE
                            aam.table_name     = 'BID_PREQUAL_HEADERS' AND
                            aam.table_pk_value = TO_CHAR(-rh.rfx_header_id) AND
                            rownum             = 1
                        ) AS prequal_atm_counts,
                        (
                            CASE
                                WHEN NVL(rh.sealed_bid_flag,'N')= 'Y' AND
                                    (SELECT
                                            NVL(rp.open_flag,'N')
                                        FROM
                                            pur_rfx_password rp
                                        WHERE
                                            rp.rfx_header_id = rh.rfx_header_id AND
                                            rp.open_user_id  = ${/session/@user_id}
                                    )
                                    = 'N'
                                THEN 'Y'
                                ELSE 'N'
                            END ) AS password_flag,
                            -- (CASE
                                -- WHEN NVL(rh.sealed_bid_flag,'N')= 'Y' 
                                -- THEN 'Y'
                                -- ELSE 'N'
                            -- END ) AS password_flag,
                        NVL(
                        (SELECT
                            '请等待【'
                            ||listagg(s.DESCRIPTION,',') within GROUP (
                        ORDER BY
                            s.DESCRIPTION)
                            ||'】开标'
                        FROM
                            Pur_Rfx_Password p,
                            sys_user s
                        WHERE
                            s.user_id                  = p.open_user_id AND
                            p.rfx_header_id            = rh.rfx_header_id AND
                            NVL(p.open_flag,'N')       = 'N' AND
                            NVL(rh.sealed_bid_flag,'N')= 'Y'
                        GROUP BY
                            p.RFX_HEADER_ID
                        ) ,'-1') unopen_users,
                        (SELECT
                            pb.rfx_type_desc
                        FROM
                            pur_bg_rfx_types_vl pb
                        WHERE
                            pb.rfx_type_id = rh.rfx_type_id
                        ) rfx_type_desc,
                        (SELECT
                            ph.status
                        FROM
                            bid_prequal_headers ph
                        WHERE
                            ph.entrustment_header_id = -rh.rfx_header_id AND
                            rownum                   = 1
                        ) AS prequal_status,
                        ROUND(rh.feedback_end_time-sysdate,2) remain_time,
                        rh.agent_id,
                        (SELECT bv.buyer_desc
                           FROM pur_buyers_vl bv
                          WHERE bv.buyer_id = rh.agent_id) AS agent_name
                        , ( SELECT fc.company_full_name
                            FROM fnd_companies_vl fc
                          WHERE fc.company_id = rh.owner_company_id) vendor_name
                    FROM
                        pur_rfx_headers rh,
                        pur_organizations_vl pov
                    WHERE
                        rh.pur_organization_id                                                    = pov.pur_organization_id(+) AND
                        pur_rfx_pkg.get_rfx_actual_status(rh.rfx_header_id,${/session/@user_id}) IN ('NEW','ISSUED','PREQUAL','PREQUAL_OFF','CUT_OFF','WAITED_ROUND','DEPARTMENT_APPROVE','APPROVED','DEP_REJECTED') AND
                        rh.owner_business_group                                                   = ${/session/@business_group}
                    ) v #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
              BEGIN
                pur_rfx_feedback_pkg.batch_rfx_feedback_ln_bargain
                                  (
                                    p_rfx_header_id =>${@rfx_header_id},
                                    p_user_id       =>${/session/@user_id}
                                  );
              END;
              ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="rfx_number_from" queryExpression="rfx_number &gt;= ${@rfx_number_from}"/>
        <bm:query-field name="rfx_number_to" queryExpression="rfx_number &lt;= ${@rfx_number_to}"/>
        <bm:query-field name="rfx_number" queryExpression="rfx_number like &apos;%&apos;||${@rfx_number}||&apos;%&apos;"/>
        <bm:query-field name="title" queryExpression="title like &apos;%&apos;||${@title}||&apos;%&apos;"/>
        <bm:query-field name="owner_business_unit_id" queryExpression="owner_business_unit_id = ${@owner_business_unit_id}"/>
        <bm:query-field name="rfx_type_id" queryExpression="rfx_type_id = ${@rfx_type_id}"/>
        <bm:query-field name="rfx_category" queryExpression="rfx_category = ${@rfx_category}"/>
        <bm:query-field name="rfx_method" queryExpression="rfx_method = ${@rfx_method}"/>
        <bm:query-field name="auction_direction" queryExpression="auction_direction = ${@auction_direction}"/>
        <bm:query-field name="auction_rule" queryExpression="auction_rule = ${@auction_rule}"/>
        <bm:query-field name="open_rule" queryExpression="open_rule = ${@open_rule}"/>
        <bm:query-field name="ranking_rule" queryExpression="ranking_rule = ${@ranking_rule}"/>
        <bm:query-field name="auction_ranking" queryExpression="auction_ranking = ${@auction_ranking}"/>
        <bm:query-field name="status" queryExpression="status = ${@status}"/>
        <bm:query-field name="currency_code" queryExpression="currency_code = ${@currency_code}"/>
        <bm:query-field name="created_by" queryExpression="v.created_by = ${@created_by}"/>
        <bm:query-field name="creation_date_from" queryExpression="v.creation_date &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="v.creation_date &lt; to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)+1"/>
        <bm:query-field name="issued_date_from" queryExpression="issued_date &gt;= to_date(${@issued_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="issued_date_to" queryExpression="issued_date &lt; to_date(${@issued_date_to},&apos;yyyy-mm-dd&apos;)+1"/>
        <bm:query-field name="feedback_start_time_from" queryExpression="feedback_start_time &gt;= to_date(${@feedback_start_time_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="feedback_start_time_to" queryExpression="feedback_start_time &lt; to_date(${@feedback_start_time_to},&apos;yyyy-mm-dd&apos;)+1"/>
        <bm:query-field name="feedback_end_time_from" queryExpression="feedback_end_time &gt;= to_date(${@feedback_end_time_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="feedback_end_time_to" queryExpression="feedback_end_time &lt; to_date(${@feedback_end_time_to},&apos;yyyy-mm-dd&apos;)+1"/>
        <bm:query-field name="tax_included_flag" queryExpression="tax_included_flag = ${@tax_included_flag}"/>
        <bm:query-field name="sealed_bid_flag" queryExpression="sealed_bid_flag = ${@sealed_bid_flag}"/>
        <bm:query-field name="pur_organization_id" queryExpression="pur_organization_id = ${@pur_organization_id}"/>
        <bm:query-field name="item_code" queryExpression="EXISTS (SELECT 1 from pur_rfx_ln_items li  WHERE li.rfx_header_id = v.rfx_header_id AND li.item_code like &apos;%&apos;||${@item_code}||&apos;%&apos;)"/>
        <bm:query-field name="item_desc" queryExpression="EXISTS (SELECT 1 from pur_rfx_ln_items li  WHERE li.rfx_header_id = v.rfx_header_id AND li.item_desc like &apos;%&apos;||${@item_desc}||&apos;%&apos;)"/>
        <bm:query-field name="vendor_desc" queryExpression="EXISTS (SELECT 1 from pur_rfx_ln_vendors lv, fnd_companies_vl fc WHERE lv.rfx_header_id   = v.rfx_header_id and lv.coop_company_id = fc.company_id   AND fc.company_full_name like &apos;%&apos;|| ${@vendor_desc} || &apos;%&apos;)"/>
        <bm:query-field name="agent_id" queryExpression="v.agent_id = ${@agent_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <!-- <bm:data-filter expression="1 = 1 and v.created_by = ${/session/@user_id}"/> 2019-12-10 by he -->
        <bm:data-filter expression="1 = 1 and v.created_by_or_receiver = ${/session/@user_id}"/>
    </bm:data-filters>
    <authority foundation_code="RFX">
        <authority-segment source_alias="v" source_name="created_by_or_receiver" type="CREATER"/>
        <authority-segment source_alias="v" source_name="owner_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="owner_business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="pur_organization_id" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SALES_PRODUCTION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="agent_id" type="PUR_BUYER"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
