<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangcheng  
    $Date: 2015-6-14 13:13:34  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*
                FROM
                    (SELECT
                        dp.demand_pool_id,
                        dp.req_header_id,
                        NVL(dp.es_req_number, dp.req_number) AS req_number,
                        dp.enabled_flag,
                        dp.authorization_status,
                        dp.type_lookup_code,
                        dp.cancel_flag,
                        dp.closed_code,
                        dp.org_id,
                        dp.org_code,
                        dp.approved_flag,
                        dp.approved_date,
                        dp.revision_num,
                        dp.req_line_id,
                        dp.line_num,
                        dp.line_type_id,
                        dp.line_type_code,
                        dp.item_id,
                     --   (SELECT
                     --       NVL(siv.display_item_code, dp.item_code)
                     --   FROM
                    --        mtl_system_items_vl siv
                    --    WHERE
                    --        siv.item_id = dp.item_id
                     --   ) AS
                     msi.display_item_code item_code,
                     --   NVL(
                     --   (SELECT
                     --       siv.item_name
                     --   FROM
                     --       mtl_system_items_vl siv
                     --   WHERE
                     --       siv.item_id = dp.item_id
                     --   ), dp.item_description)
                     msi.item_name   AS item_description,
                        dp.item_revision,
                        dp.unit_meas_lookup_code,
                       -- dp.unit_price,
                        (SELECT
                            round(pal.tax_amount,4)
                        FROM
                            pack_agreement_lines pal
                        WHERE
                            pal.eitf_line_id = dp.req_line_id
                        ) unit_price,
                        (SELECT
                            round(pal.no_tax_amount,4)
                        FROM
                            pack_agreement_lines pal
                        WHERE
                            pal.eitf_line_id = dp.req_line_id
                        ) untax_unit_price,
                        dp.quantity,
                        dp.delivery_date,
                        dp.deliver_to_location_id,
                        dp.deliver_to_location_code,
                        dp.line_location_id,
                        dp.line_location_num,
                --        NVL(dp.purchasing_agent_id,
                  --      (SELECT
                  --          pb.buyer_id
                  --      FROM
                  --          pur_buyers pb
                  --      WHERE
                  --          pb.business_group = dp.business_group AND
                  --          pb.display_code   = dp.purchasing_agent_code AND
                  --          pb.enabled_flag   = 'Y' AND
                 --           rownum            =1
                 --       )) AS purchasing_agent_id,
                 --       NVL(dp.purchasing_agent_code,
                 --       (SELECT
                 --           pb.display_code
                 --       FROM
                 --          pur_buyers pb
                 --       WHERE
                 --           pb.business_group = dp.business_group AND
                 --           pb.buyer_id       = dp.purchasing_agent_id
                 --       )) AS purchasing_agent_code,
                        dp.currency_code,
                        dp.rate_type,
                        dp.rate_date,
                        dp.rate,
                        dp.currency_unit_price,
                        dp.suggested_vendor_name,
                        dp.must_use_sugg_vendor_flag,
                        dp.line_cancel_flag,
                        dp.source_organization_id,
                        dp.source_subinventory,
                        dp.cancel_reason,
                        dp.line_closed_code,
                        dp.sourcing_flag,
                        dp.sourcing_doc_number,
                        dp.sourcing_type,
                        dp.req_status,
                        NVL(dp.assigned_flag, 'N') AS assigned_flag,
                        dp.assigned_by,
                        dp.assigned_date,
                        dp.assigned_to,
                        (SELECT
                            description
                            ||'('
                            ||user_name
                            ||')'
                        FROM
                            sys_user
                        WHERE
                            user_id = assigned_to
                        ) AS assigned_to_desc,
                        dp.business_group,
                        dp.data_source,
                        dp.bom_num,
                        dp.work_num,
                        dp.specification,
                        dp.sm_comment,
                        TO_CHAR(dp.creation_date,'YYYY-MM-DD HH24:MI:SS') creation_date,
                        dp.created_by,
                        dp.last_update_date,
                        dp.last_updated_by,
                        dp.destination_organization_id,
                        ov.display_code AS organization_desc,
                        ov.business_unit_id,
                    --    (SELECT
                    --        bu.company_id
                    --    FROM
                    --        fnd_business_units bu
                    --    WHERE
                    --        bu.business_unit_id = ov.business_unit_id
                    --    ) AS 
                        ov.company_id company_id,
                        TO_CHAR(dp.need_by_date, 'yyyy-mm-dd') AS need_by_date,
                        dp.item_category_id,
                        (SELECT
                            pal.is_collected
                        FROM
                            pack_agreement_lines pal
                        WHERE
                            pal.eitf_line_id = dp.req_line_id
                        ) is_collected,
                        (SELECT
                            pal.expiration_date
                        FROM
                            pack_agreement_lines pal
                        WHERE
                            pal.eitf_line_id = dp.req_line_id
                        ) expiration_date,
                        (SELECT
                            udv.category_name
                        FROM
                            mtl_categories_user_defined_vl udv
                        WHERE
                            udv.category_udf_id = dp.item_category_id
                        ) AS item_category_desc,
                        NULL AS useless_id,
                        NVL(dp.ylz_delay_flag,'N') ylz_delay_flag
                    FROM
                        pur_demand_pool dp,
                       -- inv_organizations_vl ov
                       fnd_business_units ov,
                       mtl_system_items_vl msi
                    WHERE
                        ov.business_unit_id     = dp.org_id AND
                        msi.item_id = dp.item_id  AND
                        dp.business_group            = ${/session/@business_group} AND
                        NVL(dp.pause_flag,'N')       = 'N' AND
                        NVL(dp.ylz_delay_flag,'N')   = 'N' AND
                        NVL(dp.ylz_disable_flag,'N') = 'N' AND
                        NVL(dp.sourcing_flag, 'N')   = 'N' AND
                        (
                            NVL(dp.create_po_flag,'N')  = 'N' OR
                            NVL(dp.create_po_flag,'N')  = 'Y' AND
                            NVL(dp.po_release_flag,'Y') = 'Y'
                        )
                        AND
                        NVL(dp.delete_flag,'N') = 'N'
                        AND EXISTS (SELECT 'X'
                                     FROM cux_srm_blanket_authority csb,
                                          sys_user su 
                                    WHERE csb.category_id = msi.c_attribute10
                                      AND su.user_id = ${/session/@user_id}
                                      AND ((csb.business_unit_id = dp.org_id AND
                                          instr(csb.user_name_arr, su.user_name) > 0) OR
                                          (csb.business_unit_id = 0 AND
                                          instr(csb.user_name_arr, su.user_name) > 0)))
                        AND NOT EXISTS (SELECT 1 FROM pur_demand_pool_190708bk PDP
                            WHERE PDP.DEMAND_POOL_ID = DP.DEMAND_POOL_ID)
                    ) v #WHERE_CLAUSE#
                ORDER BY
                    1 DESC
            ]]></bm:query-sql>
            <!-- #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE# -->
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              BEGIN
                pur_demand_pool_pkg.pur_disable_ylz(
                        p_demand_pool_id=>${@demand_pool_id},
                        p_user_id        =>${/session/@user_id}
                        );
              END;
              ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:parameters>
                <bm:parameter name="feedback_rfx_number" input="false" output="true" outputPath="@feedback_rfx_number"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              BEGIN
                pur_demand_pool_pkg.submit_pur_rfx_temp(
                        p_rfx_header_id=>${@rfx_header_id},
                        x_rfx_number  =>${@feedback_rfx_number},
                        p_quotation_id  => ${@quotation_id},
                        p_quotation_title   => ${@quotation_title},
                        p_is_cen_pur    => ${@is_cen_pur},
                        p_session_id     =>${/session/@session_id},
                        p_user_id        =>${/session/@user_id}
                        );
              END;
              ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="assigned_flag" queryExpression="assigned_flag = ${@assigned_flag}"/>
        <bm:query-field name="req_number" queryExpression="req_number like &apos;%&apos;||${@req_number}||&apos;%&apos;"/>
        <bm:query-field name="business_unit_id" queryExpression="v.business_unit_id = ${@business_unit_id}"/>
        <bm:query-field name="item_category_id" queryExpression="v.item_category_id = ${@item_category_id}"/>
        <bm:query-field name="line_number" queryExpression="v.line_num like &apos;%&apos;||${@line_number}||&apos;%&apos;"/>
        <bm:query-field name="item_id" queryExpression="v.item_id = ${@item_id}"/>
        <bm:query-field name="data_source" queryExpression="v.data_source = ${@data_source}"/>
        <bm:query-field name="buyer_id" queryExpression="v.purchasing_agent_id = ${@buyer_id}"/>
        <bm:query-field name="item_desc" queryExpression="v.item_description like &apos;%&apos; || ${@item_desc} || &apos;%&apos;"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
    <authority foundation_code="PUR_REQUISITION">
        <authority-segment source_alias="v" source_name="useless_id" type="CREATER"/>
        <authority-segment source_alias="v" source_name="company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="assigned_to" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="purchasing_agent_id" type="PUR_BUYER"/>
        <authority-segment source_alias="v" source_name="destination_organization_id" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SALES_PRODUCTION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="item_category_id" type="ITEM_CATEGORY"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
