<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lianghuihao $  
    $Date: 2018年12月5日15:56:52 $  
    $Revision: 1.0 $ 
    $Purpose: 一揽子协议延期申请查詢BM $
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        yal.header_id,
                        yal.req_header_id,
                        yal.req_line_id,
                        yal.req_number,
                        yal.line_num,
                        yal.item_code,
                        yal.is_collected,
                        yal.organization_desc,
						nvl((select round(pl.tax_amount,4)
						  from pack_agreement_lines   pl,
						       pack_agreement_headers ph
						 where yal.req_line_id = pl.eitf_line_id
						   and ph.eitf_header_id = pl.eitf_header_id),yal.history_unit_price) history_unit_price,
						(select round(pl.no_tax_amount,4)
						  from pack_agreement_lines   pl,
						       pack_agreement_headers ph
						 where yal.req_line_id = pl.eitf_line_id
						   and ph.eitf_header_id = pl.eitf_header_id) untax_unit_price,
                        yal.quantity,
                        (SELECT
                            siv.item_name
                        FROM
                            mtl_system_items_vl siv
                        WHERE
                            siv.display_item_code = yal.item_code
                        ) AS item_description,
                        yal.unit_meas_lookup_code,
                        yal.currency_code,
                        yal.apply_reason,
                        TO_CHAR(yal.creation_date,'YYYY-MM-DD HH24:MI:SS') creation_date,
                        yal.line_id,
                        yal.suggested_vendor_name,
                        (select ph.vendor_name
						  from pack_agreement_lines   pl,
						       pack_agreement_headers ph
						 where yal.req_line_id = pl.eitf_line_id
						   and ph.eitf_header_id = pl.eitf_header_id) vendor_name
                    FROM
                        YLZ_DELAY_APPLY_LINES yal
                    WHERE
                        yal.header_id = ${@header_id}
                    ORDER BY
                        yal.line_num
                    ) v #WHERE_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="line_id" input="false" output="true"/>
            </bm:parameters>
            <bm:query-sql><![CDATA[
                BEGIN
                   ylz_delay_apply_pkg.insert_ylz_delay_apply_lines(x_line_id              =>                  ${@line_id},
                                                            p_header_id              =>                  ${/parameter/@header_id},
                                                            p_req_header_id              =>                  ${@req_header_id},
                                                            p_req_line_id              =>                  ${@req_line_id},
                                                            p_req_number              =>                  ${@req_number},
                                                            p_line_num              =>                  ${@line_num},
                                                            p_item_code              =>                  ${@item_code},
                                                            p_is_collected              =>                  ${@is_collected},
                                                            p_organization_desc              =>                  ${@organization_desc},
                                                            p_unit_meas_lookup_code              =>                  ${@unit_meas_lookup_code},
                                                            p_currency_code              =>                  ${@currency_code},
                                                            p_apply_reason               =>                  ${@apply_reason},
                                                            p_creation_date              =>                  to_date(${@creation_date},'YYYY-MM-DD HH24:MI:SS'),
                                                            p_history_unit_price         =>${@unit_price},
                                         					p_quantity                   => ${@quantity},
                                         					p_suggested_vendor_name	     =>${@suggested_vendor_name},
                                                            p_user_id                    => ${/session/@user_id});                         
                END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:query-sql><![CDATA[
                BEGIN
                   ylz_delay_apply_pkg.update_ylz_delay_apply_lines(p_line_id              =>                  ${@line_id},
                                                            p_apply_reason              =>                  ${@apply_reason},
                                                            p_user_id                   => ${/session/@user_id});                            
                END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:query-sql><![CDATA[
                BEGIN
                   ylz_delay_apply_pkg.delete_ylz_delay_apply_lines(p_line_id    => ${@line_id},
                                                                    p_user_id    => ${/session/@user_id});                            
                END;
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
