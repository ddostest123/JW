<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" defaultOrderBy="t1.line_num,t1.shipment_num">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
	           SELECT t1.*,rownum rn
					  FROM (SELECT pla.pur_header_id,
					               pla.pur_line_id,
					               pll.pur_line_location_id,
					               pla.line_num,
					               pll.shipment_num,
					               pla.item_id,
					               pla.item_code,
					               pla.item_description,
					               fnd_document_control_pkg.get_reality_value(p_rule_code       => 'PRICE_SECRECY',
					                                                          p_role_id         => ${/session/@role_id},
					                                                          p_foundation_code => 'PUR_PO',
					                                                          p_document_id     => pha.pur_header_id,
					                                                          p_control_area    => 'EXTERNAL',
					                                                          p_business_group  => ${/session/@business_group},
					                                                          p_value           => pla.original_unit_price) unit_price,
					               fnd_document_control_pkg.get_reality_value(p_rule_code       => 'PRICE_SECRECY',
					                                                          p_role_id         => ${/session/@role_id},
					                                                          p_foundation_code => 'PUR_PO',
					                                                          p_document_id     => pha.pur_header_id,
					                                                          p_control_area    => 'EXTERNAL',
					                                                          p_business_group  => ${/session/@business_group},
					                                                          p_value           => pll.quantity * pla.original_unit_price) line_amount,
					               pll.quantity,
					               pla.unit_meas_lookup_code,
					               to_char(pll.need_by_date,
					                       'YYYY-MM-DD') need_by_date,
					               nvl(decode(pha.type_lookup_code,'ZTH','Y',''),' ') return_flag,
					               nvl(nvl(pla.ean_code,
					                   (SELECT msi.used_item_code FROM mtl_system_items msi WHERE msi.item_id = pla.item_id)),' ') ean_code,
					               decode(pla.is_returned_flag,'N',' ',pla.is_returned_flag) is_returned_flag
					          FROM pur_headers_all        pha,
					               pur_lines_all          pla,
					               pur_line_locations_all pll
					         WHERE pla.pur_line_id = pll.pur_line_id
					               AND pha.pur_header_id = pla.pur_header_id
					               AND pha.cancel_flag   = 'N'
					               AND pla.cancel_flag   = 'N'
					               AND pll.cancel_flag   = 'N'
					               AND pll.frozen_flag   = 'N'
					               order by pla.line_num asc) t1
                             #WHERE_CLAUSE#
                             order by to_number(t1.line_num)
        ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter name="pur_header_id" expression="t1.pur_header_id=${@pur_header_id}"/>
    </bm:data-filters>
</bm:model>
