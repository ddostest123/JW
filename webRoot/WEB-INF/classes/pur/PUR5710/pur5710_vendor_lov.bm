<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT DISTINCT
                        fcp.coop_business_group,
                        fcp.coop_company_id,
                        (SELECT
                            f.supplier_id
                        FROM
                            fnd_com_sup_infos f
                        WHERE
                            f.company_id = fcv.company_id
                        ) supplier_id,
                        fcp.coop_company_id vendor_id,
                        fcv.company_code vendor_code,
                        fcv.company_full_name vendor_name
                    FROM
                        fnd_cooperative_partners fcp,
                        fnd_companies_vl fcv
                    WHERE
                        fcp.owner_business_group = ${/session/@business_group} AND
                        fcp.coop_company_id      = fcv.company_id AND
                        fcp.vendor_flag          = 'Y' AND
                        fcp.enabled_flag         = 'Y'
                    ) t1  #WHERE_CLAUSE# 
                ORDER BY
                    vendor_code
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="coop_business_group"/>
        <bm:field name="coop_company_id"/>
        <bm:field name="supplier_id"/>
        <bm:field name="vendor_id"/>
        <bm:field name="vendor_code" displayWidth="150" forDisplay="true" forQuery="true" prompt="PUR_VENDORS.VENDOR_CODE"/>
        <bm:field name="vendor_name" displayWidth="300" forDisplay="true" forQuery="true" prompt="PUR_VENDORS.VENDOR_NAME"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field name="vendor_id" queryExpression="t1.vendor_id = ${@vendor_id} "/>
        <bm:query-field name="vendor_code" queryExpression="upper(t1.vendor_code) like &apos;%&apos;||upper(${@vendor_code})||&apos;%&apos;"/>
        <bm:query-field name="vendor_name" queryExpression="upper(t1.vendor_name) like &apos;%&apos;||upper(${@vendor_name})||&apos;%&apos;"/>
        <bm:query-field name="vendor_code_name" queryExpression="(upper(t1.vendor_code) like &apos;%&apos;||upper(${@vendor_code_name})||&apos;%&apos; or upper(t1.vendor_name) like &apos;%&apos;||upper(${@vendor_code_name})||&apos;%&apos;)"/>
        <bm:query-field name="coop_flag" queryExpression="${@coop_flag} = &apos;Y&apos; and exists (select 1 from fnd_cooperative_partners fps where fps.owner_business_group = ${/session/@business_group} and fps.coop_business_group = t1.coop_business_group and fps.coop_company_id = t1.coop_company_id)"/>
        <bm:query-field name="life_flag" queryExpression="${@life_flag} = &apos;Y&apos; and exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code != &apos;ELIMINATED&apos; and pvlc.current_flag = &apos;Y&apos;)"/>
        <bm:query-field name="recommend_flag" queryExpression="${@recommend_flag} = &apos;Y&apos; and (exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code = &apos;REGISTER&apos; and pvlc.authorize_flag != &apos;Y&apos; and pvlc.current_flag = &apos;Y&apos;))"/>
        <bm:query-field name="potential_flag" queryExpression="${@potential_flag} = &apos;Y&apos; and (exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code = &apos;RECOMMEND&apos; and pvlc.authorize_flag != &apos;Y&apos; and pvlc.current_flag = &apos;Y&apos;) and exists (select 1 from pur_supply_ability_hds psah, pur_supply_ability_lns psal, mtl_categories_user_defined mcud where psah.ability_hds_id = psal.ability_hds_id and psah.vendor_id = t1.coop_company_id and psal.supply_flag = &apos;Y&apos; and psal.category_udf_id = mcud.category_udf_id and mcud.introduction_request = &apos;STRICT&apos;))"/>
        <bm:query-field name="qualified_flag" queryExpression="${@qualified_flag} = &apos;Y&apos; and (exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code = &apos;REGISTER&apos; and pvlc.authorize_flag = &apos;Y&apos; and pvlc.current_flag = &apos;Y&apos;) or (exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code = &apos;RECOMMEND&apos; and pvlc.current_flag = &apos;Y&apos;) and not exists (select 1 from pur_supply_ability_hds psah, pur_supply_ability_lns psal, mtl_categories_user_defined mcud where psah.ability_hds_id = psal.ability_hds_id and psah.vendor_id = t1.coop_company_id and psal.supply_flag = &apos;Y&apos;  and psal.category_udf_id = mcud.category_udf_id and mcud.introduction_request = &apos;STRICT&apos;)) or exists (select 1 from pur_vendor_life_cycle pvlc where pvlc.owner_business_group = ${/session/@business_group} and pvlc.coop_business_group = t1.coop_business_group and pvlc.coop_company_id = t1.coop_company_id and pvlc.stage_code = &apos;POTENTIAL&apos; and pvlc.current_flag = &apos;Y&apos;))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
    <authority only_user_authority="Y">
        <authority-segment source_alias="t1" source_name="coop_company_id" type="VENDOR"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
