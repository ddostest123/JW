<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Leah  
    $Date: 2015-3-18 下午03:04:54  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" baseTable="con_contract_lines_new" defaultOrderBy="t1.contract_header_id, to_number(t1.line_num) asc" needAccessControl="false">
    <bm:fields>
        <bm:field name="contract_line_id"/>
        <bm:field name="contract_header_id"/>
        <bm:field name="item_id"/>
        <bm:field name="item_code"/>
        <bm:field name="item_desc"/>
        <bm:field name="model"/>
        <bm:field name="service_include"/>
        <bm:field name="fare_include"/>
        <bm:field name="ref_doc_num"/>
        <bm:field name="quantity"/>
        <bm:field name="unit_meas_lookup_code"/>
        <bm:field name="unit_price" datatype="double"/>
        <bm:field name="tax_rate"/>
        <bm:field name="line_amount" datatype="double" expression="round(t1.quantity*t1.unit_price,4)"/>
        <bm:field name="line_comment"/>
        <bm:field name="warranty"/>
        <bm:field name="source_ref_id"/>
        <bm:field name="source_ref_type"/>
        <bm:field name="tax_rate_desc" expression="(select t.tax_type_rate||&apos;%&apos; from fnd_tax_type_codes_vl t where t.enabled_flag = &apos;Y&apos; and t.tax_type_id = t1.tax_rate)" forDisplay="true" forInsert="false" forUpdate="false"/>
        <bm:field name="line_num"/>
        <bm:field name="remain_qty" expression="con_contract_pkg.get_contract_remain_qty(t1.source_ref_id,t1.contract_line_id,t1.source_ref_type,(select vendor_id from con_contract_headers_new where contract_header_id=t1.contract_header_id))" forDisplay="true" forInsert="false" forUpdate="false"/>
        <!-- <bm:field name="sales_order_num" expression="decode(t1.source_ref_type,&apos;PUR_REQ&apos;,(select l.sales_order_num || &apos;|&apos; || l.sales_order_line_num as sales_order_num   from pur_lines_all l  where l.pur_line_id = t1.source_ref_id ))" forDisplay="true" forInsert="false" forUpdate="false"/>
         -->
        <bm:field name="deliver_date" expression="to_char(nvl(t1.deliver_date,(select l.promised_date from pur_line_locations_all l where l.pur_line_id=t1.source_ref_id and rownum=1)),&apos;YYYY-MM-DD&apos;)" forDisplay="true" forInsert="true" forQuery="true" forUpdate="true" insertExpression="to_date(${@deliver_date},&apos;YYYY-MM-DD&apos;)" updateExpression="to_date(${@deliver_date},&apos;YYYY-MM-DD&apos;)"/>
        <bm:field name="production_place"/>
        <bm:field name="quantity_required" expression="decode(t1.source_ref_type,&apos;PUR_REQ&apos;,(select pdl.quantity from pur_demand_pool pdl where pdl.demand_pool_id=t1.source_ref_id),&apos;PUR_ORDER&apos;,(select pla.quantity from pur_lines_all pla where pla.pur_line_id=t1.source_ref_id))" forDisplay="true" forInsert="false" forUpdate="false"/>
        <bm:field name="pur_num_line" expression="(select pha.display_po_number||&apos; | &apos;||pla.line_num from pur_headers_all pha,pur_lines_all pla where pha.pur_header_id = pla.pur_header_id and pla.pur_line_id = t1.source_ref_id and pha.owner_business_group = ${/session/@business_group})" forDisplay="true" forInsert="false" forUpdate="false"/>
        <bm:field name="pur_req_num_line" expression="con_contract_pkg.get_pur_req_num_line(t1.source_ref_id,(select vendor_id from con_contract_headers_new where contract_header_id=t1.contract_header_id))" forDisplay="true" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk sequenceName="con_contract_lines_new_s"/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="contract_line_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field name="contract_header_id" queryExpression="t1.contract_header_id=${@contract_header_id}"/>
    </bm:query-fields>
    <bm:operations>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="contract_line_id" input="true" inputPath="@contract_line_id" output="true" outputPath="@contract_line_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                BEGIN
  con_contract_pkg.save_contract_line(p_contract_line_id      => ${@contract_line_id},
                                      p_contract_header_id    => ${@contract_header_id},
                                      p_item_id               => ${@item_id},
                                      p_item_code             => ${@item_code},
                                      p_item_desc             => ${@item_desc},
                                      p_model                 => ${@model},
                                      p_service_include       => ${@service_include},
                                      p_fare_include          => ${@fare_include},
                                      p_ref_doc_num           => ${@ref_doc_num},
                                      p_quantity              => ${@quantity},
                                      p_unit_meas_lookup_code => ${@unit_meas_lookup_code},
                                      p_unit_price            => ${@unit_price},
                                      p_tax_rate              => ${@tax_rate},
                                      p_line_comment          => ${@line_comment},
                                      p_warranty              => ${@warranty},
                                      p_source_ref_id         => ${@source_ref_id},
                                      p_source_ref_type       => ${@source_ref_type},
                                      p_line_num              => ${@line_num},
                                      p_deliver_date          => to_date(${@deliver_date},
                                                                         'YYYY-MM-DD'),
                                      p_ref_doc_line_num      => ${@ref_doc_line_num},
                                      p_production_place      => ${@production_place},
                                      p_data_source           => ${@data_source},
                                      p_user_id               => ${/session/@user_id});
END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:parameters>
                <bm:parameter name="contract_line_id" input="true" inputPath="@contract_line_id" output="true" outputPath="@contract_line_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                BEGIN
  con_contract_pkg.save_contract_line(p_contract_line_id      => ${@contract_line_id},
                                      p_contract_header_id    => ${@contract_header_id},
                                      p_item_id               => ${@item_id},
                                      p_item_code             => ${@item_code},
                                      p_item_desc             => ${@item_desc},
                                      p_model                 => ${@model},
                                      p_service_include       => ${@service_include},
                                      p_fare_include          => ${@fare_include},
                                      p_ref_doc_num           => ${@ref_doc_num},
                                      p_quantity              => ${@quantity},
                                      p_unit_meas_lookup_code => ${@unit_meas_lookup_code},
                                      p_unit_price            => ${@unit_price},
                                      p_tax_rate              => ${@tax_rate},
                                      p_line_comment          => ${@line_comment},
                                      p_warranty              => ${@warranty},
                                      p_source_ref_id         => ${@source_ref_id},
                                      p_source_ref_type       => ${@source_ref_type},
                                      p_line_num              => ${@line_num},
                                      p_deliver_date          => to_date(${@deliver_date},
                                                                         'YYYY-MM-DD'),
                                      p_ref_doc_line_num      => ${@ref_doc_line_num},
                                      p_production_place      => ${@production_place},
                                      p_data_source           => ${@data_source},
                                      p_user_id               => ${/session/@user_id});
END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
                DECLARE
                    v_created_num NUMBER;
                BEGIN
                    FOR c_con_l IN
                    (SELECT
                        t.*
                    FROM
                        con_contract_lines_new t
                    WHERE
                        t.contract_line_id = ${@contract_line_id} AND
                        t.source_ref_type  = 'PUR_REQ'
                    )
                    LOOP
                        SELECT
                            NVL(
                            (SELECT
                                SUM(ccl.quantity)
                            FROM
                                con_contract_lines_new ccl,
                                con_contract_headers_new cch
                            WHERE
                                ccl.source_ref_id      = t.demand_pool_id AND
                                cch.contract_header_id = ccl.contract_header_id AND
                                cch.contract_header_id = c_con_l.contract_header_id AND
                                cch.status            <> 'CANCELED' AND
                                ccl.contract_line_id  <> c_con_l.contract_line_id
                            ), 0)
                        INTO
                            v_created_num
                        FROM
                            pur_demand_pool t
                        WHERE
                            t.demand_pool_id = c_con_l.source_ref_id;
                        IF v_created_num     = 0 THEN
                            UPDATE
                                pur_demand_pool t
                            SET
                                t.sourcing_flag = 'N'
                            WHERE
                                t.demand_pool_id = c_con_l.source_ref_id AND
                                (
                                    t.req_status <>'FINISHED' OR
                                    t.req_status IS NULL
                                );
                        END IF;
                    END LOOP;
                    DELETE
                    FROM
                        con_contract_lines_new t
                    WHERE
                        t.contract_line_id = ${@contract_line_id};
                EXCEPTION
                WHEN OTHERS THEN
                    NULL;
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                BEGIN
  con_contract_pkg.save_contract_line(p_contract_line_id      => ${@contract_line_id},
                                      p_contract_header_id    => ${@contract_header_id},
                                      p_item_desc             => ${@item_desc},
                                      p_model                 => ${@model},
                                      p_service_include       => ${@service_include},
                                      p_fare_include          => ${@fare_include},
                                      p_quantity              => ${@quantity},
                                      p_unit_price            => ${@unit_price},
                                      p_tax_rate              => ${@tax_rate},
                                      p_line_comment          => ${@line_comment},
                                      p_line_num              => ${@line_num},
                                      p_deliver_date          => to_date(${@deliver_date},
                                                                         'YYYY-MM-DD'),
                                      p_production_place      => ${@production_place},
                                      p_user_id               => ${/session/@user_id});
END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
