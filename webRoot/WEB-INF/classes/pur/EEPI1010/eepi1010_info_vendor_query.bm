<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:fields>
        <bm:field name="ep_info_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="approval_status" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="attachment_type" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="item_no" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="vendor_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="vendor_code" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="vendor_name" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="supplier_mode" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="device_name" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="part_name" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="report_test_date" databaseType="DATE" datatype="java.util.Date"/>
        <bm:field name="report_valid_date_to" databaseType="DATE" datatype="java.util.Date"/>
        <bm:field name="attachment" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="report_test_date_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="report_valid_date_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="homogenous_item_upload" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="line_test_date_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="line_valid_date_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="expire_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="submit_date" databaseType="DATE" datatype="java.util.Date"/>
        <bm:field name="submit_by" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="submit_by_desc" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="approve_date" databaseType="DATE" datatype="java.util.Date"/>
        <bm:field name="approve_by" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="approve_by_desc" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="suppliers_comments" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="approval_opinions" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="creation_date" databaseType="DATE" datatype="java.util.Date"/>
        <bm:field name="created_by" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="last_update_date" databaseType="DATE" datatype="java.util.Date"/>
         <bm:field name="att_count" databaseType="NUMBER" datatype="java.lang.String"/>
        <bm:field name="last_updated_by" databaseType="NUMBER" datatype="java.lang.String"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT * 
                     from 
                    (SELECT a.ep_info_id,
					       a.approval_status,
					       a.attachment_type,
					       a.item_no ,
					       a.supplier_mode,
					       a.device_name,
					       a.part_name,
					       a.report_test_date,
					       a.report_valid_date_to,
					       a.vendor_id,
					       a.vendor_code,
					       a.vendor_name,
					          ( SELECT COUNT(*)
             FROM fnd_atm_attachment_multi m
         WHERE m.table_pk_value = to_char(a.ep_info_id)
               AND m.table_name LIKE 'EPDATA_INFO_HEADER%') att_count,
					       'N' as flag,
					       a.attachment,
					       (select count(*) from epdata_info_lines l where l.ep_info_id=a.ep_info_id) as v_count,
					       a.submit_by,
					        (SELECT fvv.flex_desc 
				                  FROM fnd_flex_values_v fvv
				                 WHERE fvv.flex_value_set_code = 'APPROVAL_STATUS'
				                       AND fvv.flex_value = a.approval_status) approval_status_desc,
					     epdata_headers_pkg.get_expire_status(  p_ep_info_id =>a.ep_info_id,p_user_id    =>null) as expire_flag,
					       a.submit_date,
					       (SELECT su.description || '(' || su.user_name || ')' FROM sys_user su WHERE su.user_id = a.submit_by) submit_by_desc,
					       a.suppliers_comments,
					       a.approval_opinions,
					       a.approve_by,
					       a.approve_date,
					       (SELECT su.description || '(' || su.user_name || ')' FROM sys_user su WHERE su.user_id = a.approve_by) approve_by_desc,
					       h.homogenous_item_upload,
					       h.line_valid_date_flag,
					       h.line_test_date_flag,
					       h.report_valid_date_flag,
                           h.report_test_date_flag,
					       a.creation_date,
					       a.created_by,
					       a.last_update_date,
					       a.last_updated_by
					  FROM epdata_info_headers a,
					        epdata_type_headers h
					        
                  where h.data_type_code=a.attachment_type
                          and a.vendor_id in (SELECT pv.vendor_id
										           FROM sys_user    a,
										                pur_vendors pv
										          WHERE a.business_group = pv.coop_business_group
										                AND a.user_id=${/session/@user_id})
                 
					  order by a.submit_date desc) v
			              #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="ep_info_id" dataType="java.lang.Long" input="false" output="true" outputPath="/parameter/@ep_info_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              BEGIN
                epdata_headers_pkg.create_epdata_info_headers
                (
                   o_ep_info_id=>${@ep_info_id},
                  p_approval_status=>${@approval_status},
                  p_attachment_type=>${@attachment_type},
                  p_item_no=>${@item_no},
                  p_supplier_mode=>${@supplier_mode},
                  p_device_name=>${@device_name},
                  p_part_name=>${@part_name},
                  p_report_test_date=>${@report_test_date},
                  p_report_valid_date_to=>${@report_valid_date_to},
                  p_attachment=>${@attachment},
                  p_submit_date=>${@submit_date},
                  p_suppliers_comments=>${@suppliers_comments},
                  p_approval_opinions=>${@approval_opinions},
                  p_vendor_id=>${@vendor_id},
                  p_vendor_code=>${@vendor_code},
                  p_vendor_name=>${@vendor_name},
                  p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              BEGIN
                epdata_headers_pkg.modify_epdata_info_headers
                (
                  p_ep_info_id=>${@ep_info_id},
                  p_approval_status=>${@approval_status},
                  p_attachment_type=>${@attachment_type},
                  p_item_no=>${@item_no},
                  p_supplier_mode=>${@supplier_mode},
                  p_device_name=>${@device_name},
                  p_part_name=>${@part_name},
                  p_report_test_date=>${@report_test_date},
                  p_report_valid_date_to=>${@report_valid_date_to},
                  p_attachment=>${@attachment},
                  p_submit_date=>${@submit_date},
                  p_suppliers_comments=>${@suppliers_comments},
                  p_approval_opinions=>${@approval_opinions},
                  p_vendor_id=>${@vendor_id},
                  p_vendor_code=>${@vendor_code},
                  p_vendor_name=>${@vendor_name},
                  p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
              BEGIN
                epdata_headers_pkg.delete_epdata_info_headers
                (
                  p_ep_info_id=>${@ep_info_id},
                  p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="ep_info_id" queryExpression="v.ep_info_id in (${:@ep_info_id})"/>
        <bm:query-field name="item_no" queryExpression="v.item_no like &apos;%&apos;||trim(${@item_no})||&apos;%&apos;"/>
        <bm:query-field name="supplier_mode" queryExpression="v.supplier_mode like &apos;%&apos;||trim(${@supplier_mode})||&apos;%&apos;"/>
        <bm:query-field name="device_name" queryExpression="v.device_name like &apos;%&apos;||trim(${@device_name})||&apos;%&apos;"/>
        <bm:query-field name="report_valid_date_to" queryExpression="trunc(v.report_valid_date_to) &lt;= to_date(${@report_valid_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="report_valid_date_to_to" queryExpression="trunc(v.report_valid_date_to) &gt;= to_date(${@report_valid_date_to_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="report_valid_date_to_from" queryExpression="trunc(v.report_valid_date_to) &lt;= to_date(${@report_valid_date_to_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="expire_flag" queryExpression="v.expire_flag in (SELECT REGEXP_SUBSTR (${@expire_flag}, &apos;[^,]+&apos;, 1,rownum) as expire_flag from dual connect by rownum &lt;= LENGTH (${@expire_flag}) - LENGTH (regexp_replace(${@expire_flag},&apos;,&apos;, &apos;&apos;))+1)"/>
        <bm:query-field name="vendor_code" queryExpression="v.vendor_code like &apos;%&apos;||trim(${@vendor_code})||&apos;%&apos;"/>
        <bm:query-field name="vendor_name" queryExpression="v.vendor_name like &apos;%&apos;||trim(${@vendor_name})||&apos;%&apos;"/>
        <bm:query-field name="approval_status_desc" queryExpression="v.approval_status_desc =${@approval_status_desc}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
</bm:model>
