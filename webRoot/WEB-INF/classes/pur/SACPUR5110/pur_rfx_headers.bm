<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-26 下午7:45:48  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    rfx_header_id,
                    rfx_number,
                    rh.owner_business_group,
                    rh.owner_company_id,
                    rh.owner_company_id company_id,
                    rh.owner_business_unit_id,
                    (SELECT
                        bu.business_unit_name
                    FROM
                        fnd_business_units_vl bu
                    WHERE
                        bu.business_unit_id = rh.owner_business_unit_id
                    ) business_unit_name,
                    status,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.status AND
                        sc.code        = 'PUR_RFX_STATUS'
                    ) status_desc,
                    rh.rfx_type_id,
                    rh.rfx_category,
                    (SELECT
                        p.rfx_type_desc
                    FROM
                        pur_bg_rfx_types_vl p
                    WHERE
                        p.RFX_TYPE_ID = rh.rfx_type_id
                    ) rfx_type_desc,
                    title,
                    rfx_method,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.rfx_method AND
                        sc.code        = 'PUR_RFX_METHOD'
                    ) rfx_method_desc,
                    auction_direction,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_direction AND
                        sc.code        = 'PUR_RFX_AUCTION_DIRECTION'
                    ) auction_direction_desc,
                    auction_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_rule AND
                        sc.code        = 'PUR_RFX_AUCTION_RULE'
                    ) auction_rule_desc,
                    open_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.open_rule AND
                        sc.code        = 'PUR_RFX_OPEN_RULE'
                    ) open_rule_desc,
                    ranking_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.ranking_rule AND
                        sc.code        = 'PUR_RFX_RANKING_RULE'
                    ) ranking_rule_desc,
                    auction_ranking,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_ranking AND
                        sc.code        = 'PUR_RFX_AUCTION_RANKING'
                    ) auction_ranking_desc,
                    payment_method_id,
                    (SELECT
                        pm.description
                    FROM
                        csh_payment_methods_vl pm
                    WHERE
                        pm.payment_method_id = rh.payment_method_id
                    ) payment_method_desc,
                    currency_code,
                    (SELECT
                        gc.currency_name
                    FROM
                        gld_currency_vl gc
                    WHERE
                        gc.currency_code = rh.currency_code
                    ) currency_desc,
                    'CNY' functional_currency_code,
                    exchange_rate,
                    tax_included_flag,
                    tax_type_id,
                    tax_type_code,
                    (SELECT
                        ttc.description
                    FROM
                        fnd_tax_type_codes_vl ttc
                    WHERE
                        ttc.tax_type_id = rh.tax_type_id
                    ) tax_type_desc,
                    tax_type_rate,
                    place_of_delivery,
                    issued_date,
                    TO_CHAR(issued_date, 'yyyy-mm-dd') issued_date_desc,
                    ROUND,
                    version,
                    TO_CHAR(rh.feedback_start_time, 'yyyy-mm-dd hh24:mi:ss') feedback_start_time,
                    TO_CHAR(rh.feedback_end_time, 'yyyy-mm-dd hh24:mi:ss') feedback_end_time,
                    terminated_time,
                    terminated_reason,
                    template_id,
                    (SELECT
                        ft.template_desc
                    FROM
                        fnd_flex_templates_vl ft
                    WHERE
                        ft.template_id = rh.template_id
                    ) template_desc,
                    cancel_flag,
                    closed_flag,
                    rh.data_source,
                    source_from,
                    comments,
                    flex_appl_relevance_id,
                    rh.creation_date,
                    TO_CHAR(rh.creation_date, 'yyyy-mm-dd hh24:mi:ss') creation_date_desc,
                    rh.created_by,
                    (SELECT u.description FROM sys_user u WHERE u.user_id = rh.created_by
                    ) created_by_desc,
                    rh.tax_included_flag,
                    (SELECT
                        s.code_value_name
                    FROM
                        sys_code_values_v s
                    WHERE
                        s.code       = 'YES_OR_NO' AND
                        s.code_value = NVL(rh.tax_included_flag,'N')
                    ) tax_included_flag_desc,
                    rh.sealed_bid_flag,
                    (SELECT
                        s.code_value_name
                    FROM
                        sys_code_values_v s
                    WHERE
                        s.code       = 'YES_OR_NO' AND
                        s.code_value = NVL(rh.sealed_bid_flag,'N')
                    ) sealed_bid_flag_desc,
                    TO_CHAR(rh.sealing_cutoff_date, 'yyyy-mm-dd hh24:mi:ss') sealing_cutoff_date,
                    rh.pur_organization_id,
                    pov.pur_organization_code,
                    pov.description AS pur_organization_name,
                    rh.prequal_flag,
                    TO_CHAR(
                    (SELECT
                        bph.closing_date
                    FROM
                        bid_prequal_headers bph
                    WHERE
                        bph.entrustment_header_id = -rh.rfx_header_id
                    ), 'yyyy-mm-dd hh24:mi:ss') prequal_closing_date,
                    (
                        CASE
                            WHEN
                                (SELECT
                                        bph.closing_date
                                    FROM
                                        bid_prequal_headers bph
                                    WHERE
                                        bph.entrustment_header_id = -rh.rfx_header_id
                                )
                                IS NULL
                            THEN 'Y'
                            WHEN
                                (SELECT
                                        sysdate - bph.closing_date
                                    FROM
                                        bid_prequal_headers bph
                                    WHERE
                                        bph.entrustment_header_id = -rh.rfx_header_id
                                )
                                > 0
                            THEN 'Y'
                            WHEN
                                (SELECT
                                        sysdate - bph.closing_date
                                    FROM
                                        bid_prequal_headers bph
                                    WHERE
                                        bph.entrustment_header_id = -rh.rfx_header_id
                                )
                                < 0
                            THEN 'N'
                        END) closedate_readonly_flag
                FROM
                    pur_rfx_headers rh,
                    pur_organizations_vl pov
                WHERE
                    1                      =1 AND
                    rh.pur_organization_id = pov.pur_organization_id(+) AND
                    rh.rfx_header_id       = ${/parameter/@rfx_header_id}
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="rfx_header_id" dataType="java.lang.Long" input="false" output="true" outputPath="/parameter/@rfx_header_id"/>
                <bm:parameter name="rfx_number" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@rfx_number"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              BEGIN
                pur_rfx_pkg.create_pur_rfx_headers
                (
                  x_rfx_header_id=>${@rfx_header_id},
                  x_rfx_number=>${@rfx_number},
                  p_company_id=>${@company_id},
                  p_status=>${@status},
                  p_rfx_category=>${@rfx_category},
                  p_rfx_type_id=>${@rfx_type_id},
                  p_title=>${@title},
                  p_rfx_method=>${@rfx_method},
                  p_auction_direction=>${@auction_direction},
                  p_auction_rule=>${@auction_rule},
                  p_open_rule=>${@open_rule},
                  p_ranking_rule=>${@ranking_rule},
                  p_auction_ranking=>${@auction_ranking},
                  p_payment_method_id=>${@payment_method_id},
                  p_currency_code=>${@currency_code},
                  p_exchange_rate=>${@exchange_rate},
                  p_tax_included_flag=>${@tax_included_flag},
                  p_tax_type_id=>${@tax_type_id},
                  p_tax_type_code=>${@tax_type_code},
                  p_tax_type_rate=>${@tax_type_rate},
                  p_place_of_delivery=>${@place_of_delivery},
                  p_round=>${@round},
                  p_version=>${@version},
                  p_feedback_start_time=>to_date(${@feedback_start_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_feedback_end_time=>to_date(${@feedback_end_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_template_id=>${@template_id},
                  p_data_source=>${@data_source},
                  p_data_source_id=>${@data_source_id},
                  p_data_source_code=>${@data_source_code},
                  p_data_source_name=>${@data_source_name},
                  p_comments=>${@comments},
                  p_pur_organization_id=> ${@pur_organization_id},
                  p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              BEGIN
                pur_rfx_pkg.modify_pur_rfx_headers
                (
                  p_rfx_header_id=>${@rfx_header_id},
                  
                  p_rfx_type_id=>${@rfx_type_id},
                  p_title=>${@title},
                  p_rfx_method=>${@rfx_method},
                  p_auction_direction=>${@auction_direction},
                  p_auction_rule=>${@auction_rule},
                  p_open_rule=>${@open_rule},
                  p_ranking_rule=>${@ranking_rule},
                  p_auction_ranking=>${@auction_ranking},
                  p_payment_method_id=>${@payment_method_id},
                  p_currency_code=>${@currency_code},
                  p_exchange_rate=>${@exchange_rate},
                  p_tax_included_flag=>${@tax_included_flag},
                  p_tax_type_id=>${@tax_type_id},
                  p_tax_type_code=>${@tax_type_code},
                  p_tax_type_rate=>${@tax_type_rate},
                  p_place_of_delivery=>${@place_of_delivery},
                  p_feedback_start_time=>to_date(${@feedback_start_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_feedback_end_time=>to_date(${@feedback_end_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_template_id=>${@template_id},
                  p_comments=>${@comments},
                  p_pur_organization_id=>${@pur_organization_id},
                  p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
