<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangcheng  
    $Date: 2015-6-14 13:13:34  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                select *
				  from (select dp.demand_pool_id,
				               dp.req_header_id,
				               nvl(dp.es_req_number, dp.req_number) as pur_req_number,
				               dp.enabled_flag,
				               dp.authorization_status,
				               dp.type_lookup_code,
				               dp.cancel_flag,
				               dp.closed_code,
				               dp.org_id,
				               dp.org_code,
				               dp.approved_flag,
				               dp.approved_date,
				               dp.revision_num,
				               dp.req_line_id,
				               (select to_char(need_by_date, 'yyyy-mm-dd') as need_by_date
				                  from pur_req_lines
				                 where req_line_id = dp.req_line_id) as need_by_date,
				               (select need_by_date as need_by_date
				                  from pur_req_lines
				                 where req_line_id = dp.req_line_id) as need_by_date_value,
				               (select unit_meas_lookup_code
				                  from pur_req_lines
				                 where req_line_id = dp.req_line_id) as unit_meas_lookup_code,
				               (select unit_meas_lookup_code
				                  from pur_req_lines
				                 where req_line_id = dp.req_line_id) as uom_desc,
				               (select m.category_name
				                  from pur_req_lines                  l,
				                       mtl_categories_user_defined_vl m
				                 where req_line_id = dp.req_line_id
				                   and l.item_category_id = m.category_udf_id) as item_category_name,
				               dp.line_num pur_req_line,
				               dp.line_type_id,
				               dp.line_type_code,
				               dp.item_id,
				               nvl((select siv.display_item_code
				                     from mtl_system_items_vl siv
				                    where siv.item_id = dp.item_id),
				                   dp.item_code) as item_code,
				               dp.item_revision,
				               nvl((select siv.item_name
				                     from mtl_system_items_vl siv
				                    where siv.item_id = dp.item_id),
				                   dp.item_description) as item_desc,
				               --dp.unit_meas_lookup_code,
				               dp.unit_price,
				               (case unit_price
				                 when 0 then
				                  'Y'
				                 else
				                  'N'
				               end) as zero_flag,
				               dp.quantity,
				               dp.delivery_date,
				               dp.deliver_to_location_id,
				               dp.deliver_to_location_code,
				               --dp.need_by_date,
				               dp.line_location_id,
				               dp.line_location_num,
				               dp.purchasing_agent_id,
				               dp.purchasing_agent_code,
				               nvl(dp.currency_code, 'CNY') currency_code,
				               nvl((select g.currency_name
				                      from gld_currency_vl g
				                     where g.currency_code = dp.currency_code), '人民币') currency_desc,
				               dp.rate_type,
				               dp.rate_date,
				               dp.rate,
				               dp.currency_unit_price,
				               dp.suggested_vendor_name,
				               dp.must_use_sugg_vendor_flag,
				               dp.line_cancel_flag,
				               dp.source_organization_id,
				               dp.source_subinventory,
				               dp.cancel_reason,
				               dp.line_closed_code,
				               dp.sourcing_flag,
				               dp.sourcing_doc_number,
				               dp.sourcing_type,
				               dp.pause_comment,
				               (select scv.code_value_name
				                  from sys_code_values_vl scv, sys_codes_vl sc
				                 where sc.code_id = scv.code_id
				                   and scv.code_value = dp.sourcing_type
				                   and sc.code = 'PUR_DEMAND_POOL_TYPE') sourcing_type_desc,
				               dp.req_status,
				               (select scv.code_value_name
				                  from sys_code_values_vl scv, sys_codes_vl sc
				                 where sc.code_id = scv.code_id
				                   and scv.code_value = dp.req_status
				                   and sc.code = 'PUR_DEMAND_POOL_STATUS') req_status_desc,
				               nvl(dp.assigned_flag, 'N') as assigned_flag,
				               nvl(dp.pause_flag, 'N') as pause_flag,
				               (case
				                 when dp.assigned_flag = 'Y' then
				                  '已分配'
				                 else
				                  '未分配'
				               end) as assign_status,
				               dp.assigned_by,
				               dp.assigned_date,
				               dp.assigned_to,
				               (select su.description
				                  from sys_user su
				                 where su.user_id = ${/session/@user_id}) created_by_desc,
				               to_char(sysdate, 'yyyy-mm-dd') creation_date_desc,
				               dp.business_group,
				               dp.data_source,
				               dp.creation_date,
				               dp.created_by,
				               dp.last_update_date,
				               dp.last_updated_by,
				               (select fc.company_full_name
				                  from fnd_companies_vl fc
				                 where exists(select 1
				                  from inv_organizations_vl ov, fnd_business_units bu
				                 where ov.inv_organization_id =
				                       dp.destination_organization_id
				                       and ov.business_unit_id = bu.business_unit_id
				                       and bu.company_id = fc.company_id)) as company_name,
				               (select ov.business_unit_id
				                  from inv_organizations_vl ov
				                 where ov.inv_organization_id =
				                       dp.destination_organization_id) business_unit_id,
				               (select bu.business_unit_name
				                  from inv_organizations_vl ov, fnd_business_units_vl bu
				                 where ov.inv_organization_id =
				                       dp.destination_organization_id
				                       and ov.business_unit_id = bu.business_unit_id) business_unit_name,
				               (select rh.pur_organization_id
				                  from pur_req_headers rh
				                 where rh.req_header_id = dp.req_header_id) pur_organization_id
				          from pur_demand_pool dp
				         where dp.business_group = ${/session/@business_group}
				           and (nvl(dp.create_po_flag, 'N') = 'N' or
				               --NVL(dp.create_po_flag,'N')  = 'Y' AND
				               nvl(dp.po_release_flag, 'Y') = 'Y')
				           and nvl(dp.delete_flag, 'N') = 'N') v
                #WHERE_CLAUSE# order by pur_req_number desc, pur_req_line
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="pause_flag" queryExpression="v.pause_flag=${@pause_flag}"/>
        <bm:query-field name="assigned_flag" queryExpression="assigned_flag = ${@assigned_flag}"/>
        <bm:query-field name="req_number" queryExpression="req_number like &apos;%&apos;||${@req_number}||&apos;%&apos;"/>
        <bm:query-field name="assigned_to_desc" queryExpression="(v.assigned_to_code like &apos;%&apos;||${@assigned_to_desc}||&apos;%&apos; or v.assigned_to_name like &apos;%&apos;||${@assigned_to_desc}||&apos;%&apos;)"/>
        <bm:query-field name="zero_flag" queryExpression="(zero_flag = ${@zero_flag} or ${@zero_flag}  =  &apos;N&apos;)"/>
        <bm:query-field name="req_status_code" queryExpression="req_status = ${@req_status_code}"/>
        <bm:query-field name="need_by_date_from" queryExpression="need_by_date_value &gt;= to_date(${@need_by_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="need_by_date_to" queryExpression="need_by_date_value &lt;= to_date(${@need_by_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="line_num" queryExpression="line_num = ${@line_num}"/>
        <!-- <bm:query-field name="item_desc" queryExpression="item_desc like &apos;%&apos;||${@item_desc}||&apos;%&apos;"/> -->
        <bm:query-field name="item_code" queryExpression="item_code like &apos;%&apos;||${@item_code}||&apos;%&apos;"/>
        <bm:query-field name="rfx_type_code" queryExpression="v.sourcing_type=${@rfx_category}"/>
        <bm:query-field name="sourcing_doc_number" queryExpression="v.sourcing_doc_number like &apos;%&apos;||${@sourcing_doc_number}||&apos;%&apos;"/>
        <bm:query-field name="data_source" queryExpression="v.data_source = ${@data_source}"/>
        <bm:query-field name="vendor_flag" queryExpression="( v.suggested_vendor_name is null   or ${@vendor_flag}  = &apos;N&apos;)"/>
        <!-- <bm:query-field name="item_code" queryExpression="item_code = ${@item_code}"/> -->
    </bm:query-fields>
</bm:model>
