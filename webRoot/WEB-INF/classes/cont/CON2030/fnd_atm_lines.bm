<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: tony  
    $Date: 2013-7-4 下午9:10:12  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    atm_id,
                    atm_line_id,
                    line_number,
                    source_table_name,
                    source_pk_value,
                    atm_desc,
                    upload_user_id,
                    (select su.description from sys_user su where su.user_id=upload_user_id) AS upload_user_name,
                    upload_user_desc,
                    TO_CHAR(upload_date,'yyyy-mm-dd hh24:mi:ss') upload_date,
                    srm_common_pkg.get_atm_file(l.atm_line_id, 'FND_ATM_LINES') AS atm_file,
                    srm_common_pkg.get_atm_file_href(l.atm_line_id, 'FND_ATM_LINES',${/request/@context_path}) AS atm_file_href,
                    NVL(download_count,0) download_count,
                    'Y' allow_download_flag,
                    (SELECT COUNT(*)
					   FROM fnd_atm_attachment_multi aam
					  WHERE aam.table_name = upper(NVL(${@source_table_name},'null'))
					    AND aam.table_pk_value = to_char(l.atm_line_id)) as atm_counts,
				    decode(l.check_flag,null,'N','N','N','Y') check_flag
                FROM
                    con_contract_atm_files l 
                where l.templet_id = ${@source_pk_value}
                  and l.contract_header_id = 0
                ORDER BY 
                    l.atm_id asc
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="v_atm_line_id" input="false" output="true"/>
            </bm:parameters>
            <bm:query-sql><![CDATA[
                DECLARE
                    v_source_pk_value VARCHAR2(100);
                    v_atm_line_id number;
                BEGIN
                    IF ${@source_pk_value} IS NOT NULL THEN
                        v_source_pk_value  := ${@source_pk_value};
                    ELSE
                        IF ${../../@expert_id} IS NOT NULL THEN
                            v_source_pk_value  := ${../../@expert_id};
                        END IF;
                        IF ${../../@rfx_header_id} IS NOT NULL THEN
                            v_source_pk_value      := ${../../@rfx_header_id};
                        END IF;
                    END IF;
                    fnd_atm_file_pkg.insert_fnd_atm_lines(x_atm_line_id => v_atm_line_id,
                                        p_line_number => ${@line_number},
                                        p_source_table_name => ${@source_table_name},
                                        p_source_pk_value => v_source_pk_value,
                                        p_atm_desc => ${@atm_desc},
                                        p_upload_user_id => ${/session/@user_id},
										p_user_id 		=>${/session/@user_id});  
										
					con_clause_templet_pkg.con_templet_atm_insert(p_templet_id      => ${@source_pk_value},
															      p_atm_line_id     => v_atm_line_id,
															      p_user_id 		=> ${/session/@user_id});			
										
										
                END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:query-sql><![CDATA[
				begin
						fnd_atm_file_pkg.update_fnd_atm_lines(p_atm_line_id => ${@atm_line_id},
                                        p_line_number => ${@line_number},
                                        p_source_table_name => ${@source_table_name},
                                        p_source_pk_value => ${@source_pk_value},
                                        p_atm_desc => ${@atm_desc},
										p_user_id 		=>${/session/@user_id});	
										
						con_clause_templet_pkg.con_templet_atm_update(p_templet_id      => ${@source_pk_value},
																      p_atm_line_id     => ${@atm_line_id},
																      p_user_id 		=> ${/session/@user_id});					    
				end;
			]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:query-sql><![CDATA[
				begin 			
						con_clause_templet_pkg.con_templet_atm_delete(p_templet_id      => ${@source_pk_value},
																      p_atm_line_id     => ${@atm_line_id},
																      p_user_id 		=> ${/session/@user_id});	
																      
						commit;				    								    
				end;
			]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:query-sql><![CDATA[
				begin  			
						con_clause_templet_pkg.con_templet_atm_save(p_contract_header_id => ${@contract_header_id},
																    p_templet_id      => ${@clause_template_id}, 
																    p_user_id 		  => ${/session/@user_id});					    								    
				end;
			]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="source_table_name" queryExpression="l.source_table_name = upper(${@source_table_name})"/>
        <bm:query-field name="source_pk_value" queryExpression="l.source_pk_value = ${@source_pk_value}"/>
        <bm:query-field name="contract_header_id" queryExpression="l.contract_header_id = ${@contract_header_id}"/>
    </bm:query-fields>
</bm:model>
