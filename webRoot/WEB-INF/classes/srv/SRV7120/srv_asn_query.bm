<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单查询-供应方，送货单按明细行查询BM
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_number desc,asn_line_num asc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT *
				  FROM (SELECT h.asn_header_id,
				               l.asn_line_id,
				               nvl(h.display_asn_number,
				                   h.asn_number) AS asn_number,
				               l.asn_line_num,
				               (SELECT atv.asn_type_name FROM inv_asn_types_vl atv WHERE atv.asn_type_code = h.asn_type_code) AS asn_type_name,
				               l.item_id AS require_item_id,
				               nvl((SELECT m.display_item_code FROM mtl_system_items_vl m WHERE m.item_id = l.item_id),
				                   l.item_code) AS require_item_code,
				               nvl((SELECT m.item_name FROM mtl_system_items_vl m WHERE m.item_id = l.item_id),
				                   l.item_name) AS require_item_name,
				               (SELECT imv.partner_item_id FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id AND imv.partner_business_group = h.coop_business_group) AS supply_item_id,
				               (SELECT imv.partner_item_code FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id AND imv.partner_business_group = h.coop_business_group) AS supply_item_code,
				               (SELECT imv.partner_item_name FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id AND imv.partner_business_group = h.coop_business_group) AS supply_item_name,
				               h.business_unit_id,
				               (SELECT buv.business_unit_name
				                  FROM fnd_business_units_vl buv
				                 WHERE buv.business_unit_id = h.business_unit_id) AS business_unit_name,
				               cps.coop_business_group AS service_business_group,
				               cps.coop_company_id AS service_company_id,
				               h.owner_business_group,
				               h.owner_company_id,
				               h.coop_company_id,
				               (SELECT fcv.company_full_name FROM fnd_companies_vl fcv WHERE fcv.company_id = h.coop_company_id) AS company_name,
				               h.status AS h_status,
				               (SELECT cvv.code_value_name
				                  FROM sys_code_values_v cvv
				                 WHERE cvv.code = 'INV_ASN_HEADERS_STATUS'
				                       AND cvv.code_value = h.status) AS header_status,
				               (SELECT nvl(pha.display_po_number,
				                           pha.segment1)
				                  FROM pur_headers_all_v      pha,
				                       pur_line_locations_all lla
				                 WHERE pha.pur_header_id = lla.pur_header_id
				                       AND lla.pur_line_location_id = l.line_location_id) AS po_num,
				               (SELECT pla.line_num
				                  FROM pur_lines_all          pla,
				                       pur_line_locations_all lla
				                 WHERE pla.pur_line_id = lla.pur_line_id
				                       AND lla.pur_line_location_id = l.line_location_id) AS line_num,
				               l.shipment_num,
				               l.ship_quantity,
				               l.uom_code,
				               nvl((SELECT ucv.uom_desc
				                     FROM fnd_uom_codes_vl ucv
				                    WHERE ucv.uom_code = l.uom_code
				                          AND ucv.business_group = h.owner_business_group),
				                   l.uom_code) AS uom_name,
				               l.unit_price,
				               l.receive_quantity,
				               (CASE
				                 WHEN (l.ship_quantity - l.receive_quantity) > 0 THEN
				                  (l.ship_quantity - l.receive_quantity)
				                 ELSE
				                  0
				               END) AS on_the_way_quantity,
				               l.return_vendor_quantity,
				               l.deliver_quantity,
				               (l.receive_quantity - l.deliver_quantity) AS inspection_pending_quantity,
				               l.return_receive_quantity,
				               l.status AS l_status,
				               (SELECT cvv.code_value_name
				                  FROM sys_code_values_v cvv
				                 WHERE cvv.code = 'INV_ASN_LINES_STATUS'
				                       AND cvv.code_value = l.status) AS line_status,
				               l.receive_status,
				               (SELECT cvv.code_value_name
				                  FROM sys_code_values_v cvv
				                 WHERE cvv.code = 'INV_ASN_LNS_RECEIVE_STATUS'
				                       AND cvv.code_value = l.receive_status) AS line_receive_status,
				               l.deliver_status,
				               (SELECT cvv.code_value_name
				                  FROM sys_code_values_v cvv
				                 WHERE cvv.code = 'INV_ASN_LNS_DELIVER_STATUS'
				                       AND cvv.code_value = l.deliver_status) AS line_deliver_status,
				               l.cancel_flag,
				               l.cancel_quantity,
				               l.cancel_reason,
				               l.close_flag,
				               l.closed_quantity,
				               l.close_code,
				               l.close_reason,
				               l.lots_num,
				               to_char(l.lots_validity_date,
				                       'yyyy-mm-dd') lots_validity_date,
				               l.invoice_num,
				               l.serial_num,
				               h.ship_date,
				               to_char(h.ship_date,
				                       'yyyy-mm-dd') AS ship_date_fmt,
				               h.expected_date,
				               to_char(h.expected_date,
				                       'yyyy-mm-dd') AS expected_date_fmt,
				               (SELECT to_char(pll.need_by_date,
				                               'yyyy-mm-dd')
				                  FROM pur_line_locations_all pll
				                 WHERE pll.pur_line_location_id = l.line_location_id) AS need_by_date,
				               (SELECT to_char(pll.promised_date,
				                               'yyyy-mm-dd')
				                  FROM pur_line_locations_all pll
				                 WHERE pll.pur_line_location_id = l.line_location_id) AS promised_date,
				               l.reversion_num,
				               (SELECT ph.display_release_num
				                  FROM pur_headers_all        ph,
				                       pur_line_locations_all plla
				                 WHERE ph.pur_header_id = plla.pur_header_id
				                       AND plla.pur_line_location_id = l.line_location_id) release_num,
				               h.vendor_site_id,
				               (SELECT vsv.site_name FROM pur_vendor_sites_vl vsv WHERE vsv.vendor_site_id = h.vendor_site_id) AS vendor_site_name,
				               h.location_id,
				               (SELECT fl.address_line_1 FROM fnd_locations fl WHERE fl.location_id = h.location_id) AS location_name,
				               l.agent_id,
				               l.agent_name,
				               h.ship_to_organization_id,
				               (SELECT iov.description
				                  FROM inv_organizations_vl iov
				                 WHERE iov.inv_organization_id = h.ship_to_organization_id) AS ship_to_organization_name,
				               l.comments,
				               h.created_by,
				               h.creation_date,
				               to_char(h.creation_date,
				                       'yyyy-mm-dd') AS creation_date_fmt,
				               l.process_status,
				               decode(l.process_status,
				                      'SUCCESSED',
				                      '发送成功',
				                      'WAITING',
				                      '等待发送',
				                      'IMPORTED',
				                      '正在发送',
				                      'FAILED',
				                      '导入发送') AS process_status_name,
				               l.process_message,
				               l.cancel_process_status,
				               decode(l.cancel_process_status,
				                      'SUCCESSED',
				                      '取消成功',
				                      'WAITING',
				                      '等待反馈',
				                      'IMPORTED',
				                      '正在处理',
				                      'FAILED',
				                      '取消失败') AS cancel_process_status_name,
				               l.packet_quantity,
				               l.contacts_info,
				               h.partner_code,
				               h.partner_name,
				               NULL AS useless_id_1,
				               NULL AS useless_id_2,
				               NULL AS useless_id_3,
				               NULL AS useless_id_4,
				               NULL AS useless_id_5,
				               NULL AS useless_id_6,
				               NULL AS useless_id_7,
				               NULL AS useless_id_8
				          FROM inv_asn_headers              h,
				               inv_asn_lines                l,
				               fnd_coop_partner_services_vl cps
				         WHERE h.asn_header_id = l.asn_header_id
				               AND h.coop_business_group = cps.owner_business_group
				               AND h.service_create_flag = 'Y'
				               AND cps.enabled_flag = 'Y'
				               AND EXISTS (SELECT 1
				                  FROM pur_vendors_v pvv
				                 WHERE pvv.coop_business_group = cps.coop_business_group
				                       AND pvv.coop_company_id = cps.coop_company_id
				                       AND pvv.display_vendor_code = h.partner_code)) v
            	#WHERE_CLAUSE# 
            	#ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="asn_number" queryExpression="v.asn_number like &apos;%&apos;||trim(${@asn_number})||&apos;%&apos;"/>
        <bm:query-field name="order_num" queryExpression="v.po_num like &apos;%&apos;||trim(${@order_num})||&apos;%&apos;"/>
        <bm:query-field name="company_id" queryExpression="v.coop_company_id = ${@company_id}"/>
        <!-- <bm:query-field name="status" queryExpression="v.h_status = ${@status}"/> -->
        <bm:query-field name="status_tree" queryExpression="(v.receive_status in (decode(${@status},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_RECEIVE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status}),decode(${@status1},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_RECEIVE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status1}))                                                              or (v.close_flag = &apos;Y&apos; and ${@status2} = &apos;CLOSED&apos;)                                                              or v.cancel_process_status in (nvl(${@cancel_process_status_name},&apos;1&apos;),nvl(${@cancel_process_status_name1},&apos;1&apos;),nvl(${@cancel_process_status_name2},&apos;1&apos;))                                                              or v.process_status in (substr(${@send_successed},6),substr(${@send_waiting},6),substr(${@send_failed},6))                                                              or ( v.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;))"/>
        <bm:query-field name="status" queryExpression="v.receive_status = decode(${@status},&apos;ALL_CLOSE&apos;,&apos;ALL_RECEIVE&apos;,${@status})"/>
        <bm:query-field name="close_flag" queryExpression="v.close_flag = ${@close_flag}"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status1" queryExpression="v.cancel_process_status = ${@cancel_process_status1}"/>
        <bm:query-field name="can_print" queryExpression="v.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;"/>
        <bm:query-field name="vendor_site_id" queryExpression="v.vendor_site_id = ${@vendor_site_id}"/>
        <bm:query-field name="item_id" queryExpression="v.require_item_id = ${@item_id}"/>
        <bm:query-field name="ship_to_organization_id" queryExpression="v.ship_to_organization_id = ${@ship_to_organization_id}"/>
        <bm:query-field name="agent_name" queryExpression="v.agent_name like &apos;%&apos;||trim(${@agent_name})||&apos;%&apos;"/>
        <bm:query-field name="expected_date_from" queryExpression="v.expected_date &gt;= to_date(${@expected_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="expected_date_to" queryExpression="v.expected_date &lt;= to_date(${@expected_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_from" queryExpression="trunc(v.creation_date) &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="trunc(v.creation_date) &lt;= to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_from" queryExpression="v.ship_date &gt;= to_date(${@ship_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_to" queryExpression="v.ship_date &lt;= to_date(${@ship_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="exclude_all_close" queryExpression="((${@exclude_all_close} = &apos;Y&apos; and v.h_status != &apos;ALL_CLOSE&apos;) or (${@exclude_all_close} = &apos;N&apos; and 1=1))"/>
        <bm:query-field name="on_the_way_qty_view" queryExpression="((${@on_the_way_qty_view} = &apos;Y&apos; and v.on_the_way_quantity &gt;= 0 and nvl(v.receive_status,&apos;PART_RECEIVE&apos;) = &apos;PART_RECEIVE&apos; and nvl(v.cancel_flag,&apos;N&apos;) = &apos;N&apos; and nvl(v.close_flag,&apos;N&apos;) = &apos;N&apos;) or (${@on_the_way_qty_view} = &apos;N&apos; and 1=1))"/>
        <bm:query-field name="line_num" queryExpression="v.line_num = ${@line_num}"/>
        <bm:query-field name="shipment_num" queryExpression="v.shipment_num = ${@shipment_num}"/>
        <bm:query-field name="release_num" queryExpression="v.release_num = ${@release_num}"/>
        <bm:query-field name="cancel_process_status" queryExpression="v.cancel_process_status is null and v.process_status = &apos;SUCCESSED&apos; "/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="v.service_business_group = ${/session/@business_group}"/>
    </bm:data-filters>
</bm:model>
