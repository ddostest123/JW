<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: 孙超超  
    $Date: 2018-11-23 上午9:56:09  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" baseTable="bid_engineering_data" defaultOrderBy="data_id desc">
    <bm:fields>
        <!--表字段-->
        <bm:field name="data_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="DATA_ID" prompt="CUX_EMPLOYEE.EMPLOYEE_ID"/>
        <bm:field name="project_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_CODE" prompt="CUX_EMPLOYEE.EMPLOYEE_NO"/>
        <bm:field name="project_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_NAME" prompt="CUX_EMPLOYEE.EMPLOYEE_NAME"/>
        <bm:field name="project_characteristi" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_CHARACTERISTI" prompt="CUX_EMPLOYEE.JOB"/>
        <bm:field name="project_uom_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_UOM_CODE" prompt="CUX_EMPLOYEE.JOB"/>
        <bm:field name="project_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_TYPE" prompt="CUX_EMPLOYEE.JOB"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ENABLED_FLAG" prompt="CUX_EMPLOYEE.JOB"/>
        <!-- <bm:field name="hiredate" databaseType="DATE" datatype="java.util.Date" physicalName="HIREDATE" prompt="CUX_EMPLOYEE.HIREDATE"/>
        <bm:field name="gender" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="GENDER" prompt="CUX_EMPLOYEE.GENDER"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ENABLED_FLAG" prompt="CUX_EMPLOYEE.ENABLED_FLAG"/>-->
        <bm:field name="project_uom_name" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select fuc.uom_desc  from fnd_uom_codes_vl fuc where fuc.uom_code=t1.project_uom_code)" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:features>
        <!--who字段-->
        <f:standard-who/>
        <!--序列-->
        <o:sequence-pk/>
    </bm:features>
    <!--主键，影响update、delete语句-->
    <bm:primary-key>
        <bm:pk-field name="data_id"/>
    </bm:primary-key>
    <!--默认过滤条件-->
    <!-- <bm:data-filters>
        <bm:data-filter enforceOperations="query" expression="t1.dept_no = d.dept_no"/>
    </bm:data-filters> -->
    <!--查询字段-->
    <bm:query-fields>
        <bm:query-field name="project_code" queryExpression="t1.project_code like ${@project_code}"/>
        <bm:query-field name="project_type" queryExpression="t1.project_type like ${@project_type}"/>
        <bm:query-field field="project_name" queryOperator="like"/>
    </bm:query-fields>
    <!--重写-->
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    t1.data_id,
                    t1.project_code,
                    t1.project_name,
                    t1.project_characteristi,
                    t1.project_uom_code,
                    (select fuc.uom_desc  from fnd_uom_codes_vl fuc where fuc.uom_code=t1.project_uom_code) project_uom_name,
                    t1.project_type,
                    t1.enabled_flag
                FROM
                    bid_engineering_data t1
                     #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
				begin
				  bid_engineering_data_pkg.insert_bid_engineering(p_project_code => ${@project_code},
				                                       p_project_name => ${@project_name},
				                                       p_project_characteristi => ${@project_characteristi},
				                                       p_project_uom_code => ${@project_uom_code},
				                                       p_project_type => ${@project_type},
				                                       p_enabled_flag => ${@enabled_flag},
				                                       p_user_id => ${/session/@user_id});
				end;
		    ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:parameters>
                <bm:parameter name="v_result" dataType="java.lang.Long" output="true" outputPath="@v_result"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
				begin
				  ${@v_result} := cux_employee_pkg.test_fun(p_att1 => ${@att1},
				                                       p_att2 => ${@att2});
				end;
	        ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
