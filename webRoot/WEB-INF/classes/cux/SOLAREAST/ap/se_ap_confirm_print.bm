<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            	select * from (SELECT sh.confirm_header_id,
				       sh.confirm_code,
				       sh.confirm_status,
				       (select fv.flex_desc from fnd_flex_values_v fv
										where fv.flex_value_set_code  ='SE_AP_CONFIRM_STATUS'
										and fv.flex_value = sh.confirm_status
						               ) confirm_status_display,
				       sh.confirm_title,
				       sh.business_unit_id,
				       (SELECT fbuv.business_unit_code FROM fnd_business_units_vl fbuv WHERE fbuv.business_unit_id = sh.business_unit_id) business_unit_code,
				       (SELECT fbuv.business_unit_name FROM fnd_business_units_vl fbuv WHERE fbuv.business_unit_id = sh.business_unit_id) business_unit_name,
				       sh.vendor_id,
				       (SELECT pvv.display_vendor_code FROM pur_vendors_vl pvv WHERE pvv.vendor_id = sh.vendor_id) vendor_code,
				       (SELECT pvv.full_name FROM pur_vendors_vl pvv WHERE pvv.vendor_id = sh.vendor_id) vendor_name,
				       to_char(sh.journal_date_from,'yyyy-mm-dd') journal_date_from,
				       to_char(sh.journal_date_to,'yyyy-mm-dd') journal_date_to,
				       sh.confirm_year,
				       sh.confirm_month,
				       to_char(sh.confirm_date,'yyyy-mm-dd') confirm_date,
				       sh.confirm_balance,
				       decode(sh.debit_credit,
				              'DEBIT',
				              sh.confirm_balance,
				              '') vendor_confirm_amount,
				       decode(sh.debit_credit,
				              'CREDIT',
				              sh.confirm_balance,
				              '') bu_confirm_amount,
				       sh.currency_code header_currency_code,
				       sh.confirm_desc,
				       sh.comments,
				       (select sl.currency_code from se_ap_confirm_lines sl where sl.confirm_header_id = sh.confirm_header_id
						and rownum < 2) line_currency_code,
					   (SELECT decode(sign(SUM(nvl(sl.certificate_amount,
		                                   0))),
		                      '-1',
		                      abs(SUM(nvl(sl.certificate_amount,
		                              0))),
		                      '')
						          FROM se_ap_confirm_lines sl
						         WHERE sl.confirm_header_id = sh.confirm_header_id) bu_line_amount,
				       (SELECT decode(sign(SUM(nvl(sl.certificate_amount,
				                                   0))),
				                      '1',
				                      abs(SUM(nvl(sl.certificate_amount,
				                              0))),
				                      '')
				          FROM se_ap_confirm_lines sl
				         WHERE sl.confirm_header_id = sh.confirm_header_id) vendor_line_amount,
				       sh.creation_date,
				       to_char(sh.creation_date,'yyyy-mm-dd') creation_date_ft,
				       sh.created_by,
				       (SELECT su.description FROM sys_user su WHERE su.user_id = sh.created_by) created_by_display
				  FROM se_ap_confirm_headers sh,se_ap_confirm_print sp
				  where sp.session_id = ${/session/@session_id}
				  		and sp.user_id = ${/session/@user_id}
				  	    and sh.confirm_header_id = sp.confirm_header_id) v
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
        		begin
	        		se_ap_confirm_pkg.create_confirm_print
						  (
						    p_confirm_header_id => ${@confirm_header_id},
						    p_session_id        => ${/session/@session_id},
						    p_user_id           => ${/session/@user_id}
						  );
				end;
        	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
        		begin
	        		se_ap_confirm_pkg.delete_confirm_print
						  (p_session_id        => ${/session/@session_id},
						    p_user_id           => ${/session/@user_id}
						  );
				end;
        	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
