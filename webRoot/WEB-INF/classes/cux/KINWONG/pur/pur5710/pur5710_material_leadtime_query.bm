<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lianghuihao $  
    $Date: 2018年12月5日15:56:52 $  
    $Revision: 1.0 $ 
    $Purpose: 一揽子协议查詢BM $
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="v.creation_date DESC">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT /*+ first_row(50) */
			     -- ,v.category_code_level
			      (SELECT b.code_value_name
			          FROM  sys_code_values_vl b
			         WHERE b.code_id = 988670
			           AND b.code_value = v.status) status_display,
			       NULL AS useless_id,
			       v.business_unit_id,
			       v.business_group,
			       v.unit_code,
			       v.company_id,
			       v.vendor_id,
			       v.item_code,
			       v.item_name,
			       v.vendor_number,
			       v.vendor_name,
			       v.category_code,
			       v.status,
			       v.material_id,
			       v.leadtime_number,
			       v.sample_lead_time,
			       v.sup_remark,
			       v.for_sup_remark,
			       v.remark,
			       nvl(v.manual_flag,'N') manual_flag,
			       v.item_id,
			       v.purchase_leadtime,
			       v.created_by,
			       v.sz_pur_kw,
				   v.jx_pur_kw,
				   v.lc_pur_kw,
					v.fs_pur_kw,
					v.glg_pur_kw,
					v.ljb_pur_kw,
					v.sz_sp_kw,
					v.jx_sp_kw,
					v.lc_sp_kw,
					v.fs_sp_kw,
					v.glg_sp_kw,
					v.ljb_sp_kw,
			       (select u.description from sys_user u where u.user_id = v.created_by) created_by_desc,
			       v.creation_date,
			       v.last_updated_by,
			       (select u.description from sys_user u where u.user_id = v.last_updated_by) last_updated_by_desc,
			       v.last_update_date,
			      decode((select count(1) 
					from rcv_transactions r,
	                      pur_lines_all    pl,
	                      pur_headers_all  ph
	                where r.destination_type_code = 'RECEIVING'
	                  and r.transaction_date between add_months(sysdate, -6) AND
	                      sysdate
	                  and pl.es_po_line_id = r.po_line_id
	                  and pl.pur_header_id = ph.pur_header_id
	                  and pl.item_id = v.item_id
	                  and ph.vendor_code = v.vendor_number),0,null,
	          			(select round(avg(trunc(r.transaction_date) -
	                                trunc(NVL(ph.erp_creation_date,
	                                          ph.creation_date))))
	                 from rcv_transactions r,
	                      pur_lines_all    pl,
	                      pur_headers_all  ph
	                where r.destination_type_code = 'RECEIVING'
	                  and r.transaction_date between add_months(sysdate, -6) AND
	                      sysdate
	                  and r.transaction_date between add_months((select transaction_date from (select r.transaction_date from rcv_transactions r,
	                      pur_lines_all    pl,
	                      pur_headers_all  ph
	                where r.destination_type_code = 'RECEIVING'
	                  and r.transaction_date between add_months(sysdate, -6) AND
	                      sysdate
	                  and pl.es_po_line_id = r.po_line_id
	                  and pl.pur_header_id = ph.pur_header_id
	                  and pl.item_id = v.item_id
	                  and ph.vendor_code = v.vendor_number order by transaction_date desc) where rownum =1 ), -1) AND
	                 (select transaction_date from (select r.transaction_date from rcv_transactions r,
	                      pur_lines_all    pl,
	                      pur_headers_all  ph
	                where r.destination_type_code = 'RECEIVING'
	                  and r.transaction_date between add_months(sysdate, -6) AND
	                      sysdate
	                  and pl.es_po_line_id = r.po_line_id
	                  and pl.pur_header_id = ph.pur_header_id
	                  and pl.item_id = v.item_id
	                  and ph.vendor_code = v.vendor_number order by transaction_date desc) where rownum =1 )
	                  and pl.es_po_line_id = r.po_line_id
	                  and pl.pur_header_id = ph.pur_header_id
	                  and pl.item_id = v.item_id
	                  and ph.vendor_code = v.vendor_number)) diffday,
				   (select pur_lead_time
				     from (select m.pur_lead_time
				             from pur_leadtime_material m
				            where m.vendor_number = v.vendor_number
				              and m.item_id = v.item_id
				              and m.unit_code = v.unit_code
				              and m.status = '50_APPROVED'
				            order by m.creation_date desc)
				    where rownum = 1) last_purchase_leadtime,
				    (select sample_lead_time
				     from (select m.sample_lead_time
				             from pur_leadtime_material m
				            where m.vendor_number = v.vendor_number
				              and m.item_id = v.item_id
				              and m.unit_code = v.unit_code
				              and m.status = '50_APPROVED'
				            order by m.creation_date desc)
				    where rownum = 1) last_sample_lead_time
			  FROM cux_po_asl_list_v2 v  
			  #WHERE_CLAUSE#  
			  #ORDER_BY_CLAUSE#     
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="material_id" databaseType="NUMBER" datatype="java.lang.Double" input="false" output="true" outputPath="/parameter/@material_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                begin
                  kw_pur_leadtime_pkg.create_leadtime_material(x_material_id             =>${@material_id},
                                                                p_pur_lead_time          =>${@pur_lead_time},
                                                                p_vendor_number          =>${@vendor_number},
                                                                p_item_code              =>${@item_code},
                                                                p_unit_code              =>${@unit_code},
                                                                p_remark        		 =>${@remark},
							                                    p_for_sup_remark 		 =>${@for_sup_remark},
							                                    p_manual_flag   		 =>nvl(${@manual_flag},'N'),
							                                    p_category_code 		 =>${@category_code},
                                                                p_user_id                   => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                begin
                   kw_pur_leadtime_pkg.modify_pur_leadtime_material(p_material_id      =>${@material_id},
							                                      p_pur_lead_time    =>${@pur_lead_time},
							                                      p_vendor_number    =>${@vendor_number},
							                                      p_item_code        =>${@item_code},
							                                      p_unit_code        =>${@unit_code},
							                                      p_remark           =>${@remark},
							                                      p_sample_lead_time =>${@sample_lead_time},
							                                      p_sup_remark       =>${@sup_remark},
							                                      p_for_sup_remark   =>${@for_sup_remark},
							                                      p_item_name        =>${@item_name},
							                                      p_item_id          =>${@item_id},
							                                      p_category_code	 =>${@category_code},
							                                      p_user_id          => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <!-- 审批通过-->
        <!-- <bm:operation name="update">
            <bm:update-sql><![CDATA[
                begin
                   kw_pur_leadtime_pkg.apporve_pur_leadtime_material(p_material_id     => ${@material_id},
                                                            p_action_code   => ${@action_code},
                                                            p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation> -->
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
                BEGIN
                    kw_pur_leadtime_pkg.delete_leadtime_material(p_material_id => ${@material_id}, p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <!-- 发布-->
        <!--  <bm:operation name="delete">
            <bm:update-sql><![CDATA[
                BEGIN
                    kw_pur_leadtime_pkg.release_leadtime_material2(p_material_id => ${@material_id}, p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation> -->
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                begin
                   kw_pur_leadtime_pkg.release_leadtime_material_info(p_vendor_number   => nvl(${/parameter/@vendor_number},${/parameter/record/@vendor_number}),
								                                      p_item_code       => nvl(${/parameter/@item_code},${/parameter/record/@item_code}), 
	                                                            	  p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="pbupdate">
            <bm:update-sql><![CDATA[
                begin
                   kw_pur_leadtime_pkg.release_leadtime_material_info(p_material_id     => nvl(${/parameter/@material_id},${/parameter/record/@material_id}),
                                                            p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="item_name" queryExpression="v.item_name like &apos;%&apos;||trim(${@item_name})||&apos;%&apos;"/>
        <bm:query-field name="item_code" queryExpression="v.item_code like &apos;%&apos;||trim(${@item_code})||&apos;%&apos;"/>
        <bm:query-field name="vendor_code" queryExpression="v.vendor_number in (${:@vendor_code})"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="leadtime_number" queryExpression="v.leadtime_number like &apos;%&apos;||${@leadtime_number}||&apos;%&apos;"/>
        <bm:query-field name="unit_code" queryExpression="v.unit_code like &apos;%&apos;||${@unit_code}||&apos;%&apos;"/>
        <bm:query-field name="category_code" queryExpression="instr(${@category_code},v.category_code_level) &gt; 0 "/>
        <bm:query-field name="vendor_catagory" queryExpression="exists ( SELECT  &apos;X&apos;  FROM pur_vendor_survey_headers h WHERE h.require_company_id = v.company_id AND h.vendor_catagory =  ${@vendor_catagory} )"/>
        <bm:query-field name="creation_date_from" queryExpression="creation_date &gt;= to_date(${@creation_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="creation_date &lt;= to_date(${@creation_date_to},&apos;YYYY-MM-DD&apos;)+1"/>
    </bm:query-fields>
    <bm:data-filters>
        <!-- <bm:data-filter expression="1=1 and v.item_code not like &apos;V%&apos;"/> -->
        <!--  <bm:data-filter expression="v.vendor_rn = 1"/> -->
        <!-- <bm:data-filter expression="substr(v.category_code, 1, 2) &lt;&gt;   &apos;02&apos;"/> -->
        <bm:data-filter expression="substr(v.item_code, 1, 1) NOT IN (&apos;5&apos;, &apos;8&apos;) "/>
        <!-- <bm:data-filter expression=" v.business_group = ${/session/@business_group}"/> -->
    </bm:data-filters>
    <authority foundation_code="PUR_LEADTIME">
        <authority-segment source_alias="v" source_name="useless_id" type="CREATER"/>
        <authority-segment source_alias="v" source_name="company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PUR_BUYER"/>
        <authority-segment source_alias="v" source_name="useless_id" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SALES_PRODUCTION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR_SITE"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
