<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                WITH
                    data_view AS
                    (SELECT
                        v.* ,
                        decode(ROUND((v.avag_price1 - v.avag_stand) / v.avag_stand, 2) * 100,'','',ROUND((v.avag_price1 - v.avag_stand) / v.avag_stand, 2) * 100||'%') AS price_compare
                    FROM
                        (SELECT
                            s.website ,
                            s.unit ,
                            s.name_type ,
                            TO_CHAR(s.cur_date, 'yyyy') AS cur_year ,
                            (SELECT
                                TO_CHAR(ROUND(SUM(s1.price) / COUNT(1) / DECODE(s.unit, '元/吨', 1, 1), 2), 'fm999999999999999.00')
                            FROM
                                website_get_price_tbl s1
                            WHERE
                                TO_CHAR(s1.cur_date, 'yyyy') = TO_CHAR(s.cur_date, 'yyyy') AND
                                s1.website                   = s.website AND
                                s1.unit                      = s.unit AND
                                s1.name_type                 = s.name_type AND
                                s1.price is not null
                            ) avag_price1 ,
                            (SELECT
                                TO_CHAR(ROUND(SUM(s1.price) / COUNT(1) / DECODE(s.unit, '元/吨', 1, 1), 2), 'fm999,999,999,999,999')
                            FROM
                                website_get_price_tbl s1
                            WHERE
                                TO_CHAR(s1.cur_date, 'yyyy') = TO_CHAR(s.cur_date, 'yyyy') AND
                                s1.website                   = s.website AND
                                s1.unit                      = s.unit AND
                                s1.name_type                 = s.name_type AND
                                s1.price is not null
                            ) avag_price ,
                            (SELECT
                                ROUND(SUM(s1.price) / COUNT(1) / DECODE(s.unit, '元/吨', 1, 1), 2)
                            FROM
                                website_get_price_tbl s1
                            WHERE
                                TO_CHAR(s1.cur_date, 'yyyy') = ${/parameter/@stand_year} AND
                                s1.website                   = s.website AND
                                s1.unit                      = s.unit AND
                                s1.name_type                 = s.name_type AND
                                s1.price is not null
                            ) avag_stand
                        FROM
                            website_get_price_tbl s
                        WHERE 1=1 
                           -- s.name_type IN ('铜', '锡', '铝', '黄金', '钯', '树脂') AND
                           -- s.website   IN ('长江有色', '上海有色', '伦敦期货', 'Kitco(美元)', 'ECH环氧氯丙烷', '双酚A')
                        GROUP BY
                            TO_CHAR(s.cur_date, 'yyyy') ,
                            s.website ,
                            s.unit ,
                            s.name_type ,
                            s.website
                        ) v
                    )
                SELECT
                    cur_year ,
                    cur_year_new ,
                    SUBSTR(price1, 1, instr(price1, 'X') - 1) price1_1 ,
                    SUBSTR(price1, instr(price1, 'X') + 1, LENGTH(price1)) price1_2 ,
                    SUBSTR(price2, 1, instr(price2, 'X') - 1) price2_1 ,
                    SUBSTR(price2, instr(price2, 'X') + 1, LENGTH(price2)) price2_2 ,
                    SUBSTR(price3, 1, instr(price3, 'X') - 1) price3_1 ,
                    SUBSTR(price3, instr(price3, 'X') + 1, LENGTH(price3)) price3_2 ,
                    SUBSTR(price4, 1, instr(price4, 'X') - 1) price4_1 ,
                    SUBSTR(price4, instr(price4, 'X') + 1, LENGTH(price4)) price4_2 ,
                    SUBSTR(price5, 1, instr(price5, 'X') - 1) price5_1 ,
                    SUBSTR(price5, instr(price5, 'X') + 1, LENGTH(price5)) price5_2 ,
                    SUBSTR(price6, 1, instr(price6, 'X') - 1) price6_1 ,
                    SUBSTR(price6, instr(price6, 'X') + 1, LENGTH(price6)) price6_2 ,
                    SUBSTR(price7, 1, instr(price7, 'X') - 1) price7_1 ,
                    SUBSTR(price7, instr(price7, 'X') + 1, LENGTH(price7)) price7_2 ,
                    SUBSTR(price8, 1, instr(price8, 'X') - 1) price8_1 ,
                    SUBSTR(price8, instr(price8, 'X') + 1, LENGTH(price8)) price8_2 ,
                    SUBSTR(price9, 1, instr(price9, 'X') - 1) price9_1 ,
                    SUBSTR(price9, instr(price9, 'X') + 1, LENGTH(price9)) price9_2 ,
                    SUBSTR(price10, 1, instr(price10, 'X') - 1) price10_1 ,
                    SUBSTR(price10, instr(price10, 'X') + 1, LENGTH(price1)) price10_2 ,
                    SUBSTR(price11, 1, instr(price11, 'X') - 1) price11_1 ,
                    SUBSTR(price11, instr(price11, 'X') + 1, LENGTH(price11)) price11_2 ,
                    SUBSTR(price12, 1, instr(price12, 'X') - 1) price12_1 ,
                    SUBSTR(price12, instr(price12, 'X') + 1, LENGTH(price12)) price12_2 ,
                    SUBSTR(price13, 1, instr(price13, 'X') - 1) price13_1 ,
                    SUBSTR(price13, instr(price13, 'X') + 1, LENGTH(price13)) price13_2 ,
                    SUBSTR(price14, 1, instr(price14, 'X') - 1) price14_1 ,
                    SUBSTR(price14, instr(price14, 'X') + 1, LENGTH(price14)) price14_2 ,
                    SUBSTR(price15, 1, instr(price15, 'X') - 1) price15_1 ,
                    SUBSTR(price15, instr(price15, 'X') + 1, LENGTH(price15)) price15_2 ,
                    SUBSTR(price16, 1, instr(price16, 'X') - 1) price16_1 ,
                    SUBSTR(price16, instr(price16, 'X') + 1, LENGTH(price16)) price16_2 ,
                    SUBSTR(price17, 1, instr(price17, 'X') - 1) price17_1 ,
                    SUBSTR(price17, instr(price17, 'X') + 1, LENGTH(price17)) price17_2 ,
                    SUBSTR(price18, 1, instr(price18, 'X') - 1) price18_1 ,
                    SUBSTR(price18, instr(price18, 'X') + 1, LENGTH(price18)) price18_2 ,
                    SUBSTR(price19, 1, instr(price19, 'X') - 1) price19_1 ,
                    SUBSTR(price19, instr(price19, 'X') + 1, LENGTH(price19)) price19_2 ,
                    SUBSTR(price20, 1, instr(price20, 'X') - 1) price20_1 ,
                    SUBSTR(price20, instr(price20, 'X') + 1, LENGTH(price2)) price20_2 ,
                    SUBSTR(price21, 1, instr(price21, 'X') - 1) price21_1 ,
                    SUBSTR(price21, instr(price21, 'X') + 1, LENGTH(price21)) price21_2 ,
                    SUBSTR(price22, 1, instr(price22, 'X') - 1) price22_1 ,
                    SUBSTR(price22, instr(price22, 'X') + 1, LENGTH(price22)) price22_2 ,
                    SUBSTR(price23, 1, instr(price23, 'X') - 1) price23_1 ,
                    SUBSTR(price23, instr(price23, 'X') + 1, LENGTH(price23)) price23_2 ,
                    SUBSTR(price24, 1, instr(price24, 'X') - 1) price24_1 ,
                    SUBSTR(price24, instr(price24, 'X') + 1, LENGTH(price24)) price24_2 ,
                    SUBSTR(price25, 1, instr(price25, 'X') - 1) price25_1 ,
                    SUBSTR(price25, instr(price25, 'X') + 1, LENGTH(price25)) price25_2 ,
                    SUBSTR(price26, 1, instr(price26, 'X') - 1) price26_1 ,
                    SUBSTR(price26, instr(price26, 'X') + 1, LENGTH(price26)) price26_2 
                FROM
                    (SELECT
                        *
                    FROM
                        (SELECT
                            cur_year ,
                            cur_year
                            || '年' cur_year_new ,
                            to_char(avag_price1, 'fm999,999,999,999,999')
                            || 'X'
                            || DECODE(cur_year, ${/parameter/@stand_year}, '基准', price_compare) comprice ,
                            name_type
                            || website
                            || '价格' name_type_new
                        FROM
                            data_view
                        ) pivot(MAX(comprice) FOR name_type_new IN('铜长江有色价格' AS price1, '铜上海有色价格' AS price2, '铜伦敦期货价格' AS price3, '锡长江有色价格' AS price4, '锡上海有色价格' AS price5, '锡伦敦期货价格' AS price6, '铝长江有色价格' AS price7, '铝上海有色价格' AS price8, '铝伦敦期货价格' AS price9, '黄金上海黄金价格' AS price10, '黄金Kitco(人民币)价格' AS price11, '黄金Kitco(美元)价格' AS price12, '钯Kitco(人民币)价格' AS price13, '钯Kitco(美元)价格' AS price14, '树脂ECH环氧氯丙烷价格' AS price15, '树脂环氧树脂价格' AS price16, '树脂双酚A价格' AS price17, '化工原料硫酸价格' AS price18, '化工原料硝酸价格' AS price19, '化工原料盐酸价格' AS price20, '化工原料重质纯碱价格' AS price21, '化工原料烧碱价格' AS price22, '橡塑LDPE价格' AS price23, '原油布伦特价格' AS price24, '镍长江有色价格' AS price25, '镍伦敦期货价格' AS price26))
                    )
                ORDER BY
                    DECODE(cur_year, ${/parameter/@stand_year}, '9999', cur_year) DESC
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
