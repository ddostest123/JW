<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
				select pm.mapping_id,
				       fc.company_id,
				       fc.company_full_name,
				       v.data_source,
				       v.data_source_desc,
				       v.data_source_id,
				       v.category_name,
				       pm.catelog_udf_id,
				       (select pd.catelog_code
				          from pur_catelogs_user_defined_vl pd
				         where pd.catelog_udf_id = pm.catelog_udf_id) catelog_code,
				       (select pd.catelog_name
				          from pur_catelogs_user_defined_vl pd
				         where pd.catelog_udf_id = pm.catelog_udf_id) catelog_name,
				       (select pd.catelog_level
				          from pur_catelogs_user_defined_vl pd
				         where pd.catelog_udf_id = pm.catelog_udf_id) catelog_level
				  from (select 'LD' data_source,
				               '领先未来' data_source_desc,
				               to_char(lp.categoryid) data_source_id,
				               lp.catelog category_name
				          from ld_product_pool lp
				         where lp.categoryid is not null
				        union all
				        select 'CG' data_source,
				               '晨光科力普' data_source_desc,
				               to_char(cp.categoryid) data_source_id,
				               cp.catelog category_name
				          from cg_product_pool cp
				         where cp.categoryid is not null
				        union all
				        select 'SN' data_source,
				               '苏宁易购' data_source_desc,
				               sc.categoryid data_source_id,
				               sc.categoryid || '-' || sc.categoryname category_name
				          from sn_product_category sc
				         where sc.categoryid is not null
				        union all
				        select 'JD' data_source,
				               '京东商城' data_source_desc,
				               to_char(jd.catid) data_source_id,
				               jd.catid || '-' || jd.name category_name
				          from jd_product_getcategorys jd) v,
				       pur_catelog_mapping pm,
				       fnd_companies_vl fc
				#WHERE_CLAUSE#
				   and v.data_source_id = pm.data_source_id(+)
				   and v.data_source = pm.data_source(+)
				   and fc.company_id = pm.company_id(+)
				   and fc.business_group = ${/session/@business_group}
				   and exists (select 1
				          from fnd_user_authority u
				         where u.authority_type = 'COMPANY'
				           and u.user_id = ${/session/@user_id}
				           and u.assign_id = fc.company_id)
				 order by fc.company_code, v.data_source, v.data_source_id
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
                begin
                    pur_catelog_mapping_pkg.save_mapping(p_mapping_id      => ${@mapping_id}, 
                    									 p_company_id	   => ${@company_id}, 
                                                         p_catelog_udf_id  => ${@catelog_udf_id}, 
                                                         p_data_source     => ${@data_source}, 
                                                         p_data_source_id  => ${@data_source_id}, 
                                                         p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                begin
                    pur_catelog_mapping_pkg.save_mapping(p_mapping_id      => ${@mapping_id}, 
                    									 p_company_id	   => ${@company_id}, 
                                                         p_catelog_udf_id  => ${@catelog_udf_id}, 
                                                         p_data_source     => ${@data_source}, 
                                                         p_data_source_id  => ${@data_source_id}, 
                                                         p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
                begin
                    pur_catelog_mapping_pkg.delete_mapping(p_mapping_id => ${@mapping_id}, 
                                                           p_user_id    => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                begin
                    pur_catelog_mapping_pkg.reset_eb_code(p_business_group => ${/session/@business_group}, 
                                                          p_user_id        => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="1 = 1"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="company_id" queryExpression="fc.company_id = ${@company_id}"/>
        <bm:query-field name="catelog_udf_id" queryExpression="pm.catelog_udf_id = ${@catelog_udf_id}"/>
        <bm:query-field name="data_source" queryExpression="v.data_source = ${@data_source}"/>
        <bm:query-field name="category_name" queryExpression="v.category_name like &apos;%&apos; || ${@category_name} || &apos;%&apos; "/>
        <bm:query-field name="catelog_level" queryExpression="pd.catelog_level = ${@catelog_level}"/>
        <bm:query-field name="mapping_flag" queryExpression="((${@mapping_flag} = &apos;Y&apos; and pm.mapping_id is not null) or (${@mapping_flag} = &apos;N&apos; and pm.mapping_id is null))"/>
    </bm:query-fields>
</bm:model>
