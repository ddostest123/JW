<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangmengling  
    $Date: 2018-03-22 下午05:52:51  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
         
                SELECT
                    pcm.mapping_id,
                    pci.owner_company_id company_id,
                    (SELECT
                        fc.company_full_name
                    FROM
                        fnd_companies_vl fc
                    WHERE
                        fc.company_id = pci.owner_company_id
                    ) company_full_name,
                    pci.item_id data_source_id,
                    pci.display_item_code data_source_code,
                    pci.item_name data_source_name,
                    NULL data_source_level,
                    (SELECT
                        d.catelog_name
                    FROM
                        pur_catelogs_user_defined_vl d
                    WHERE
                        d.catelog_udf_id = pci.item_category_id
                    ) data_source_category_name,
                    NVL(pcm.data_type, 'ITEM') data_type,
                    msi.item_id,
                    (SELECT
                        cl.item_code
                    FROM
                        con_contract_headers_new ch,
                        con_contract_lines_new cl,
                        pur_con_types t
                    WHERE
                        cl.contract_line_id    = pci.data_source_id AND
                        ch.contract_header_id  = cl.contract_header_id 
                        and t.con_type_id=ch.contract_type_id
                        and t.type_code='KJXY'
                    ) item_code,
                    (SELECT
                        cl.item_desc
                    FROM
                        con_contract_headers_new ch,
                        con_contract_lines_new cl,
                        pur_con_types t
                    WHERE
                        cl.contract_line_id    = pci.data_source_id AND
                        ch.contract_header_id  = cl.contract_header_id 
                        and t.con_type_id=ch.contract_type_id
                        and t.type_code='KJXY'
                    ) item_name,
                    DECODE(pcm.item_id, NULL, '否', '是') mapping_yes_no_desc,
                    (SELECT
                        m.category_name
                    FROM
                        mtl_categories_user_defined_vl m
                    WHERE
                        m.category_udf_id = msi.item_category_id
                    ) item_category_name,
                    NVL(pcm.data_source, 'SRM') data_source,
                    io.inv_organization_id,
                    io.description inv_organization_name
                FROM
                    inv_organizations_vl io,
                    fnd_business_units bu,
                    pur_catelog_items_vl pci,
                    pur_catelog_item_mapping pcm,
                    mtl_system_items_vl msi
               #WHERE_CLAUSE#  
                   and bu.business_unit_id        = io.business_unit_id AND
                    pci.item_id                = pcm.data_source_id(+) AND
                    pcm.data_type(+)           = 'ITEM' AND
                    pcm.item_id                = msi.item_id(+) AND
                    pcm.company_id(+)          = pci.owner_company_id AND
                    pcm.inv_organization_id(+) = io.inv_organization_id AND
                    pci.business_group         = ${/session/@business_group} AND
                    EXISTS
                    (SELECT
                        1
                    FROM
                        fnd_user_authority fua
                    WHERE
                        fua.authority_type = 'COMPANY' AND
                        fua.assign_id      = pci.owner_company_id AND
                        fua.user_id        = ${/session/@user_id}
                    )
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
				begin
				  pur_item_mapping_pkg.save_mapping(p_mapping_id          => ${@mapping_id},
				                                    p_data_type           => ${@data_type},
				                                    p_data_source         => ${@data_source},
				                                    p_data_source_id      => ${@data_source_id},
				                                    p_item_id             => ${@item_id},
				                                    p_company_id          => ${@company_id},
				                                    p_inv_organization_id => ${@inv_organization_id},
				                                    p_user_id             => ${/session/@user_id},
				                                    p_business_group      => ${/session/@business_group});
				end;
        ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
				begin
				  pur_item_mapping_pkg.save_mapping(p_mapping_id          => ${@mapping_id},
				                                    p_data_type           => ${@data_type},
				                                    p_data_source         => ${@data_source},
				                                    p_data_source_id      => ${@data_source_id},
				                                    p_item_id             => ${@item_id},
				                                    p_company_id          => ${@company_id},
				                                    p_inv_organization_id => ${@inv_organization_id},
				                                    p_user_id             => ${/session/@user_id},
				                                    p_business_group      => ${/session/@business_group});
				end;
        ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="pci.owner_company_id = bu.company_id"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="company_id" queryExpression="bu.company_id = ${@company_id}"/>
        <bm:query-field name="inv_organization_id" queryExpression="io.inv_organization_id = ${@inv_organization_id}"/>
        <bm:query-field name="mapping_flag" queryExpression="((${@mapping_flag} = &apos;Y&apos; and pcm.item_id is not null) or (${@mapping_flag} = &apos;N&apos; and pcm.item_id is null))"/>
        <bm:query-field name="data_source_id" queryExpression="pci.item_id = ${@data_source_id}"/>
        <bm:query-field name="item_id" queryExpression="pcm.item_id = ${@item_id}"/>
    </bm:query-fields>
</bm:model>
