<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: weiqinglong  
    $Date: 2017-9-22 下午03:04:54  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
				select m.item_id,
				       m.item_code,
				       m.display_item_code,
				       m.item_name,
				       m.item_category_id,
				       pur_catelog_pkg.get_all_parent_catelog_name(m.item_category_id) category_name_all,
				       m.item_type_id,
				       m.inventory_item_status_code,
				       (select v.code_value_name
				          from sys_code_values_v v
				         where v.code = 'PUR_CATELOG_ITEM_STATUS'
				           and v.code_value = m.inventory_item_status_code) inventory_item_status_desc,
				       m.item_specs,
				       m.item_model,
				       m.primary_uom,
				       (select ucv.uom_desc
				          from fnd_uom_codes_vl ucv
				         where ucv.uom_code = m.primary_uom
				           and ucv.business_group = ${/session/@business_group}) as uom_desc,
				       m.secondary_uom_enabled,
				       m.secondary_uom,
				       m.conversion,
				       m.gross_weight,
				       m.net_weight,
				       m.uom_of_weight,
				       m.primary_inv_org_id,
				       m.taxable_flag,
				       m.default_tax_type_id,
				       t.bg_tax_type_code default_tax_type_code,
				       to_char(t.bg_tax_type_rate,
				               'FM90.00') default_tax_type_rate,
				       m.origin,
				       m.common_name,
				       m.manufacturer_code,
				       m.manufacturer_name,
				       m.enabled_flag,
				       m.version_num,
				       m.lot_numbering_rule,
				       m.item_manage_method,
				       m.quota_manage_type,
				       m.comments,
				       m.deleted_flag,
				       m.deleted_by,
				       m.deletion_date,
				       m.for_purchase_flag,
				       m.for_sales_flag,
				       m.business_group,
				       m.data_source,
				       decode(m.data_source,
				              'DEMAND_POOL',
				              '引用历史报价',
				              '手工创建') data_source_desc,
				       (select r.quotation_result_number
				          from pur_quotation_result r
				         where r.quotation_result_id = m.data_source_id
				           and m.data_source = 'DEMAND_POOL'
				           and r.quotation_result_id = m.data_source_id) quotation_result_number,
				       m.c_attribute1,
				       m.c_attribute2,
				       m.c_attribute3,
				       m.c_attribute4,
				       m.c_attribute5,
				       m.c_attribute6,
				       m.c_attribute7,
				       m.c_attribute8,
				       m.c_attribute9,
				       m.c_attribute10,
				       m.c_attribute11,
				       m.c_attribute12,
				       m.c_attribute13,
				       m.c_attribute14,
				       m.c_attribute15,
				       m.c_attribute16,
				       m.c_attribute17,
				       m.c_attribute18,
				       m.c_attribute19,
				       m.c_attribute20,
				       m.c_attribute21,
				       m.c_attribute22,
				       m.c_attribute23,
				       m.c_attribute24,
				       m.c_attribute25,
				       m.c_attribute26,
				       m.c_attribute27,
				       m.c_attribute28,
				       m.c_attribute29,
				       m.c_attribute30,
				       m.c_attribute31,
				       m.c_attribute32,
				       m.c_attribute33,
				       m.c_attribute34,
				       m.c_attribute35,
				       m.c_attribute36,
				       m.c_attribute37,
				       m.c_attribute38,
				       m.c_attribute39,
				       m.c_attribute40,
				       m.c_attribute41,
				       m.c_attribute42,
				       m.c_attribute43,
				       m.c_attribute44,
				       m.c_attribute45,
				       m.c_attribute46,
				       m.c_attribute47,
				       m.c_attribute48,
				       m.c_attribute49,
				       m.c_attribute50,
				       m.srm_enabled_flag,
				       m.brand,
				       m.shelf_life,
				       m.agent_vendor_id,
				       m.agent_vendor_name,
				       m.packing_uom_code,
				       m.volume,
				       m.volume_uom_code,
				       m.import_flag,
				       m.item_name_id,
				       m.ean_code,
				       m.used_item_code,
				       m.item_level_code,
				       m.item_level_desc,
			           m.owner_company_id,
			           m.owner_company_name,
			           m.buyer_manager_id,
			           m.buyer_manager_name,
			           m.price,
			           m.currency_code,
			           m.start_date,
				       to_char(start_date, 'yyyy-mm-dd') start_date_desc,
			           m.end_date,
				       to_char(end_date, 'yyyy-mm-dd') end_date_desc,
			           (trunc(m.end_date) - trunc(SYSDATE)) expiry_date,
				       (select su.description
				          from sys_user su
				         where su.user_id = m.created_by) created_by_desc,
				       to_char(m.creation_date, 'yyyy-mm-dd') creation_date_desc
				  from pur_catelog_items_vl m,
				       fnd_tax_type_codes_bg t
				#WHERE_CLAUSE#
    		]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                begin
                    pur_catelog_item_pkg.approve_catelog_item(p_item_id         => ${@item_id},
                                                              p_operation       => ${@operation},
                                                              p_approve_comment => ${@approve_comment},
                                                              p_user_id         => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="m.buyer_manager_id = ${/session/@user_id}"/>
        <bm:data-filter expression="m.inventory_item_status_code = &apos;SUBMITTED&apos;"/>
        <bm:data-filter expression="t.tax_type_id(+) = m.default_tax_type_id"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="item_id" queryExpression="m.item_id = ${@item_id}"/>
        <bm:query-field name="item_desc" queryExpression="m.item_name like &apos;%&apos;|| ${@item_desc} || &apos;%&apos;"/>
        <bm:query-field name="item_category_id" queryExpression="m.item_category_id = ${@item_category_id}"/>
        <bm:query-field name="start_date" queryExpression="m.start_date &gt;= to_date(${@start_date},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="end_date" queryExpression="m.end_date &lt;= to_date(${@end_date},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="agent_vendor_name" queryExpression="m.agent_vendor_name like &apos;%&apos;|| ${@agent_vendor_name} || &apos;%&apos;"/>
        <bm:query-field name="owner_company_name" queryExpression="m.owner_company_name like &apos;%&apos;|| ${@owner_company_name} || &apos;%&apos;"/>
        <bm:query-field name="price_from" queryExpression="m.price &gt;= ${@price_from}"/>
        <bm:query-field name="price_to" queryExpression="m.price &lt;= ${@price_to}"/>
        <bm:query-field name="brand" queryExpression="m.brand like &apos;%&apos;|| ${@brand} || &apos;%&apos;"/>
        <bm:query-field name="item_specs" queryExpression="m.item_specs like &apos;%&apos;|| ${@item_specs} || &apos;%&apos;"/>
        <bm:query-field name="item_model" queryExpression="m.item_model like &apos;%&apos;|| ${@item_model} || &apos;%&apos;"/>
        <bm:query-field name="shelf_life" queryExpression="m.shelf_life like &apos;%&apos;|| ${@shelf_life} || &apos;%&apos;"/>
        <bm:query-field name="expiry_date" queryExpression="(trunc(m.end_date) - trunc(SYSDATE)) &lt;= ${@expiry_date}"/>
        <bm:query-field name="quotation_result_number" queryExpression="exists (select 1 from pur_quotation_result r where r.quotation_result_id = m.data_source_id and m.data_source = &apos;DEMAND_POOL&apos; and r.quotation_result_number like &apos;%&apos;||${@quotation_result_number}||&apos;%&apos;)"/>
    </bm:query-fields>
</bm:model>
