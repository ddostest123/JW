<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lily  
    $Date: 2013-1-21 下午06:50:56  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="v.display_po_number desc, v.line_num, v.batch_line_num">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*,
					(v.quantity * v.original_unit_price) line_amount
                FROM
                    (SELECT
                        l.pur_line_id,
                        l.pur_header_id,
                        h.company_id,
                        h.company_name,
                        h.vendor_id,
                        h.vendor_code,
                        h.vendor_name,
                        NVL(h.coop_company_id, -1) AS vendor_company_id,
                        h.segment1,
                        h.display_po_number,
                        h.revision_num,
                        h.release_id,
                        h.release_num,
                        h.display_release_num,
                        l.line_num,
                        l.item_id,
                        l.item_description,
                        DECODE(l.is_returned_flag, 'Y', '-'
                        || rtrim(TO_CHAR(l.quantity, 'FM99999999990.99999999'), '.'), 'N', rtrim(TO_CHAR(l.quantity, 'FM99999999990.99999999'), '.'), rtrim(TO_CHAR(l.quantity, 'FM99999999990.99999999'), '.')) AS quantity,
                        l.unit_price,
                        (SELECT DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_po_05(p_business_group => h.owner_business_group), 'Y', fnd_document_control_pkg.get_reality_value(p_rule_code => 'PRICE_SECRECY', p_role_id => ${/session/@role_id}, p_foundation_code => 'PUR_PO', p_document_id => h.pur_header_id, p_control_area => 'INTERNAL', p_business_group => ${/session/@business_group}, p_value => l.unit_price * (1 +
                        (SELECT
                            tc.bg_tax_type_rate
                        FROM
                            fnd_tax_type_codes_bg tc
                        WHERE
                            tc.tax_type_id    = l.tax_code_id AND
                            tc.business_group = h.owner_business_group
                        )/100)), l.original_unit_price) FROM dual) AS original_unit_price,
                        (SELECT
                            NVL(msi.display_item_code, l.item_code)
                        FROM
                            mtl_system_items msi
                        WHERE
                            msi.item_id = l.item_id
                        ) item_code,
                        NVL(
                        (SELECT
                            vl.uom_desc
                        FROM
                            fnd_uom_codes_vl vl
                        WHERE
                            l.unit_meas_lookup_code = vl.uom_code AND
                            vl.business_group       = h.owner_business_group
                        ), l.unit_meas_lookup_code) unit_meas_lookup_code,
                        l.category_id,
                        l.category_name,
                        h.type_lookup_code,
                        NVL(h.type_lookup_desc, h.erp_po_type_desc) type_lookup_desc,
                        h.coop_company_id,
                        h.coop_business_group,
                        h.owner_company_id,
                        h.owner_business_group,
                        h.inv_organization_name,
                        l.actual_receiver_code,
                        l.actual_receiver_name,
                        l.ship_to_location_address,
                        l.inv_organization_id,
                        (SELECT
                            pll.need_by_date
                        FROM
                            pur_line_locations_all pll
                        WHERE
                            pll.pur_line_id = l.pur_line_id AND
                            ROWNUM          = 1
                        ) need_by_date,
                        (SELECT
                            TO_CHAR(pll.need_by_date, 'yyyy-mm-dd')
                        FROM
                            pur_line_locations_all pll
                        WHERE
                            pll.pur_line_id = l.pur_line_id AND
                            ROWNUM          = 1
                        ) need_by_date_fmt,
                        ap.arrival_plan_id,
                        NVL(ap.status, 'NEW') AS status,
                        NVL(ap.line_num, 1) AS batch_line_num,
                        TO_CHAR(ap.arrival_date, 'yyyy-mm-dd') AS arrival_date,
                        ap.arrival_quantity,
                        ap.arrival_price,
                        ap.arrival_comments,
                        TO_CHAR(ap.last_update_date, 'YYYY-MM-DD HH24:MI:SS') AS last_update_date,
                        NULL useless_id_1,
                        NULL useless_id_3,
                        NULL useless_id_4,
                        NULL useless_id_5,
                        NULL useless_id_6,
                        NULL useless_id_7,
                        NULL useless_id_8,
                        NULL useless_id_9,
                        NULL useless_id_10,
                        NULL useless_id_11,
                        l.line_desc
                    FROM
                        pur_headers_all_v h,
                        pur_lines_all l,
                        fu_pur_arrival_plan ap
                    WHERE
                        h.pur_header_id         = l.pur_header_id AND
                        h.coop_business_group = ${/session/@business_group} AND
                        ap.pur_line_id(+)       = l.pur_line_id AND
                        h.last_version          = 'Y' AND
		                h.srm_status <> 'DELETED' AND
                        l.cancel_flag = 'N' AND
                        l.is_returned_flag <> 'Y' AND
                        h.srm_status           IN ('RELEASED','CONFIRMED') AND
                        (
                            h.release_rule_code  = 'ALL' OR
                            h.release_rule_code  = 'VENDOR' OR
                            h.release_rule_code  = 'INVALID' OR
                            h.release_rule_code IS NULL
                        ) AND
                       EXISTS
                        (SELECT
                            1
                        FROM
                            pur_po_relation_vendors prv,
                            pur_po_rlt_vendor_auth pva
                        WHERE
                            h.pur_header_id         = prv.pur_header_id AND
                            prv.po_rltion_vendor_id = pva.po_rltion_vendor_id AND
                            prv.vendor_id           = h.vendor_id AND
                            pva.document_type       = 'PO' AND
                            pva.query_flag          = 'Y'
                        )
                    ) v #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="display_po_number" queryExpression="display_po_number like &apos;%&apos;||trim(${@display_po_number})||&apos;%&apos;"/>
        <bm:query-field name="item_name" queryExpression="((item_description like &apos;%&apos;||${@item_name}||&apos;%&apos;) or (item_code like &apos;%&apos;||${@item_name}||&apos;%&apos;))"/>
        <bm:query-field name="company_id" queryExpression="company_id = ${@company_id}"/>
        <bm:query-field name="line_num" queryExpression="line_num = ${@line_num}"/>
        <bm:query-field name="type_lookup_code" queryExpression="type_lookup_code = ${@type_lookup_code}"/>
        <bm:query-field name="status_desc" queryExpression="status = ${@status}"/>
        <bm:query-field name="type_lookup_desc" queryExpression="type_lookup_desc like &apos;%&apos;||trim(${@type_lookup_desc})||&apos;%&apos;"/>
        <bm:query-field name="vendor_id" queryExpression="vendor_id = ${@vendor_id}"/>
        <bm:query-field name="item_id" queryExpression="item_id = ${@item_id}"/>
        <bm:query-field name="need_by_date_from" queryExpression="need_by_date &gt;= to_date(${@need_by_date_from},&apos;YYYY-MM-DD&apos;)"/>
        <bm:query-field name="need_by_date_to" queryExpression="need_by_date &lt;= to_date(${@need_by_date_to},&apos;YYYY-MM-DD&apos;)+1"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
    <authority foundation_code="PUR_PO">
        <authority-segment source_alias="v" source_name="useless_id_1" type="CREATER"/>
        <authority-segment source_alias="v" source_name="coop_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id_3" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="vendor_company_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="owner_company_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id_10" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_09" type="SALES_PRODUCTION"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="VENDOR_SITE"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
