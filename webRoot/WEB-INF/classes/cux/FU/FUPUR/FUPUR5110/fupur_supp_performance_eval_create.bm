<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    fe.report_id,
                    fe.report_no,
                    fe.status,
                    to_char(fe.filing_time,'yyyy-mm-dd') filing_time,
                    (SELECT
                        fl.company_full_name
                    FROM
                        fnd_companies_vl fl
                    WHERE
                        fl.company_id=fe.vendor_id
                    ) vendor_name,
                    fe.evaluation_cycle,
                    to_char(fe.evaluation_date_from,'yyyy-mm-dd') evaluation_date_from,
                    to_char(fe.evaluation_date_end,'yyyy-mm-dd') evaluation_date_end,
                    fe.evaluation_score,               
                    fe.purchasing_engineer,
                    (SELECT s.description FROM sys_user s WHERE s.user_id= fe.purchasing_engineer
                    ) purchasing_description,
                    fe.quality_engineer,
                    (SELECT s.description FROM sys_user s WHERE s.user_id= fe.quality_engineer
                    ) quality_description,
                    fe.order_delivery_dept,
                    (SELECT s.description FROM sys_user s WHERE s.user_id= fe.order_delivery_dept
                    ) order_description,
                    fe.technical_engineer,
                    (SELECT s.description FROM sys_user s WHERE s.user_id= fe.technical_engineer
                    ) technical_description,                                       
                    fe.cost_all_score,
                    fe.cost_weight,
                    fe.cost_weighted_score,                   
                    fe.quality_all_score,
                    fe.quality_weight,
                    fe.quality_weighted_score,                                       
                    fe.availability_all_score,
                    fe.availability_weight,
                    fe.availability_weighted_score,                   
                    fe.technical_all_score,
                    fe.technical_weight,
                    fe.technical_weighted_score, 
                    fe.transfer_flag,                                                       
                    fe.owner_business_group,
                    fe.owner_company_id,
                    fe.coop_business_group,
                    fe.coop_company_id
                FROM
                    fu_pur_supp_per_eval fe
                WHERE
                    fe.report_id = ${/parameter/@report_id}
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="report_id" input="false" output="true"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                BEGIN
                    fu_pur_supp_per_eval_pkg.insert_per_eval_report( 
                    x_report_id => ${@report_id},
                    p_filing_time => ${@filing_time},
                    p_evaluation_cycle => ${@evaluation_cycle}, 
                    p_evaluation_date_from => to_date(${@evaluation_date_from},'YYYY-MM-DD'), 
                    p_evaluation_date_end => to_date(${@evaluation_date_end},'YYYY-MM-DD'), 
                    p_vendor_id => ${@vendor_id}, 
                    p_vendor_code=>${@vendor_code},
                    p_evaluation_score => ${@evaluation_score}, 
                    p_purchasing_engineer => ${@purchasing_engineer}, 
                    p_quality_engineer => ${@quality_engineer}, 
                    p_order_delivery_dept => ${@order_delivery_dept}, 
                    p_technical_engineer => ${@technical_engineer}, 
                    p_cost_all_score => ${@cost_all_score}, 
                    p_cost_weight => ${@cost_weight}, 
                    p_cost_weighted_score => ${@cost_weighted_score}, 
                    p_quality_all_score => ${@quality_all_score}, 
                    p_quality_weight => ${@quality_weight}, 
                    p_quality_weighted_score => ${@quality_weighted_score}, 
                    p_availability_all_score => ${@availability_all_score}, 
                    p_availability_weight => ${@availability_weight}, 
                    p_availability_weighted_score => ${@availability_weighted_score}, 
                    p_technical_all_score => ${@technical_all_score}, 
                    p_technical_weight => ${@technical_weight}, 
                    p_technical_weighted_score => ${@technical_weighted_score}, 
                    p_owner_business_group => ${/session/@business_group}, 
                    p_owner_company_id => ${/session/@company_id}, 
                    p_coop_business_group => ${@coop_business_group}, 
                    p_coop_company_id => ${@vendor_id}, 
                    p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
        		begin
        			fu_pur_supp_per_eval_pkg.submit_calculate_all(p_report_id => ${@report_id}, 
							                    	     p_user_id          => ${/session/@user_id});
        		end;
        	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
                    fu_pur_supp_per_eval_pkg.update_per_eval_report( p_report_id => ${@report_id}, p_technical_engineer => ${@technical_engineer}, p_cost_all_score => ${@cost_all_score}, p_cost_weighted_score => ${@cost_weighted_score}, p_quality_all_score => ${@quality_all_score}, p_quality_weighted_score=>${@quality_weighted_score}, p_availability_all_score => ${@availability_all_score}, p_availability_weighted_score => ${@availability_weighted_score}, p_technical_all_score => ${@technical_all_score}, p_technical_weighted_score => ${@technical_weighted_score}, p_submit_flag => ${@submit_flag}, p_transfer_flag => ${@transfer_flag}, p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
                BEGIN
                    fu_pur_supp_per_eval_pkg.update_per_eval_status(p_report_id => ${@report_id},p_status => ${@status}, p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
