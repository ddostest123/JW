<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: shenjun  
    $Date: 2016-11-3 11:02:20 
    $Revision: 1.0  
    $Purpose: 丹姿送货单创建，入口页面数据查询BM（采购订单信息查询）
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="v.po_number desc, v.po_line_num, v.line_num">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT rownum AS line_sequence,
				       v.*
				  FROM (SELECT t.arrival_notice_id,
				               nvl(t.status,
				                   'NEW') status,
				               (SELECT b.code_value_name
				                  FROM sys_codes_vl       a,
				                       sys_code_values_vl b
				                 WHERE a.code_id = b.code_id
				                       AND a.code = 'DZ_ARRIVAL_NOTIFY_STATUS'
				                       AND b.code_value = nvl(t.status,
				                                              'NEW')) AS status_display,
				               t.pur_header_id,
				               t.po_number,
				               t.po_line_num,
				               t.line_num,
				               t.item_id,
				               t.item_code,
				               t.item_name,
				               t.ship_quantity,
				               t.uom_code,
				               t.ship_date,
				               to_char(t.ship_date,
				                       'YYYY-MM-DD') ship_date_fmt,
				               t.ship_to_org_id,
				               (SELECT io.inv_organization_code
				                  FROM inv_organizations io
				                 WHERE io.inv_organization_id = t.ship_to_org_id) AS ship_to_org_code,
				               (SELECT io.description FROM inv_organizations_vl io WHERE io.inv_organization_id = t.ship_to_org_id) AS ship_to_org_name,
				               t.total_quantity,
				               t.received_quantity,
				               t.version AS revision_num,
				               t.owner_business_group,
				               t.owner_company_id,
				               --t.coop_business_group,
				               --t.coop_company_id,
				               (SELECT pv.coop_company_id
				                  FROM pur_headers_all h,
				                       pur_vendors       pv
				                 WHERE pv.vendor_id = h.vendor_id
				                       AND h.pur_header_id = t.pur_header_id) AS coop_company_id,
				               (SELECT pv.coop_business_group
				                  FROM pur_headers_all h,
				                       pur_vendors       pv
				                 WHERE pv.vendor_id = h.vendor_id
				                       AND h.pur_header_id = t.pur_header_id) AS coop_business_group,
				               (SELECT h.business_unit_id FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS business_unit_id,
				               (SELECT h.vendor_code FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS vendor_code,
				               (SELECT h.vendor_name FROM pur_headers_all_v h WHERE h.pur_header_id = t.pur_header_id) AS vendor_name,
				               
				               (SELECT h.company_id FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS company_id,
				               (SELECT h.company_code FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS company_code,
				               (SELECT h.company_name FROM pur_headers_all_v h WHERE h.pur_header_id = t.pur_header_id) AS company_name,
				               (SELECT h.vendor_id FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS vendor_id,
				               attribute1 AS line_desc,
						       (SELECT udv.category_udf_id
						          FROM mtl_category_classify_items    cci,
						               mtl_categories_user_defined udv
						         WHERE t.item_id = cci.item_id
						               AND cci.category_udf_id = udv.category_udf_id
						               AND udv.enabled_flag = 'Y') AS category_id,
						       (SELECT udv.category_name
						          FROM mtl_category_classify_items    cci,
						               mtl_categories_user_defined_vl udv
						         WHERE t.item_id = cci.item_id
						               AND cci.category_udf_id = udv.category_udf_id
						               AND udv.enabled_flag = 'Y') AS category_name,
						       (SELECT h.agent_id FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS agent_id,
						       (SELECT h.agent_name FROM pur_headers_all h WHERE h.pur_header_id = t.pur_header_id) AS agent_name,
                       (SELECT nvl(pll.frozen_flag, 'N')  FROM pur_line_locations_all pll WHERE pll.pur_line_location_id = t.pur_line_location_id) AS frozen_flag,
                       (SELECT decode(pll.frozen_flag, 'Y', '是', '否') FROM pur_line_locations_all pll WHERE pll.pur_line_location_id = t.pur_line_location_id) AS frozen_flag_desc,
				               NULL AS useless_id
				          FROM dz_inv_arrival_notices t) v
 				#AUTHORIY_FROM# 
 				#WHERE_CLAUSE# 
 				#AUTHORIY_WHERE# 
 				#ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="po_number" queryExpression="v.po_number like &apos;%&apos;||trim(${@po_number})||&apos;%&apos;"/>
        <bm:query-field name="po_line_num" queryExpression="v.po_line_num like &apos;%&apos;||trim(${@po_line_num})||&apos;%&apos;"/>
        <bm:query-field name="item_id" queryExpression="v.item_id = ${@item_id}"/>
        <bm:query-field name="ship_date_from" queryExpression="v.ship_date &gt;= to_date(${@ship_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_to" queryExpression="v.ship_date &lt;= to_date(${@ship_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_to_org_id" queryExpression="v.ship_to_org_id = ${@ship_to_org_id}"/>
        <bm:query-field name="line_num" queryExpression="v.line_num like &apos;%&apos;||trim(${@line_num})||&apos;%&apos;"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="vendor_id" queryExpression="v.vendor_id = ${@vendor_id}"/>
        <bm:query-field name="category_id" queryExpression="v.category_id = ${@category_id}"/>
        <bm:query-field name="agent_id" queryExpression="v.agent_id = ${@agent_id}"/>
        <bm:query-field name="frozen_flag" queryExpression="((${@frozen_flag} = &apos;Y&apos; and frozen_flag = &apos;N&apos;) or (${@frozen_flag} = &apos;N&apos; and 1=1))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="v.owner_business_group = ${/session/@business_group}"/>
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="v" source_name="owner_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CREATER"/>
        <authority-segment source_alias="v" source_name="useless_id" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="ship_to_org_id" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="coop_company_id" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id" type="SALES_PRODUCTION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
      		Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
          	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
