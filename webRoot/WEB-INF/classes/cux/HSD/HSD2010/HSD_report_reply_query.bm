<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
		SELECT t.*
		  FROM (SELECT h.header_id,
				       h.application_number,
				       h.status,
				       (SELECT v.flex_desc
				          FROM fnd_flex_values_vl v, fnd_flex_value_sets s
				         WHERE v.flex_value_set_id = s.flex_value_set_id
				           AND s.enabled_flag = 'Y'
				           AND s.flex_value_set_code = 'HSD_REPORT_STATUS'
				           AND v.flex_value = h.status) status_display,
				       h.vendor_id,
				       (SELECT f.company_code FROM fnd_companies_vl f WHERE f.company_id = h.vendor_id) vendor_code,
				       (SELECT f.company_full_name FROM fnd_companies_vl f WHERE f.company_id = h.vendor_id) vendor_name,
				       h.creation_date,
				       (select description from sys_user s where s.user_id = h.created_by) created_by 
				  FROM hsd_report_header h,
				  	   fnd_companies_vl  fc
				 where h.vendor_id = fc.company_id
				   and fc.business_group = ${/session/@business_group}
				   and h.status <> 'NEW'
				) t
 				#WHERE_CLAUSE#
 				 order by t.creation_date desc
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
	    		begin
				    jx_grade_notice_pkg.modify_grade_notice(p_header_id           => ${@header_id},
							                                p_vendor_id           => ${@vendor_id},
							                                p_evaluation_quarter  => ${@evaluation_quarter},
							                                p_grade_group         => ${@grade_group_code},
							                                p_quality             => ${@quality},
							                                p_delivery_date       => ${@delivery_date},
							                                p_comprehensive_item  => ${@comprehensive_item},
							                                p_user_id             => ${/session/@user_id},
							                                p_cause_analysis      => ${@cause_analysis},
							                                p_improvement_measures=> ${@improvement_measures},
							                                p_grade_year          => ${@grade_year}); 
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
	    		begin
				    jx_grade_notice_pkg.delete_grade_notice(p_header_id                => ${@header_id},
				                       						p_user_id                  => ${/session/@user_id});
				end;
	    	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
	    		begin
				    jx_grade_notice_pkg.reply_grade_notice(p_header_id               => ${@header_id},
				                        				   p_user_id                 => ${/session/@user_id});
				end;
	    	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="vendor_name" queryExpression="t.vendor_name = ${@vendor_name}"/>
        <bm:query-field name="application_number" queryExpression="t.application_number like &apos;%&apos;||trim(${@application_number})||&apos;%&apos; "/>
        <bm:query-field name="status_display" queryExpression="t.status_display = ${@status_display}"/>
        <bm:query-field name="item_name" queryExpression="t.item_id = ${@item_id}"/>
    </bm:query-fields>
</bm:model>
