<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*,
                    (v.need_del_quantity - v.trx_amount1 - v.trx_amount2 ) un_trx_amount, --未交货数量
                    (v.trx_amount1 + v.trx_amount2) trx_amount,
                    (SELECT
                        MAX(v.del_plan_line_num) AS max_del_line_num
                    FROM
                        pur_del_plan_lines pl
                    WHERE
                        pl.header_id = v.header_id
                    ) AS max_del_line_num,
                    (v.remain_split_quantity_all - v.trx_amount2) remain_split_quantity
                FROM
                    (SELECT
                        lt.line_id,
                        lt.header_id,
                        lt.del_plan_line_num,
                        lt.source_header_id,
                        lt.source_line_id,
                        lt.segment1,
                        lt.line_num,
                        lt.source_po_header_id,
                        lt.source_po_line_id,
                        lt.item_code,
                        lt.item_name,
                        lt.unit_meas_lookup_code,
                        lt.quantity,
                        lt.can_split_quantity,
                        lt.need_del_quantity,
                        TO_CHAR(lt.po_create_date,'YYYY-MM-DD HH24:MI:SS') po_create_date,
                        TO_CHAR(lt.po_need_date,'YYYY-MM-DD') po_need_date,
                        NVL(TO_CHAR(lt.need_arrive_date,'YYYY-MM-DD'),'待通知') need_arrive_date,
                        TO_CHAR(lt.supplier_reply_date,'YYYY-MM-DD') supplier_reply_date,
                        lt.supplier_comment,
                        lt.agent_comment,
                        lt.packing_standard,
                        lt.job_number,
                        lt.created_by,
                        TO_CHAR(lt.creation_date,'YYYY-MM-DD HH24:MI:SS') creation_date,
                        lt.last_updated_by,
                        TO_CHAR(lt.last_update_date,'YYYY-MM-DD HH24:MI:SS') last_update_date,
                        lt.is_split_line,
                        lt.deliver_status,
                        NVL(lt.cancel_flag,'N') cancel_flag,
                        (
                        (SELECT
                            NVL(la.quantity,0)
                        FROM
                            pur_headers_all h,
                            pur_lines_all la,
                            pur_line_locations_all pa
                        WHERE
                            h.pur_header_id         = la.pur_header_id AND
                            h.display_po_number     = lt.segment1 AND
                            la.line_num             = lt.line_num AND
                            pa.pur_line_location_id = lt.source_po_line_location_id
                        ) -
                        (SELECT
                            NVL(SUM(pl.need_del_quantity), 0)
                        FROM
                            pur_del_plan_lines pl
                        WHERE
                            pl.segment1 = lt.segment1 AND
                            pl.line_num = lt.line_num AND
                            --   pl.source_po_line_location_num = lt.source_po_line_location_num AND
                            NVL(PL.CANCEL_FLAG,'N') = 'N'
                        )) remain_split_quantity_all, --剩余可拆数量,
                        lt.send_address send_address1,
                        CASE
                            WHEN lt.received_inv_org IS NULL
                            THEN
                                (SELECT
                                    iol.description
                                FROM
                                    inv_organizations_vl iol,
                                    pur_del_plan_headers h
                                WHERE
                                    h.header_id          = lt.header_id AND
                                    iol.business_unit_id = h.business_unit_id AND
                                    rownum               = 1
                                )
                            ELSE
                                (SELECT
                                    iol.description
                                FROM
                                    inv_organizations_vl iol
                                WHERE
                                    iol.es_inv_org_id = lt.received_inv_org AND
                                    rownum            = 1
                                )
                        END send_address,
                        lt.item_specs,
                        lt.item_model,
                        (SELECT
                            NVL(SUM(DECODE(rcv_trx_type, 'RETURN_DIRECT', prtl.trx_quantity * -1, prtl.trx_quantity)),0) trx_amount
                        FROM
                            pur_rcv_trx_lines prtl,
                            pur_rcv_trx_headers prth,
                            inv_asn_headers ih,
                            inv_asn_lines il
                        WHERE
                            prtl.rcv_trx_header_id        = prth.rcv_trx_header_id AND
                            prth.processed_flag           = 'Y' AND
                            prtl.from_po_line_id          = lt.source_po_line_id AND
                            prtl.rcv_trx_type            IN ('RECEIVE_STANDARD','RETURN_DIRECT') AND
                            ih.asn_number                 = prtl.from_asn_display_number AND
                            ih.asn_header_id              = il.asn_header_id AND
                            il.asn_line_num               = prtl.from_asn_line_num AND
                            il.del_plan_line_id           = lt.line_id AND
                            prtl.from_po_line_location_id = lt.source_po_line_location_id
                        ) trx_amount1,
                        (SELECT
                            NVL(SUM(DECODE(rcv_trx_type, 'RETURN_DIRECT', prtl.trx_quantity * -1, prtl.trx_quantity)),0) trx_amount
                        FROM
                            pur_rcv_trx_lines prtl,
                            pur_rcv_trx_headers prth
                        WHERE
                            prtl.rcv_trx_header_id        = prth.rcv_trx_header_id AND
                            prth.processed_flag           = 'Y' AND
                            prtl.from_po_line_id          = lt.source_po_line_id AND
                            prtl.rcv_trx_type            IN ('RECEIVE_STANDARD','RETURN_DIRECT') AND
                            prtl.from_asn_line_num       IS NULL AND
                            prtl.from_po_line_location_id = lt.source_po_line_location_id
                        ) trx_amount2,
                        lt.source_po_line_location_id,
                        lt.source_po_line_location_num,
                        (SELECT
                            pla.quantity
                        FROM
                            pur_line_locations_all pla
                        WHERE
                            pla.pur_line_location_id = lt.source_po_line_location_id
                        ) location_quantity,
                        lt.source_po_line_loc_new_num,
                        lt.item_control_comment,
                        (SELECT
                            MAX(l.source_po_line_loc_new_num)
                        FROM
                            pur_del_plan_lines l
                        WHERE
                            l.line_num  = lt.line_num AND
                            l.header_id = lt.header_id
                        ) max_location_num,
                        (SELECT
                            v.code_value_name
                        FROM
                            sys_code_values_v v
                        WHERE
                            v.code       = 'PUR_LINE_LOCATION_STATUS' AND
                            v.code_value =
                            (SELECT
                                pla.closed_code
                            FROM
                                pur_line_locations_all pla
                            WHERE
                                pla.pur_line_location_id = lt.source_po_line_location_id
                            )
                        ) closed_code
                    FROM
                        pur_del_plan_lines lt #WHERE_CLAUSE#
                    ORDER BY
                        lt.segment1,
                        lt.line_num,
                        lt.del_plan_line_num
                    ) v
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="exists (select 1 from pur_line_locations_all l where l.pur_line_location_id = lt.source_po_line_location_id and l.cancel_flag = &apos;N&apos;)"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="header_id" queryExpression="lt.header_id = ${@header_id}"/>
    </bm:query-fields>
</bm:model>