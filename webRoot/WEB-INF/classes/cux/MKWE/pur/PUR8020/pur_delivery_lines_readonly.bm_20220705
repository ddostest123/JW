<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*,
                    (v.quantity - v.trx_amount) un_trx_amount_old,      --未交货数量
                    (v.location_quantity - v.trx_amount) un_trx_amount, --未交货数量
                    (SELECT
                        MAX(v.del_plan_line_num) AS max_del_line_num
                    FROM
                        pur_del_plan_lines pl
                    WHERE
                        pl.header_id = v.header_id
                    ) AS max_del_line_num,
                    (v.remain_split_quantity_all) remain_split_quantity
                FROM
                    (SELECT
                        lt.line_id,
                        lt.header_id,
                        lt.del_plan_line_num,
                        lt.source_header_id,
                        lt.source_line_id,
                        lt.segment1,
                        lt.line_num,
                        lt.source_po_header_id,
                        (SELECT
                            es.es_po_header_id
                        FROM
                            pur_headers_all_es es
                        WHERE
                            es.pur_header_id = lt.source_po_header_id
                        ) es_po_header_id,
                        lt.source_po_line_id,
                        (SELECT
                            es.es_po_line_id
                        FROM
                            pur_lines_all_es es
                        WHERE
                            es.pur_line_id = lt.source_po_line_id
                        ) es_po_line_id,
                        (SELECT
                            pha.srm_status
                        FROM
                            pur_headers_all pha
                        WHERE
                            pha.pur_header_id = lt.source_po_header_id
                        ) po_status,
                        lt.item_code,
                        lt.item_name,
                        lt.unit_meas_lookup_code,
                        lt.quantity,
                        lt.can_split_quantity,
                        lt.need_del_quantity,
                        TO_CHAR(lt.po_create_date,'YYYY-MM-DD HH24:MI:SS') po_create_date,
                        TO_CHAR(lt.po_need_date,'YYYY-MM-DD') po_need_date,
                        NVL(TO_CHAR(lt.need_arrive_date,'YYYY-MM-DD'),'待通知') need_arrive_date,
                        TO_CHAR(lt.supplier_reply_date,'YYYY-MM-DD') supplier_reply_date,
                        lt.supplier_comment,
                        lt.agent_comment,
                        lt.packing_standard,
                        lt.job_number,
                        lt.created_by,
                        (SELECT s.user_name FROM sys_user s WHERE s.user_id = lt.created_by
                        ) user_name,
                        TO_CHAR(lt.creation_date,'YYYY-MM-DD HH24:MI:SS') creation_date,
                        lt.last_updated_by,
                        TO_CHAR(lt.last_update_date,'YYYY-MM-DD HH24:MI:SS') last_update_date,
                        lt.is_split_line,
                        lt.item_specs,
                        lt.item_model,
                        lt.business_unit_id,
                        (SELECT
                            es.es_business_unit_id
                        FROM
                            fnd_business_unit_es es
                        WHERE
                            es.business_unit_id = h.business_unit_id
                        ) ou_id,
                        lt.business_unit_name,
                        lt.send_address,
                        (SELECT
                            iol.description
                        FROM
                            inv_organizations_vl iol
                        WHERE
                            (
                                (
                                    lt.received_inv_org IS NULL AND
                                    iol.business_unit_id = h.business_unit_id
                                )
                                OR
                                (
                                    lt.received_inv_org IS NOT NULL AND
                                    iol.es_inv_org_id    = lt.received_inv_org
                                )
                            )
                            AND
                            rownum = 1
                        ) received_inv_org,
                        (SELECT
                            NVL(SUM(DECODE(rcv_trx_type, 'RETRUN_TO_VENDOR', prtl.trx_quantity * -1, prtl.trx_quantity)),0) trx_amount
                        FROM
                            pur_rcv_trx_lines prtl,
                            pur_rcv_trx_headers prth
                        WHERE
                            prtl.rcv_trx_header_id        = prth.rcv_trx_header_id AND
                            prth.processed_flag           = 'Y' AND
                            prtl.from_po_line_id          = lt.source_po_line_id AND
                            prtl.business_group           = ${/session/@business_group} AND
                            prth.owner_business_group     = ${/session/@business_group} AND
                            prtl.rcv_trx_type            IN ('RECEIVE_STANDARD','RETRUN_TO_VENDOR') AND
                            prtl.from_po_line_location_id = lt.source_po_line_location_id
                        ) trx_amount,
                        (
                        (SELECT
                            NVL(pa.quantity,0)
                        FROM
                            pur_headers_all h,
                            pur_lines_all la,
                            pur_line_locations_all pa
                        WHERE
                            h.pur_header_id         = la.pur_header_id AND
                            h.display_po_number     = lt.segment1 AND
                            la.line_num             = lt.line_num AND
                            pa.pur_line_location_id = lt.source_po_line_location_id AND
                            pa.cancel_flag         <> 'Y' AND
                            pa.closed_code        <>'CLOSED_FOR_RECEVING' AND
                            pa.closed_code        <>'CLOSED'
                        ) -
                        (SELECT
                            NVL(SUM(pl.need_del_quantity), 0)
                        FROM
                            pur_del_plan_lines pl
                        WHERE
                            pl.segment1                   = lt.segment1 AND
                            pl.line_num                   = lt.line_num AND
                            pl.source_po_line_location_id = lt.source_po_line_location_id AND
                            NVL(PL.CANCEL_FLAG,'N')       = 'N'
                        )) remain_split_quantity_all, --剩余可拆数量,
                        lt.source_po_line_location_id,
                        lt.source_po_line_location_num,
                        (SELECT
                            pla.quantity
                        FROM
                            pur_line_locations_all pla
                        WHERE
                            pla.pur_line_location_id = lt.source_po_line_location_id AND
                            pla.cancel_flag         <> 'Y' AND
                            pla.closed_code         <>'CLOSED_FOR_RECEVING' AND
                            pla.closed_code         <>'CLOSED'
                        ) location_quantity,
                        lt.source_po_line_loc_new_num,
                        lt.item_control_comment,
                        (SELECT
                            MAX(l.source_po_line_loc_new_num)
                        FROM
                            pur_del_plan_lines l
                        WHERE
                            l.line_num  = lt.line_num AND
                            l.header_id = lt.header_id
                        ) max_location_num,
                        TO_CHAR(lt.pur_check_date,'YYYY-MM-DD') pur_check_date,
                        pur_delivery_plan_pkg.get_leadtime(lt.item_code,h.vendor_code,h.business_unit_name) pur_leadtime,
                        DECODE(lt.confirmed_flag,'Y','是','否') confirmed_flag
                    FROM
                        pur_del_plan_lines lt,
                        pur_del_plan_headers h #WHERE_CLAUSE#
                    ORDER BY
                        lt.segment1,
                        lt.line_num,
                        lt.del_plan_line_num
                    ) v
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="lt.header_id = h.header_id"/>
        <bm:data-filter expression="exists (select 1 from pur_lines_all l where l.pur_line_id = lt.source_po_line_id and l.cancel_flag = &apos;N&apos; and l.closed_flag = &apos;N&apos;)"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="header_id" queryExpression="lt.header_id = ${@header_id}"/>
    </bm:query-fields>
</bm:model>
