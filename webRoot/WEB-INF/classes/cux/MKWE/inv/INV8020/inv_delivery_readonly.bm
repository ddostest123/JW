<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    h.header_id,
                    h.del_plan_number,
                    h.vendor_id,
                    h.vendor_code,
                    h.vendor_name,
                    h.inv_organization_id,
                    h.inv_organization_name,
                    h.owner_business_group,
                    h.del_plan_status,
                    h.coop_company_id,
                    h.owner_company_id,
                    h.coop_business_group,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_codes sc,
                        sys_code_values_vl scv
                    WHERE
                        sc.code          = 'PUR_DEL_PLAN_STATUS' AND
                        sc.code_id       = scv.code_id AND
                        scv.code_value   = h.del_plan_status AND
                        sc.enabled_flag  = 'Y' AND
                        scv.enabled_flag = 'Y'
                    ) del_plan_status_desc,
                    h.user_id,
                    (SELECT su.description FROM sys_user su WHERE h.created_by = su.user_id
                    ) user_name,
                    h.created_by,
                    TO_CHAR(h.creation_date,'YYYY-MM-DD HH24:MI:SS') creation_date,
                    h.last_updated_by,
                    TO_CHAR(h.last_update_date,'YYYY-MM-DD HH24:MI:SS') last_update_date,
                    h.business_unit_id,
                    h.business_unit_name,
                    h.po_number,
                    (select ha.comments from pur_Headers_all ha where ha.display_po_number = h.po_number and ((ha.comments is not null and rownum =1) or rownum =1)) pur_comments,
                    h.suplier_desc
                FROM
                    pur_del_plan_headers h #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE#
                ORDER BY
                    h.creation_date DESC
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="del_plan_number" queryExpression="h.del_plan_number like &apos;%&apos;||${@del_plan_number}||&apos;%&apos;"/>
        <bm:query-field name="pur_comments" queryExpression="(select ha.comments from pur_Headers_all ha where ha.display_po_number = h.po_number and ((ha.comments is not null and rownum =1) or rownum =1)) like &apos;%&apos;||${@pur_comments}||&apos;%&apos;"/>
        <bm:query-field name="inv_organization_id" queryExpression="h.inv_organization_id = ${@inv_organization_id}"/>
        <bm:query-field name="segment1" queryExpression="EXISTS (SELECT * from pur_del_plan_lines l WHERE l.header_id = h.header_id AND l.segment1 like &apos;%&apos;||${@segment1}||&apos;%&apos;)"/>
        <bm:query-field name="header_id" queryExpression="h.header_id = ${@header_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter name="business_group" expression="h.coop_business_group = ${/session/@business_group}"/>
        <!-- <bm:data-filter name="del_plan_status" expression="h.del_plan_status = &apos;CONFIRMED&apos;"/> -->
        <bm:data-filter expression="exists (select 1 from pur_headers_all ha where ha.display_po_number = h.po_number and ha.cancel_flag = &apos;N&apos;)"/>
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="h" source_name="coop_company_id" type="COMPANY"/>
        <authority-segment source_alias="h" source_name="owner_company_id" type="CLIENT"/>
        <authority-segment source_alias="h" source_name="inv_organization_id" type="INV_ORGANIZATION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
            var cx = Packages.aurora.javascript.Context.getCurrentContext();
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
            Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
