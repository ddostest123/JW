<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
              SELECT 
                  v.import_temp_id
                 ,v.batch_id
                 ,v.pur_del_line_id
                 ,v.del_plan_number
                 ,v.vendor_name
                 ,v.po_number
                 ,v.line_num
                 ,v.source_po_line_location_num
                 ,v.source_po_line_loc_new_num
                 ,v.item_code
                 ,v.item_name
                 ,v.quantity
                 ,v.location_quantity
                 ,v.unit_meas_lookup_code
                 ,v.trx_amount
                 ,v.un_trx_amount
                 ,v.remain_split_quantity
                 ,v.po_need_date
                 ,v.need_del_quantity
                 ,v.need_arrive_date
                 ,v.supplier_reply_date
                 ,v.received_inv_org
                 ,v.supplier_comment
                 ,v.agent_comment
                 ,v.mrp_locked_flag
                 ,v.createdby
                 ,v.create_date
                 ,v.process_message
                 ,v.process_stutas
                 ,v.pur_del_header_id
            FROM cux_pur_split_import_temp v
            #WHERE_CLAUSE# 
            order by v.po_number,
                     v.line_num,
                     v.source_po_line_location_num,
                     v.source_po_line_loc_new_num  
            
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
        		begin
        			cux_split_import_pkg.save_split_import_temp(p_import_temp_id      => ${@import_temp_id},
                                                                p_line_loc_new_num    => ${@source_po_line_loc_new_num},
                                                                p_need_del_quantity   => ${@need_del_quantity},
                                                                p_need_arrive_date    => ${@need_arrive_date},
                                                                p_supplier_reply_date => ${@supplier_reply_date},
                                                                p_po_need_date        => ${@po_need_date},
                                                                p_received_inv_org    => ${@received_inv_org},
                                                                p_mrp_locked_flag     => ${@mrp_locked_flag},
                                                                p_user_id             => ${/session/@user_id});
        		end; 
        	
         ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:parameters>
                <bm:parameter name="vx_status" dataType="java.lang.String" input="false" output="true"/>
                <bm:parameter name="vx_message" dataType="java.lang.String" input="false" output="true"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
        		begin
        			cux_split_import_pkg.validate_save(p_batch_id      => ${@batch_id},
        			                                   p_user_id       => ${/session/@user_id},
        			                                   vx_status       => ${@vx_status},
                                                       vx_message      => ${@vx_message});
        		end; 
        	
        ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="del_plan_number" queryExpression=" v.del_plan_number like &apos;%&apos;||${@del_plan_number}||&apos;%&apos;"/>
        <bm:query-field name="vendor_code" queryExpression=" v.vendor_code = ${@vendor_code}"/>
        <bm:query-field name="business_unit_id" queryExpression=" v.business_unit_id = ${@business_unit_id}"/>
        <bm:query-field name="po_number" queryExpression=" v.po_number like &apos;%&apos;||${@po_number}||&apos;%&apos;"/>
        <bm:query-field name="need_by_date" queryExpression="(v.need_arrive_date = ${@need_by_date} or ${@need_by_date} is null)"/>
        <bm:query-field name="promise_date" queryExpression="(v.need_arrive_date = ${@promise_date} or ${@promise_date} is null)"/>
        <bm:query-field name="del_plan_status" queryExpression="v.del_plan_status = ${@del_plan_status}"/>
        <bm:query-field name="mrp_locked_flag_query" queryExpression="v.mrp_locked_flag = ${@mrp_locked_flag_query}"/>
        <bm:query-field name="item_code" queryExpression="v.item_code like &apos;%&apos;||${@item_code}||&apos;%&apos;"/>
        <bm:query-field name="po_create_date" queryExpression="substr(v.po_create_date ,1,10) like ${@po_create_date}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression=" v.batch_id = ${@batch_id} "/>
    </bm:data-filters>
</bm:model>
