<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" defaultOrderBy="po_number,line_num,shipment_num">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            	SELECT v.*
				  FROM (SELECT t1.location_line_id,
				               t1.source_location_line_id,
				               t1.source_line_id,
				               t1.source_header_id,
				               t1.status,
				               (SELECT t1.description_text
				                  FROM fnd_flex_values     t,
				                       fnd_descriptions    t1,
				                       fnd_flex_value_sets t2
				                 WHERE t1.description_id = t.description_id
				                       AND t1.language = userenv('lang')
				                       AND t.flex_value_set_id = t2.flex_value_set_id
				                       AND t2.flex_value_set_code = 'LK_ARRIVAL_PLAN_STATUS'
				                       AND t.flex_value = t1.status) status_desc,
				               t1.erp_status,
				               decode(t1.erp_status,
				                      'OPEN',
				                      (SELECT v.code_value_name
				                         FROM sys_code_values_v v
				                        WHERE v.code = 'SRM_STATUS'
				                              AND v.code_value = t1.srm_status),
				                      (SELECT v.code_value_name
				                         FROM sys_code_values_v v
				                        WHERE v.code = 'PUR_HEADER_ERP_STATUS'
				                              AND v.code_value = t1.erp_status)) AS erp_status_desc,
				               t1.po_number,
				               t1.line_num,
				               t1.shipment_num,
				               t1.item_id,
				               TRIM(leading '0' FROM t1.item_code) item_code,
				               t1.item_name,
				               t1.ean_code,
				               t1.quantity,
				               t1.unit_meas_lookup_code,
				               t1.need_by_date,
				               t1.company_id,
				               t1.company_code,
				               t1.company_name,
				               t1.inv_organization_id,
				               (SELECT iov.description
				                  FROM inv_organizations_vl iov
				                 WHERE iov.inv_organization_id = t1.inv_organization_id) inv_organization_name,
				               t1.warehouse_id,
				               (SELECT iwv.description FROM inv_warehouses_vl iwv WHERE iwv.warehouse_id = t1.warehouse_id) warehouse_name,
				               t1.inv_location_id,
				               (SELECT ilv.description FROM inv_locations_vl ilv WHERE ilv.location_id = t1.inv_location_id) inv_location_name,
				               t1.contacts_info,
				               t1.ship_to_location_address,
				               t1.item_type,
				               t1.user_hold_flag,
				               decode(t1.user_hold_flag,
				                      'Y',
				                      '是',
				                      'N',
				                      '否',
				                      '否') user_hold_flag_desc,
				               t1.frozen_flag,
				               decode(t1.frozen_flag,
				                      'Y',
				                      '是',
				                      'N',
				                      '否',
				                      '否') frozen_flag_desc,
				               to_char(t1.released_date,
				                       'YYYY-MM-DD') released_date,
				               t1.returned_flag,
				               decode(t1.returned_flag,
				                      'Y',
				                      '是',
				                      'N',
				                      '否',
				                      '否') returned_flag_desc,
				               t1.free_flag,
				               decode(t1.free_flag,
				                      'Y',
				                      '是',
				                      'N',
				                      '否',
				                      '否') free_flag_desc,
				               t1.immed_shipped_flag,
				               decode(t1.immed_shipped_flag,
				                      'Y',
				                      '是',
				                      'N',
				                      '否',
				                      '否') immed_shipped_flag_desc,
				               t1.creation_date,
				               t1.created_by,
				               t1.last_update_date,
				               t1.last_updated_by,
				               t1.version_num,
				               t1.vendor_id,
				               t1.vendor_code,
				               t1.vendor_name,
				               t1.coop_company_id,
				               t1.coop_business_group,
				               t1.owner_company_id,
				               t1.owner_business_group,
				               t1.business_unit_id,
				               t1.produce_status,
				               (SELECT t1.description_text
				                  FROM fnd_flex_values     t,
				                       fnd_descriptions    t1,
				                       fnd_flex_value_sets t2
				                 WHERE t1.description_id = t.description_id
				                       AND t1.language = userenv('lang')
				                       AND t.flex_value_set_id = t2.flex_value_set_id
				                       AND t2.flex_value_set_code = 'LK_PRODUCE_STATUS'
				                       AND t.flex_value = t1.produce_status) produce_status_desc,
				               t1.vendor_desc,
				               decode(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => t1.owner_business_group),
				                      'Y',
				                      (t1.quantity -
				                      (public_tools_pkg.get_sum_shipped_quantity(p_pur_line_location_id => t1.source_location_line_id))),
				                      (public_tools_pkg.get_enable_shipped_quantity(p_pur_line_location_id => t1.source_location_line_id))) AS unclear_quantity
				          FROM lk_pur_line_locations_all t1
				         WHERE EXISTS (SELECT 1
				                  FROM pur_headers_all_v       h,
				                       pur_po_relation_vendors prv,
				                       pur_po_rlt_vendor_auth  pva,
				                       pur_vendors_v           pvv
				                 WHERE h.last_version = 'Y'
				                       AND pvv.coop_business_group = ${/session/@business_group}
				                       AND pvv.vendor_id = prv.vendor_id
				                       AND prv.po_rltion_vendor_id = pva.po_rltion_vendor_id
				                       AND h.pur_header_id = t1.source_header_id
				                       AND pva.document_type = 'PO'
				                       AND pva.query_flag = 'Y'
				                       AND h.pur_header_id = prv.pur_header_id)) v
            	#WHERE_CLAUSE#
            	#ORDER_BY_CLAUSE#
        	]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
				  UPDATE lk_pur_line_locations_all l
				     SET l.produce_status   = ${@produce_status},
				         l.vendor_desc      = ${@vendor_desc},
				         l.last_update_date = SYSDATE,
				         l.last_updated_by  = ${/session/@user_id}
				   WHERE l.location_line_id = ${@location_line_id};
				END;

        ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                BEGIN
				  UPDATE lk_pur_line_locations_all l
				     SET l.status           = 'CONFIRMED',
				         l.produce_status   = ${@produce_status},
				         l.vendor_desc      = ${@vendor_desc},
				         l.last_update_date = SYSDATE,
				         l.last_updated_by  = ${/session/@user_id}
				   WHERE l.location_line_id = ${@location_line_id};
				END;

        ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <!-- <bm:data-filters>
        <bm:data-filter name="status" expression="t1.status=&apos;NOT_CONFIRMED&apos;"/>
    </bm:data-filters> -->
    <bm:query-fields>
        <bm:query-field name="po_number" queryExpression="v.po_number=${@po_number}"/>
        <bm:query-field name="status" queryExpression="v.status=${@status}"/>
        <bm:query-field name="item" queryExpression="(v.item_code like &apos;%&apos;||${@item}||&apos;%&apos; or v.item_name like &apos;%&apos;||${@item}||&apos;%&apos;)  "/>
        <bm:query-field name="need_by_date_from" queryExpression="v.need_by_date &gt;= to_date(${@need_by_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="need_by_date_to" queryExpression="v.need_by_date &lt;= to_date(${@need_by_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_from" queryExpression="v.creation_date &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="v.creation_date &lt;= to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="clear_flag" queryExpression="((${@clear_flag} = &apos;Y&apos; and v.unclear_quantity != 0) or (${@clear_flag} = &apos;N&apos; and 1=1))"/>
        <!-- <bm:query-field name="vendor_id" queryExpression="v.vendor_id=${@vendor_id}"  /> -->
    </bm:query-fields>
</bm:model>
