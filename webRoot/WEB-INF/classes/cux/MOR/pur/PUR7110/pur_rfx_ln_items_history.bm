<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-27 上午9:38:00  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
select decode(li.cancel_flag,
                      'Y',
                      li.finish_in_round,
                      decode(li.rfx_finished_flag,
                             'Y',
                             li.finish_in_round,
                              NULL)) rfx_finished_round,
               decode(li.cancel_flag,
                      'Y',
                      li.finish_in_version,
                      decode(li.rfx_finished_flag,
                             'Y',
                             li.finish_in_round,
                             NULL)) rfx_finished_version,
	   li.*,
	   fl.coop_business_group,
       fl.coop_company_id,
       fl.vendor_id,
       fl.vendor_code,
       fl.vendor_desc,
       fl.valid_fb_retail_price,
       fl.valid_fb_wholesale_price,
       to_char(fl.promised_date, 'yyyy-mm-dd') promised_date,
       to_char(fl.feedback_expiry_date_from, 'yyyy-mm-dd') feedback_expiry_date_from,
       to_char(fl.feedback_expiry_date_to, 'yyyy-mm-dd') feedback_expiry_date_to,
       'Y' item_query_flag
  from (select rownum * 10 line_number,
               li.history_header_id ,
               rh.round,
               rh.version,
               li.rfx_line_item_id,
               li.rfx_header_id,
               li.inv_organization_id,
               (select io.description
                  from inv_organizations_vl io
                 where io.inv_organization_id = li.inv_organization_id) inv_organization_desc,
               li.item_category_id,
               (SELECT ic.category_name
          FROM mtl_categories_user_defined_vl ic
         WHERE ic.category_udf_id = li.item_category_id) item_category_desc,
               li.item_id,
               li.item_code,
               li.item_desc,
               li.item_note,
               li.item_parameter_config,
               li.suggested_feedback_line_id,
               li.uom_code,
               (SELECT
                        fv.uom_desc
                    FROM
                        fnd_uom_codes_vl fv
                    WHERE
                        fv.uom_code = li.uom_code
                        and fv.business_group = rh.owner_business_group
                    ) uom_desc,
               li.quantity,
               to_char(need_by_date, 'yyyy-mm-dd') need_by_date,
               li.suggested_operation,
               (select scv.code_value_name
          from sys_code_values_vl scv, sys_codes_vl sc
         where sc.code_id = scv.code_id
           and scv.code_value = li.suggested_operation
           and sc.code = 'PUR_RFX_SUGGESTED_OPERATION') suggested_operation_desc,
               li.cancel_flag,
               li.rfx_finished_flag,
               li.data_source,
               li.source_from,
               li.comments,
               li.pur_req_num,
               li.feedback_range,
               li.flex_appl_relevance_id,
               li.finish_in_version,
                       li.finish_in_round,
                       li.line_num,
               #flex_query_sql#
          from pur_rfx_ln_items_hist li, pur_rfx_headers_hist rh
         where 1 = 1
           and li.history_header_id = rh.history_header_id
           and nvl(li.round_flag,'Y')='Y'
           and li.history_header_id = ${/parameter/@history_header_id}) li,
       (select fh.rfx_header_id,
               fh.rfx_round,
               fh.rfx_version,
               fh.coop_business_group,
               fh.coop_company_id,
                fh.vendor_id,
               (SELECT fc.company_code FROM fnd_companies fc WHERE fc.company_id = fh.coop_company_id) vendor_code,
               (SELECT fc.company_full_name FROM fnd_companies_vl fc WHERE fc.company_id = fh.coop_company_id) vendor_desc,
               fl.feedback_line_id,
               fl.item_id,
               fl.rfx_line_item_id,
               fl.inv_organization_id,
               fl.promised_date,
               fl.feedback_expiry_date_from,
               fl.feedback_expiry_date_to,
               fl.valid_fb_retail_price,
               fl.valid_fb_wholesale_price
          from pur_rfx_feedback_headers fh, pur_rfx_feedback_lines fl
         where fh.feedback_header_id = fl.feedback_header_id
           ) fl
 where 1=1
   and fl.feedback_line_id(+) = li.suggested_feedback_line_id
   and li.history_header_id = ${/parameter/@history_header_id}

]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <flex-segmentBm applTableAliasName="li" headerIdPath="/parameter/@rfx_header_id" headerTableName="PUR_RFX_HEADERS" lineTableName="PUR_RFX_LN_ITEMS" templateFieldName="template_id" type="grid_expanded_bm_query"/>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
			Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
        	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_grid_expanded_bm.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
