<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            	SELECT *
				  FROM (SELECT h.asn_header_id,
				               l.asn_line_id,
				               h.owner_business_group,
				               decode(l.c_attribute50,
				                      '01',
				                      '物料条码',
				                      '02',
				                      '批次条码',
				                      '03',
				                      '单包重量条码',
				                      '04',
				                      '单包数量条码',
				                      '05',
				                      '单件条码') AS barcode_type,
				               l.asn_detail_number,
				               h.asn_number,
				               l.asn_line_num,
				               (SELECT ph.display_po_number
				                  FROM pur_line_locations_all pll,
				                       pur_headers_all        ph
				                 WHERE pll.pur_header_id = ph.pur_header_id
				                       AND pll.pur_line_location_id = l.line_location_id) AS po_number,
				               (SELECT pl.line_num
				                  FROM pur_line_locations_all pll,
				                       pur_lines_all          pl
				                 WHERE pll.pur_line_id = pl.pur_line_id
				                       AND pll.pur_line_location_id = l.line_location_id) AS po_line_num,
				               nvl(l.outside_box_status,
				                   'NEW') AS outside_box_status,
				               decode(nvl(l.outside_box_status,
				                          'NEW'),
				                      'NEW',
				                      '新建',
				                      'IMPORTING',
				                      '导入中',
				                      'IMPORT_FAILED',
				                      '导入失败',
				                      'IMPORT_SUCCESS',
				                      '导入成功') AS outside_box_status_display,
				               nvl(l.cancel_flag,
                   					'N') AS asn_cancel_flag,
				               decode(l.cancel_flag,
				                      'Y',
				                      '已取消',
				                      decode(l.close_flag,
				                             'Y',
				                             '已关闭',
				                             '已发运')) AS asn_status,
				               l.outside_box_quantity,
				               l.ship_quantity,
				               l.uom_code,
				               l.item_code,
				               l.item_name,
				               l.lots_num,
				               (SELECT imv.partner_item_code
				                  FROM mtl_item_mapping_vendor_v imv,
				                       pur_vendors_v             pvv
				                 WHERE imv.partner_business_group = pvv.coop_business_group
				                       AND imv.item_id = l.item_id
				                       AND pvv.vendor_id = h.vendor_id) AS my_item_code,
				               (SELECT imv.partner_item_name
				                  FROM mtl_item_mapping_vendor_v imv,
				                       pur_vendors_v             pvv
				                 WHERE imv.partner_business_group = pvv.coop_business_group
				                       AND imv.item_id = l.item_id
				                       AND pvv.vendor_id = h.vendor_id) AS my_item_name,
				               (SELECT buv.business_unit_name
				                  FROM fnd_business_units_vl buv
				                 WHERE buv.business_unit_id = h.coop_business_unit_id) AS client_business_unit_name,
				               l.comments,
				               l.level_2_barcode,
				               l.level_3_barcode,
				               l.level_4_barcode,
				               b.barcode,
				               b.packet_quantity,
				               b.packet_weight,
				               b.comments AS barcode_comments,
				               b.packet_level
				          FROM inv_asn_headers h,
				               inv_asn_lines   l,
               				   inv_asn_outside_barcode b
				         WHERE h.asn_header_id = l.asn_header_id
				           AND b.asn_header_id = h.asn_header_id
               			   AND b.asn_line_id = l.asn_line_id) v
				 #WHERE_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="v.owner_business_group = ${/session/@business_group}"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="asn_number" queryExpression="v.asn_number like ${@asn_number}"/>
        <bm:query-field name="barcode" queryExpression="v.barcode like ${@barcode}"/>
        <bm:query-field name="barcode_status" queryExpression="v.outside_box_status = ${@barcode_status}"/>
        <bm:query-field name="po_number" queryExpression="v.po_number like ${@po_number}"/>
        <bm:query-field name="item_name" queryExpression="v.item_name like ${@item_name}"/>
        <bm:query-field name="asn_line_number" queryExpression="v.asn_line_num = ${@asn_line_number}"/>
        <bm:query-field name="po_line_number" queryExpression="v.po_line_num = ${@po_line_number}"/>
        <bm:query-field name="lots_num" queryExpression="v.lots_num = ${@lots_num}"/>
    </bm:query-fields>
</bm:model>
