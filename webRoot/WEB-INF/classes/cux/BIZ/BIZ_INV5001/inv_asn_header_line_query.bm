<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_number desc,line_num" needAccessControl="false">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*
                FROM
                    (SELECT
                        h.asn_header_id,
                        h.display_asn_number AS asn_number,
                        (SELECT
                            atv.asn_type_name
                        FROM
                            inv_asn_types_vl atv
                        WHERE
                            atv.asn_type_code = h.asn_type_code
                        ) AS asn_type_name,
                        h.business_unit_id,
                        h.owner_business_group,
                        h.owner_company_id,
                        h.coop_business_group,
                        h.coop_company_id,
                        pvv.coop_business_group AS business_group,
                        pvv.coop_company_id AS company_id,
                        (SELECT
                            fcv.company_full_name
                        FROM
                            fnd_companies_vl fcv
                        WHERE
                            fcv.company_id = h.coop_company_id
                        ) AS company_name,
                        h.vendor_id,
                        (SELECT
                            pvv.full_name
                        FROM
                            pur_vendors_v pvv
                        WHERE
                            pvv.vendor_id = h.vendor_id
                        ) AS vendor_name,
                        h.vendor_site_id,
                        (SELECT
                            vsv.site_name
                        FROM
                            pur_vendor_sites_vl vsv
                        WHERE
                            vsv.vendor_site_id = h.vendor_site_id
                        ) AS vendor_site_name,
                        h.status,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_HEADERS_STATUS' AND
                            cvv.code_value = h.status
                        ) AS header_status,
                        h.ship_date,
                        TO_CHAR(h.ship_date, 'yyyy-mm-dd') AS ship_date_fmt,
                        h.expected_date,
                        TO_CHAR(h.expected_date, 'yyyy-mm-dd') AS expected_date_fmt,
                        h.creation_date,
                        TO_CHAR(h.creation_date, 'yyyy-mm-dd') AS creation_date_fmt,
                        h.location_id,
                        (SELECT
                            fl.address_line_1
                        FROM
                            fnd_locations fl
                        WHERE
                            fl.location_id = h.location_id
                        ) AS location_name,
                        h.ship_to_organization_id,
                        (SELECT
                            iov.description
                        FROM
                            inv_organizations_vl iov
                        WHERE
                            iov.inv_organization_id = h.ship_to_organization_id
                        ) AS ship_to_organization_name,
                        h.created_by,
                        (SELECT
                            al.process_status
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = h.asn_header_id AND
                            rownum           = 1
                        ) AS process_status,
                        (SELECT
                            DECODE(al.process_status, 'SUCCESSED', '发送成功', 'WAITING', '发送中', 'IMPORTED', '正在发送', 'FAILED', '发送失败', ' ')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = h.asn_header_id AND
                            rownum           = 1
                        ) AS process_status_name,
                        (SELECT
                            al.process_message
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id    = h.asn_header_id AND
                            al.process_message IS NOT NULL AND
                            rownum              = 1
                        ) AS process_message,
                        (SELECT
                            al.cancel_process_status
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = h.asn_header_id AND
                            rownum           = 1
                        ) AS cancel_process_status,
                        (SELECT
                            DECODE(al.cancel_process_status, 'SUCCESSED', '取消成功', 'WAITING', '等待反馈', 'IMPORTED', '正在处理', 'FAILED', '取消失败')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = h.asn_header_id AND
                            rownum           = 1
                        ) AS cancel_process_status_name,
                        (SELECT
                            al.cancel_process_message
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id           = h.asn_header_id AND
                            al.cancel_process_message IS NOT NULL AND
                            rownum                     = 1
                        ) AS cancel_process_message,
                        --行信息开始
                        l.asn_line_id,
                        l.asn_line_num,
                        l.item_id AS require_item_id,
                        NVL(
                        (SELECT
                            m.display_item_code
                        FROM
                            mtl_system_items_vl m
                        WHERE
                            m.item_id = l.item_id
                        ), l.item_code) AS require_item_code,
                        NVL(
                        (SELECT m.item_name FROM mtl_system_items_vl m WHERE m.item_id = l.item_id
                        ), l.item_code) AS require_item_name,
                        (SELECT m.ean_code FROM mtl_system_items_vl m WHERE m.item_id = l.item_id
                        ) AS ean_code,
                        (SELECT
                            imv.partner_item_id
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id = l.item_id
                        ) AS supply_item_id,
                        (SELECT
                            imv.partner_item_code
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id = l.item_id
                        ) AS supply_item_code,
                        (SELECT
                            imv.partner_item_name
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id = l.item_id
                        ) AS supply_item_name,
                        (SELECT
                            pha.display_po_number
                        FROM
                            pur_headers_all_v pha,
                            pur_line_locations_all lla
                        WHERE
                            pha.pur_header_id        = lla.pur_header_id AND
                            lla.pur_line_location_id = l.line_location_id
                        ) AS po_num,
                        (SELECT
                            pla.line_num
                        FROM
                            pur_lines_all pla,
                            pur_line_locations_all lla
                        WHERE
                            pla.pur_line_id          = lla.pur_line_id AND
                            lla.pur_line_location_id = l.line_location_id
                        ) AS line_num,
                        l.shipment_num,
                        l.ship_quantity,
                        l.uom_code,
                        NVL(
                        (SELECT
                            vl.uom_desc
                        FROM
                            fnd_uom_codes_vl vl
                        WHERE
                            l.uom_code        = vl.uom_code AND
                            vl.business_group = h.coop_business_group
                        ), l.uom_code) uom_desc,
                        l.unit_price,
                        l.receive_quantity,
                        (
                            CASE
                                WHEN
                                    (
                                        l.ship_quantity - l.receive_quantity
                                    )
                                    > 0
                                THEN (l.ship_quantity - l.receive_quantity)
                                ELSE 0
                            END) AS on_the_way_quantity,
                        l.return_vendor_quantity,
                        l.deliver_quantity,
                        (l.receive_quantity - l.deliver_quantity) AS inspection_pending_quantity,
                        l.return_receive_quantity,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_LINES_STATUS' AND
                            cvv.code_value = l.status
                        ) AS line_status,
                        l.receive_status,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_LNS_RECEIVE_STATUS' AND
                            cvv.code_value = l.receive_status
                        ) AS line_receive_status,
                        l.deliver_status,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_LNS_DELIVER_STATUS' AND
                            cvv.code_value = l.receive_status
                        ) AS line_deliver_status,
                        l.cancel_flag,
                        l.cancel_quantity,
                        l.cancel_reason,
                        l.close_flag,
                        l.closed_quantity,
                        l.close_code,
                        l.close_reason,
                        l.lots_num production_batch,
                        TO_CHAR(l.lots_validity_date, 'yyyy-mm-dd') lots_validity_date,
                        l.invoice_num,
                        l.serial_num,
                        (SELECT
                            TO_CHAR(pll.need_by_date, 'yyyy-mm-dd')
                        FROM
                            pur_line_locations_all pll
                        WHERE
                            pll.pur_line_location_id = l.line_location_id
                        ) AS need_by_date,
                        (SELECT
                            TO_CHAR(pll.promised_date, 'yyyy-mm-dd')
                        FROM
                            pur_line_locations_all pll
                        WHERE
                            pll.pur_line_location_id = l.line_location_id
                        ) AS promised_date,
                        l.reversion_num,
                        (SELECT
                            ph.display_release_num
                        FROM
                            pur_headers_all ph,
                            pur_line_locations_all plla
                        WHERE
                            ph.pur_header_id          = plla.pur_header_id AND
                            plla.pur_line_location_id = l.line_location_id
                        ) release_num,
                        l.agent_id,
                        l.agent_name,
                        l.comments,
                        (SELECT
                            iwv.description
                        FROM
                            inv_warehouses_vl iwv
                        WHERE
                            iwv.warehouse_id = l.inv_warehouse_id
                        ) inv_warehouse,
                        (SELECT
                            ilv.description
                        FROM
                            inv_locations_vl ilv
                        WHERE
                            ilv.location_id = l.inv_location_id
                        ) inv_location,
                        l.outside_box_quantity,
                        NVL(l.outside_box_status, 'NEW') outside_box_status,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_LINE_OUTSIDE_BOX_STATUS' AND
                            cvv.code_value = NVL(l.outside_box_status, 'NEW')
                        ) AS outside_box_status_desc,
                        l.asn_detail_number,
                        --l.production_batch,
                        l.environmental_batch,
                        NVL(l.packet_weight,
                        (SELECT
                            to_number(o.c_attribute3)
                        FROM
                            mtl_item_inv_organization o
                        WHERE
                            o.item_id                   = l.item_id AND
                            o.inventory_organization_id = h.ship_to_organization_id AND
                            h.asn_header_id             = l.asn_header_id
                        )) packet_weight,
                        l.box_weight,
                        --行信息结束
                        NULL AS useless_id_1,
                        NULL AS useless_id_2,
                        NULL AS useless_id_3,
                        NULL AS useless_id_4,
                        NULL AS useless_id_5,
                        NULL AS useless_id_6,
                        NULL AS useless_id_7,
                        NULL AS useless_id_8,
                        NULL AS useless_id_9,
                        NULL AS useless_id_10
                    FROM
                        inv_asn_headers h,
                        inv_asn_lines l,
                        pur_line_locations_all ll,
                        pur_po_relation_vendors prv,
                        pur_po_rlt_vendor_auth pva,
                        pur_vendors_v pvv
                    WHERE
                        h.status               IN ('SEND_OUT', 'PART_RECEIVE', 'ALL_RECEIVE', 'PART_CANCEL', 'PART_CLOSE') AND
                        h.asn_header_id         = l.asn_header_id AND
                        l.line_location_id      = ll.pur_line_location_id AND
                        ll.pur_header_id        = prv.pur_header_id AND
                        pva.document_type       = 'ASN' AND
                        pva.creation_flag       = 'Y' AND
                        prv.po_rltion_vendor_id = pva.po_rltion_vendor_id AND
                        prv.vendor_id           = pvv.vendor_id
                    ) v where v.outside_box_status = 'SUBMIT'
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
    			begin
    			   inv_asn_outside_barcode_pkg.modify_asn_line_barcode_qty(p_asn_header_id => ${@asn_header_id},
                                                          p_asn_line_id => ${@asn_line_id},
                                                          p_outside_box_quantity => ${@outside_box_quantity},
                                                          p_user_id => ${/session/@user_id});
                end;
    		]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
    			begin
    			   inv_asn_outside_barcode_pkg.submit_asn_outside_barcode(p_asn_header_id => ${@asn_header_id},
                                                          p_asn_line_id => ${@asn_line_id},
                                                          p_user_id => ${/session/@user_id});
                end;
    		]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="ean_code" queryExpression="v.ean_code like &apos;%&apos;||trim(${@ean_code})||&apos;%&apos;"/>
        <bm:query-field name="asn_number" queryExpression="v.asn_number like &apos;%&apos;||trim(${@asn_number})||&apos;%&apos;"/>
        <bm:query-field name="asn_detail_number" queryExpression="v.asn_detail_number like &apos;%&apos;||trim(${@asn_detail_number})||&apos;%&apos;"/>
        <bm:query-field name="po_num" queryExpression="v.po_num like &apos;%&apos;||trim(${@po_num})||&apos;%&apos;"/>
        <bm:query-field name="asn_line_id" queryExpression="v.asn_line_id = ${@asn_line_id}"/>
        <bm:query-field name="item_id" queryExpression="v.require_item_id = ${@item_id}"/>
        <bm:query-field name="outside_box_status" queryExpression="v.outside_box_status = ${@outside_box_status}"/>
        <bm:query-field name="company_id" queryExpression="v.coop_company_id = ${@company_id}"/>
        <bm:query-field name="vendor_site_id" queryExpression="v.vendor_site_id = ${@vendor_site_id}"/>
        <bm:query-field name="ship_to_organization_id" queryExpression="v.ship_to_organization_id = ${@ship_to_organization_id}"/>
        <bm:query-field name="expected_date_from" queryExpression="v.expected_date &gt;= to_date(${@expected_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="expected_date_to" queryExpression="v.expected_date &lt;= to_date(${@expected_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_from" queryExpression="v.creation_date &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="v.creation_date &lt;= to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_from" queryExpression="v.ship_date &gt;= to_date(${@ship_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_to" queryExpression="v.ship_date &lt;= to_date(${@ship_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status1" queryExpression="v.cancel_process_status = ${@cancel_process_status1}"/>
        <bm:query-field name="can_print" queryExpression="exists (select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;)"/>
        <bm:query-field name="cancel_process_status" queryExpression=" v.cancel_process_status is null and v.process_status = &apos;SUCCESSED&apos;"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="v.business_group = ${/session/@business_group}"/>
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="v" source_name="company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id_1" type="CREATER"/>
        <authority-segment source_alias="v" source_name="useless_id_2" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="useless_id_3" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_8" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_9" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id_10" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_11" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_12" type="SALES_PRODUCTION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
      		Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
          	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
