<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author:   
    $Date: 2013-6-26 下午7:45:48  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    (SELECT
                        fh.feedback_header_id
                    FROM
                        pur_rfx_feedback_headers fh
                    WHERE
                        rh.rfx_header_id=fh.rfx_header_id
                    ) AS feedback_header_id,
                    rfx_header_id,
                    rfx_number,
                    rh.trans_cost_flag,
                    rh.owner_business_group,
                    rh.owner_company_id,
                    rh.owner_company_id company_id,
                    rh.owner_business_unit_id business_unit_id,
                    'CNY' functional_currency_code,
                    (SELECT
                        p.rfx_type_desc
                    FROM
                        pur_bg_rfx_types_vl p
                    WHERE
                        p.RFX_TYPE_ID = rh.rfx_type_id
                    ) rfx_type_desc,
                    (SELECT
                        p.pur_organization_require_flag
                    FROM
                        pur_bg_rfx_types_vl p
                    WHERE
                        p.RFX_TYPE_ID = rh.rfx_type_id
                    ) pur_organization_require_flag,
                    NVL(
                    (SELECT
                        p.password_flag
                    FROM
                        pur_bg_rfx_types p
                    WHERE
                        p.rfx_type_id = rh.rfx_type_id
                    ),'N') password_flag,
                    NVL(
                    (SELECT
                        p.item_classify_require_flag
                    FROM
                        pur_bg_rfx_types p
                    WHERE
                        p.rfx_type_id = rh.rfx_type_id
                    ),'N') item_classify_require_flag,
                    (SELECT
                        bu.business_unit_name
                    FROM
                        fnd_business_units_vl bu
                    WHERE
                        bu.business_unit_id = rh.owner_business_unit_id
                    ) business_unit_name,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = (pur_rfx_pkg.get_rfx_actual_status(rh.rfx_header_id,${/session/@user_id})) AND
                        sc.code        = 'PUR_RFX_STATUS'
                    ) status_desc,
                    (pur_rfx_pkg.get_rfx_actual_status(rh.rfx_header_id,${/session/@user_id})) AS status,
                    rh.rfx_type_id,
                    rh.rfx_category,
                    (SELECT
                        p.rfx_type_desc
                    FROM
                        pur_bg_rfx_types_vl p
                    WHERE
                        p.RFX_TYPE_ID = rh.rfx_type_id
                    ) rfx_type_desc,
                    title,
                    rfx_method,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.rfx_method AND
                        sc.code        = 'PUR_RFX_METHOD'
                    ) rfx_method_desc,
                    auction_direction,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_direction AND
                        sc.code        = 'PUR_RFX_AUCTION_DIRECTION'
                    ) auction_direction_desc,
                    auction_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_rule AND
                        sc.code        = 'PUR_RFX_AUCTION_RULE'
                    ) auction_rule_desc,
                    open_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.open_rule AND
                        sc.code        = 'PUR_RFX_OPEN_RULE'
                    ) open_rule_desc,
                    ranking_rule,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.ranking_rule AND
                        sc.code        = 'PUR_RFX_RANKING_RULE'
                    ) ranking_rule_desc,
                    auction_ranking,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.auction_ranking AND
                        sc.code        = 'PUR_RFX_AUCTION_RANKING'
                    ) auction_ranking_desc,
                    payment_method_id,
                    (SELECT
                        pm.description
                    FROM
                        csh_payment_methods_vl pm
                    WHERE
                        pm.payment_method_id = rh.payment_method_id
                    ) payment_method_desc,
                    currency_code,
                    (SELECT
                        gc.currency_name
                    FROM
                        gld_currency_vl gc
                    WHERE
                        gc.currency_code = rh.currency_code
                    ) currency_desc,
                    exchange_rate,
                    tax_included_flag,
                    tax_type_id,
                    tax_type_code,
                    (SELECT
                        ttc.description
                    FROM
                        fnd_tax_type_codes_vl ttc
                    WHERE
                        ttc.tax_type_id = rh.tax_type_id
                    ) tax_type_desc,
                    tax_type_rate,
                    place_of_delivery,
                    issued_date,
                    TO_CHAR(issued_date, 'yyyy-mm-dd') issued_date_desc,
                    ROUND,
                    version,
                    TO_CHAR(rh.feedback_start_time, 'yyyy-mm-dd hh24:mi:ss') feedback_start_time,
                    TO_CHAR(rh.feedback_end_time, 'yyyy-mm-dd hh24:mi:ss') feedback_end_time,
                    terminated_time,
                    terminated_reason,
                    template_id,
                    (SELECT
                        ft.template_desc
                    FROM
                        fnd_flex_templates_vl ft
                    WHERE
                        ft.template_id = rh.template_id
                    ) template_desc,
                    cancel_flag,
                    closed_flag,
                    rh.data_source,
                    source_from,
                    comments,
                    firsttrail_comments,
                    /* add by Harry 9952 2016/11/23  初审备注 */
                    flex_appl_relevance_id,
                    TO_CHAR(rh.creation_date,'YYYY-MM-DD') creation_date,
                    TO_CHAR(rh.creation_date,'yyyy-mm-dd hh24:mi:ss') creation_date_desc,
                    rh.created_by,
                    (SELECT u.description FROM sys_user u WHERE u.user_id = rh.created_by
                    ) created_by_desc,
                    rh.sealed_bid_flag,
                    TO_CHAR(rh.sealing_cutoff_date, 'yyyy-mm-dd hh24:mi:ss') sealing_cutoff_date,
                    rh.source_type,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.source_type AND
                        sc.code        = 'PUR_RFX_SOURCE_TYPE'
                    ) source_type_desc,
                   (select pbv.buyer_desc from pur_buyers_vl pbv where user_id = rh.created_by)buyer_desc,
                    rh.price_category,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_code_values_vl scv,
                        sys_codes_vl sc
                    WHERE
                        sc.code_id     = scv.code_id AND
                        scv.code_value = rh.price_category AND
                        sc.code        = 'PUR_RFX_PRICE_CATEGORY'
                    ) price_category_desc,
                    rh.pur_organization_id,
                    pov.pur_organization_code,
                    pov.description AS pur_organization_name,
                    rh.prequal_flag,
                    rh.expert_score_flag,
                    rh.department_approve_flag,
                    rh.score_mode,
                    rh.closed_bidding_flag,
                    v.total_costs,
                    --v.account_total_costs,
                    (
                        CASE
                            WHEN v.total_costs >= v.account_total_costs
                            THEN 'N'
                            WHEN v.account_total_costs IS NULL OR
                                v.account_total_costs   = 0
                            THEN 'N'
                            ELSE 'Y'
                        END) AS exceed_cost_flag,
                    (
                        CASE
                            WHEN v.total_costs >= v.account_total_costs
                            THEN 0
                            ELSE v.account_total_costs - v.total_costs
                        END) AS exceed_money,
                    (
                        CASE
                            WHEN v.total_costs != 0 AND
                                v.total_costs  IS NOT NULL
                            THEN TO_CHAR( (
                                        CASE
                                            WHEN v.total_costs >= v.account_total_costs
                                            THEN 0
                                            ELSE v.account_total_costs - v.total_costs
                                        END) / v.total_costs )
                                || '%'
                            ELSE '-'
                        END) AS exceed_percent,
                    rh.pay_term,
                    (SELECT
                        cpt.description
                    FROM
                        csh_payment_terms_vl cpt
                    WHERE
                        cpt.payment_term_code=rh.pay_term
                    ) pay_term_desc
                FROM
                    pur_rfx_headers rh,
                    pur_organizations_vl pov,
                    (SELECT
                        NVL(rh.total_cost,
                        (SELECT
                            SUM(NVL(li.cost_price, 0) * NVL(li.quantity, 0))
                        FROM
                            pur_rfx_ln_items li
                        WHERE
                            rh.rfx_header_id = li.rfx_header_id
                        )) AS total_costs,
                        (SELECT
                            SUM(NVL(fl.valid_fb_retail_price, 0) * NVL(fl.allotted_quantity, 0))
                        FROM
                            pur_rfx_feedback_lines fl,
                            pur_rfx_feedback_headers fh,
                            pur_rfx_ln_items li
                        WHERE
                            fl.rfx_line_item_id   = li.rfx_line_item_id AND
                            fl.feedback_header_id = fh.feedback_header_id AND
                            li.rfx_header_id      = rh.rfx_header_id AND
                            li.current_round      = fh.rfx_round AND
                            li.current_version    = fh.rfx_version
                        ) AS account_total_costs
                    FROM
                        pur_rfx_headers rh
                    WHERE
                        rh.rfx_header_id = ${/parameter/@rfx_header_id}
                    ) v
                WHERE
                    rh.pur_organization_id = pov.pur_organization_id(+) AND
                    rh.rfx_header_id       = ${/parameter/@rfx_header_id}
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="rfx_header_id" dataType="java.lang.Long" input="false" output="true" outputPath="/parameter/@rfx_header_id"/>
                <bm:parameter name="rfx_number" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@rfx_number"/>
                <bm:parameter name="feedback_header_id" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@feedback_header_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              
              BEGIN
                jk_pur_rfx_pkg.create_pur_rfx_headers
                (
                  x_feedback_header_id=>${@feedback_header_id},
                  x_rfx_header_id=>${@rfx_header_id},
                  x_rfx_number=>${@rfx_number},
                  p_owner_business_group=>${/session/@business_group},
                  p_owner_company_id=>${@company_id},
                  p_owner_business_unit_id=>${@business_unit_id},
                  p_status=>${@status},
                  p_rfx_category=>${@rfx_category},
                  p_rfx_type_id=>${@rfx_type_id},
                  p_title=>${@title},
                  p_rfx_method=>${@rfx_method},
                  p_auction_direction=>${@auction_direction},
                  p_auction_rule=>${@auction_rule},
                  p_open_rule=>${@open_rule},
                  p_ranking_rule=>${@ranking_rule},
                  p_auction_ranking=>${@auction_ranking},
                  p_payment_method_id=>${@payment_method_id},
                  p_currency_code=>${@currency_code},
                  p_exchange_rate=>${@exchange_rate},
                  p_tax_included_flag=>${@tax_included_flag},
                  p_tax_type_id=>${@tax_type_id},
                  p_tax_type_code=>${@tax_type_code},
                  p_tax_type_rate=>${@tax_type_rate},
                  p_place_of_delivery=>${@place_of_delivery},
                  p_issued_date=>${@issued_date},
                  p_round=>${@round},
                  p_version=>${@version},
                  p_feedback_start_time=> nvl(to_date(${@feedback_start_time},'yyyy-mm-dd HH24:mi:ss'),sysdate),
                  p_feedback_end_time=> to_date(${@feedback_end_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_template_id=>${@template_id},
                  p_cancel_flag=>${@cancel_flag},
                  p_closed_flag=>${@closed_flag},
                  p_data_source=>${@data_source},
                  p_source_from=>${@source_from},
                  p_source_from_id=>${@source_from_id},
                  p_source_from_num=>${@source_from_num},
                  p_comments=>${@comments},
                  p_sealed_bid_flag => ${@sealed_bid_flag},
                  p_sealing_cutoff_date => to_date(${@sealing_cutoff_date},'yyyy-mm-dd HH24:mi:ss'),
                  p_source_type  => ${@source_type},
                  p_pur_organization_id => ${@pur_organization_id},
                  p_prequal_flag      => ${@prequal_flag},
    			  p_expert_score_flag    => ${@expert_score_flag},
                  p_user_id=>${/session/@user_id},
                  p_department_approve_flag=>${@department_approve_flag},
                  p_trans_cost_flag => ${@trans_cost_flag},
		          p_price_category	=>${@price_category},
		          p_pay_term		=>${@pay_term},
		          p_created_by		=>${@created_by}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              BEGIN
                jk_pur_rfx_pkg.modify_pur_rfx_headers
                (
                  p_feedback_header_id=>${@feedback_header_id},
                  p_rfx_header_id=>${@rfx_header_id},
                  p_rfx_category=>${@rfx_category},
                  p_rfx_type_id=>${@rfx_type_id},
                  p_title=>${@title},
                  p_owner_business_unit_id=>${@business_unit_id},
                  p_rfx_method=>${@rfx_method},
                  p_auction_direction=>${@auction_direction},
                  p_auction_rule=>${@auction_rule},
                  p_open_rule=>${@open_rule},
                  p_ranking_rule=>${@ranking_rule},
                  p_auction_ranking=>${@auction_ranking},
                  p_payment_method_id=>${@payment_method_id},
                  p_currency_code=>${@currency_code},
                  p_exchange_rate=>${@exchange_rate},
                  p_tax_included_flag=>${@tax_included_flag},
                  p_tax_type_id=>${@tax_type_id},
                  p_tax_type_code=>${@tax_type_code},
                  p_tax_type_rate=>${@tax_type_rate},
                  p_place_of_delivery=>${@place_of_delivery},
                  p_feedback_start_time=>nvl(to_date(${@feedback_start_time},'yyyy-mm-dd HH24:mi:ss'),sysdate),
                  p_feedback_end_time=>to_date(${@feedback_end_time},'yyyy-mm-dd HH24:mi:ss'),
                  p_template_id=>${@template_id},
                  p_comments=>${@comments},
                  p_sealed_bid_flag => ${@sealed_bid_flag},
                  p_sealing_cutoff_date => to_date(${@sealing_cutoff_date},'yyyy-mm-dd HH24:mi:ss'),
                  p_source_type  => ${@source_type},
                  p_pur_organization_id => ${@pur_organization_id},
                  p_prequal_flag      => ${@prequal_flag},
    			  p_expert_score_flag    => ${@expert_score_flag},
    			  p_score_mode=>${@score_mode},
    			  p_closed_bidding_flag=>${@closed_bidding_flag},
    			  p_total_cost=>${@total_costs},
                  p_user_id=>${/session/@user_id},
                  p_department_approve_flag=>${@department_approve_flag},
                  p_trans_cost_flag => ${@trans_cost_flag},
		          p_price_category	=>${@price_category},
		          p_pay_term		=>${@pay_term},
		          p_created_by		=>${@created_by}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
              BEGIN
                jk_pur_rfx_pkg.submit_rfx
                (
                  p_rfx_header_id=>${@rfx_header_id},                  
		          p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
              BEGIN
                jk_pur_rfx_pkg.delete_rfx
                (
                  p_rfx_header_id=>${@rfx_header_id},                  
		          p_user_id=>${/session/@user_id}
                );
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
