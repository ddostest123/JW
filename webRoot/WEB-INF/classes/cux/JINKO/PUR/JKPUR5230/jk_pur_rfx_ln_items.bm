<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-27 上午9:38:00  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    rownum * 10 line_number,
                    li.rfx_line_item_id,
                    li.rfx_header_id,
                    li.inv_organization_id,
                    (SELECT
                        io.description
                    FROM
                        inv_organizations_vl io
                    WHERE
                        io.inv_organization_id = li.inv_organization_id
                    ) inv_organization_desc,
                    li.item_category_id,
                    (SELECT
                        ic.category_name
                    FROM
                        mtl_categories_user_defined_vl ic
                    WHERE
                        ic.category_udf_id = li.item_category_id
                    ) item_category_desc,
                    li.item_id,
                    li.item_id AS require_item_id,
                    NVL(
                    (SELECT
                        m.display_item_code
                    FROM
                        mtl_system_items_vl m
                    WHERE
                        m.item_id = li.item_id
                    ), li.item_code) AS require_item_code,
                    NVL(
                    (SELECT m.item_name FROM mtl_system_items_vl m WHERE m.item_id = li.item_id
                    ), li.item_code) AS require_item_name,
                    li.item_code,
                    li.item_desc,
                    li.item_note,
                    li.uom_code,
                    (SELECT
                        fv.uom_desc
                    FROM
                        fnd_uom_codes_vl fv
                    WHERE
                        fv.uom_code       = li.uom_code AND
                        fv.business_group = h.owner_business_group
                    ) uom_desc,
                    li.quantity,
                    TO_CHAR(li.need_by_date, 'yyyy-mm-dd') need_by_date,
                    li.comments,
                    li.line_num,
                    li.limit_price,
                    li.tax_included_flag,
                    li.tax_type_id,
                    li.tax_type_code,
                    li.tax_type_rate,
                    li.feedback_range,
                    li.allow_same_price_flag,
                    li.buffer_range,
                    li.decimal_digits,
                    (SELECT
                        COUNT(*)
                    FROM
                        fnd_atm_attachment_multi am
                    WHERE
                        am.table_name     = 'PUR_RFX_LN_ITEMS' AND
                        am.table_pk_value = TO_CHAR(li.rfx_line_item_id)
                    ) AS atm_counts,
                    TO_CHAR(li.supply_date_from, 'yyyy-mm-dd') supply_date_from,
                    TO_CHAR(li.supply_date_to, 'yyyy-mm-dd') supply_date_to
                    /*,
                    #flex_query_sql#*/
                FROM
                    jk_pur_rfx_ln_items li,
                    jk_pur_rfx_headers h
                WHERE
                    li.rfx_header_id = ${@rfx_header_id} AND
                    h.rfx_header_id  = li.rfx_header_id
                ORDER BY
                    li.line_num
            ]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter name="rfx_header_id" inputPath="@rfx_header_id"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="rfx_line_item_id" dataType="java.lang.Long" input="false" output="true" outputPath="/parameter/@rfx_line_item_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              declare 
            	v_rfx_line_item_id number;
              BEGIN
                pur_rfx_pkg.create_pur_rfx_ln_items
                (
                  x_rfx_line_item_id=>v_rfx_line_item_id,
                  p_rfx_header_id=>${/parameter/@rfx_header_id},
                  p_company_id=>${@company_id},
                  p_inv_organization_id=>${@inv_organization_id},
                  p_pur_ln_type=>${@pur_ln_type},
                  p_item_category_id=>${@item_category_id},
                  p_item_id=>${@item_id},
                  p_item_code=>${@item_code},
                  p_item_desc=>${@item_desc},
                  p_item_note=>${@item_note},
                  p_item_parameter_config=>${@item_parameter_config},
                  p_uom_code=>${@uom_code},
                  p_quantity=>${@quantity},
                  p_need_by_date=>to_date(${@need_by_date},'yyyy-mm-dd hh24:mi:ss'),
                  p_feedback_range=>${@feedback_range},
                  p_pur_req_num=>${@pur_req_num},
                  p_data_source=>${@data_source},
                  p_data_source_id=>${@data_source_id},
                  p_data_source_code=>${@data_source_code},
                  p_data_source_name=>${@data_source_name},
                  p_comments=>${@comments},
                  p_proposed_vendor_id=>${@proposed_vendor_id},
                  p_proposed_vendor_code=>${@proposed_vendor_code},
                  p_proposed_vendor_desc=>${@proposed_vendor_desc},
                  p_proposed_price=>${@proposed_price},
                  p_proposed_net_price=>${@proposed_net_price},
                  p_proposed_net_amount=>${@proposed_net_amount},
                  p_proposed_tax_amount=>${@proposed_tax_amount},
                  p_proposed_total_amount=>${@proposed_total_amount},
                  p_proposed_functional_amount=>${@proposed_functional_amount},
                  p_proposed_entered_amount=>${@proposed_entered_amount},
                  p_work_num=>${@work_num},
                  p_bom_num=>${@bom_num},
                  p_sm_comment=>${@sm_comment},
                  p_specification=>${@specification},
                  p_user_id=>${/session/@user_id}
                );
                #flex_save_sql#
              END;
		      ]]></bm:update-sql>
            <bm:parameters>
                <bm:parameter name="rfx_line_item_id" input="true" output="true"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              declare
            	v_rfx_line_item_id number;
              BEGIN
                pur_rfx_pkg.modify_pur_rfx_ln_items
                (
                  p_rfx_line_item_id=>${@rfx_line_item_id},
                  p_rfx_header_id=>${/parameter/@rfx_header_id},
                  p_company_id=>${@company_id},
                  p_inv_organization_id=>${@inv_organization_id},
                  p_pur_ln_type=>${@pur_ln_type},
                  p_item_category_id=>${@item_category_id},
                  p_item_id=>${@item_id},
                  p_item_code=>${@item_code},
                  p_item_desc=>${@item_desc},
                  p_item_note=>${@item_note},
                  p_item_parameter_config=>${@item_parameter_config},
                  p_uom_code=>${@uom_code},
                  p_quantity=>${@quantity},
                  p_need_by_date=>to_date(${@need_by_date},'yyyy-mm-dd hh24:mi:ss'),
                  p_feedback_range=>${@feedback_range},
                  p_pur_req_num=>${@pur_req_num},
                  p_comments=>${@comments},
                  p_user_id=>${/session/@user_id}
                );
                
                v_rfx_line_item_id := ${@rfx_line_item_id};
                #flex_save_sql#
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
              BEGIN
                pur_rfx_pkg.delete_pur_rfx_ln_items
                (
                  p_rfx_line_item_id=>${@rfx_line_item_id},
                  p_user_id=>${/session/@user_id}
                ); 
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <flex-segmentBm headerIdPath="/parameter/@rfx_header_id" headerTableName="PUR_RFX_HEADERS" lineTableName="PUR_RFX_LN_ITEMS" templateFieldName="template_id" type="grid_expanded_bm_query"/>
    <flex-segmentBm applPkVarName="v_rfx_line_item_id" headerIdPath="/parameter/@rfx_header_id" headerTableName="PUR_RFX_HEADERS" lineTableName="PUR_RFX_LN_ITEMS" templateFieldName="template_id" type="grid_expanded_bm_insert"/>
    <flex-segmentBm applPkVarName="v_rfx_line_item_id" headerIdPath="/parameter/@rfx_header_id" headerTableName="PUR_RFX_HEADERS" lineTableName="PUR_RFX_LN_ITEMS" templateFieldName="template_id" type="grid_expanded_bm_update"/>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
			Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
        	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_grid_expanded_bm.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
