<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2018-4-25
    $Revision: 1.0  
    $Purpose: 晶科三期，招竞标工作流审批明细页面，报价明细查询BM
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT *
				  FROM (SELECT h.feedback_header_id,
				               l.feedback_line_id,
				               h.rfx_header_id,
				               h.vendor_id,
				               rfxh.rfx_method,
				               rfxh.auction_direction,
				               rfxh.open_rule,
				               rfxh.ranking_rule,
				               l.item_id,
				               l.item_code,
				               l.item_desc,
				               l.quantity,
				               l.valid_fb_by,
				               to_char(l.feedback_time,
				                       'yyyy-mm-dd hh24:mi:ss') AS feedback_time,
				               (SELECT u.user_desc FROM sys_user_v u WHERE u.user_id = l.valid_fb_by) feedback_by_desc,
				               l.valid_fb_wholesale_price,
				               l.valid_fb_retail_price,
				               (SELECT fc.company_full_name FROM fnd_companies_vl fc WHERE fc.company_id = h.coop_company_id) vendor_desc,
				               jk_pur_rfx_feedback_pkg.get_coefficient_ratio(p_feedback_line_id => l.feedback_line_id,
				                                                           	 p_user_id          => ${/session/@user_id}) AS reverse_bid_coefficient,
				               nvl(l.allotted_quantity,
				               	  0) AS allotted_quantity,
				               nvl(l.quota_ratio,
				               	  0) AS quota_ratio,
				               jk_pur_rfx_approve_pkg.get_price_difference(p_feedback_line_id => l.feedback_line_id,
				                                                           p_user_id          => ${/session/@user_id}) AS price_difference,
				               jk_pur_rfx_approve_pkg.get_economize_amount(p_feedback_line_id => l.feedback_line_id,
				                                                           p_user_id          => ${/session/@user_id}) AS economize_amount,
				               jk_pur_rfx_feedback_pkg.get_rank_by_fb_line(p_feedback_line_id => l.feedback_line_id,
				                                                           p_user_id          => ${/session/@user_id}) AS rk
				          FROM jk_pur_rfx_fb_headers_snaps h,
				               jk_pur_rfx_fb_lines_snaps   l,
				               jk_pur_rfx_header_snaps     rfxh,
				               jk_pur_rfx_ln_items_snaps   rfxl
				         WHERE h.snap_feedback_header_id = l.snap_feedback_header_id
				               AND h.snap_rfx_header_id = rfxh.snap_rfx_header_id
				               AND rfxh.snap_rfx_header_id = rfxl.snap_rfx_header_id
				               AND l.rfx_line_item_id = rfxl.rfx_line_item_id
				               AND l.valid_fb_retail_price IS NOT NULL
				               AND rfxh.snap_rfx_header_id = ${@snap_rfx_header_id}
				               AND l.abandoned_flag = 'N')
				 ORDER BY rfx_header_id,
				          rk ASC
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
