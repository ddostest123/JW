<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-27 上午9:38:00  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    rownum*10 line_number,
                    li.rfx_line_item_id,
                    li.rfx_header_id,
                    li.inv_organization_id,
                    (SELECT
                        io.description
                    FROM
                        inv_organizations_vl io
                    WHERE
                        io.inv_organization_id = li.inv_organization_id
                    ) inv_organization_desc,
                    NVL(li.item_category_id,
                    (SELECT
                        cci.category_udf_id
                    FROM
                        mtl_category_classify_items cci
                    WHERE
                        cci.item_id         = li.item_id AND
                        cci.category_udf_id =
                        (SELECT
                            MIN(cci.category_udf_id)
                        FROM
                            mtl_category_classify_items cci
                        WHERE
                            cci.item_id = li.item_id
                        )
                    )) item_category_id,
                    NVL(
                    (SELECT
                        ic.category_name
                    FROM
                        mtl_categories_user_defined_vl ic
                    WHERE
                        ic.category_udf_id = li.item_category_id
                    ),
                    (SELECT
                        udv.category_name
                    FROM
                        mtl_category_classify_items cci,
                        mtl_categories_user_defined_vl udv
                    WHERE
                        cci.category_udf_id = udv.category_udf_id AND
                        cci.item_id         = li.item_id AND
                        cci.category_udf_id =
                        (SELECT
                            MIN(cci.category_udf_id)
                        FROM
                            mtl_category_classify_items cci
                        WHERE
                            cci.item_id = li.item_id
                        )
                    )) AS item_category_desc,
                    (SELECT
                        ic.quote_tmpl_flag
                    FROM
                        mtl_categories_user_defined ic
                    WHERE
                        ic.category_udf_id = li.item_category_id
                    ) quote_tmpl_flag,
                    li.item_id,
                    li.item_code,
                    li.item_desc,
                    li.item_note,
                    li.uom_code,
                    (SELECT
                        fv.uom_desc
                    FROM
                        fnd_uom_codes_vl fv
                    WHERE
                        fv.uom_code       = li.uom_code AND
                        fv.business_group = h.owner_business_group
                    ) uom_desc,
                    li.quantity,
                    TO_CHAR(li.need_by_date, 'yyyy-mm-dd') need_by_date,
                    li.cancel_flag,
                    li.comments,
                    li.line_num,
                    li.limit_price, 
                    li.tax_included_flag,
                    li.tax_type_id,
                    li.tax_type_code,
                    li.tax_type_rate, 
                    li.feedback_range,
                    li.line_num,
                    li.req_header_id,
                    li.req_number,
                    li.req_line_id,
                    li.req_line_num,
                    (SELECT
                        COUNT(*)
                    FROM
                        fnd_atm_attachment_multi am
                    WHERE
                        am.table_name     = 'JK_PUR_RFX_LN_ITEMS' AND
                        am.table_pk_value = TO_CHAR(li.rfx_line_item_id)
                    ) AS atm_counts,
                    li.allow_same_price_flag,
                    li.buffer_range,
                    li.decimal_digits,
                    li.rule_id,
                    li.rule_name,
                    TO_CHAR(li.supply_date_from, 'yyyy-mm-dd') supply_date_from,
                    TO_CHAR(li.supply_date_to, 'yyyy-mm-dd') supply_date_to
                FROM
                    jk_pur_rfx_ln_items li,
                    jk_pur_rfx_headers h #WHERE_CLAUSE# AND
                    li.cancel_flag  = 'N' AND
                    h.rfx_header_id = li.rfx_header_id
                ORDER BY
                    li.line_num
            ]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter name="rfx_header_id" inputPath="@rfx_header_id"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="rfx_line_item_id" dataType="java.lang.Long" input="false" output="true" outputPath="@rfx_line_item_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
              
              BEGIN
                jk_pur_zjb_pkg.create_jk_pur_rfx_ln_items
                (
      				o_rfx_line_item_id      =>${@rfx_line_item_id},
      				p_rfx_header_id         =>${/parameter/@rfx_header_id},
      				p_line_num              =>${@line_num},
      				p_item_id               =>${@item_id},
      				p_item_code             =>${@item_code},
      				p_item_desc             =>${@item_desc},
      				p_item_note             =>${@item_note},
      				p_item_category_id      =>${@item_category_id},
      				p_quantity              =>${@quantity},
      				p_uom_code              =>${@uom_code},
      				p_need_by_date          =>to_date(${@need_by_date},'YYYY-MM-DD'),
      				p_limit_price           =>${@limit_price},
      				p_feedback_range        =>${@feedback_range},
      				p_allow_same_price_flag =>${@allow_same_price_flag},
      				p_buffer_range          =>${@buffer_range},
      				p_decimal_digits        =>${@decimal_digits},
      				p_tax_included_flag     =>${@tax_included_flag},
      				p_tax_type_id           =>${@tax_type_id},
      				p_tax_type_code         =>${@tax_type_code},
      				p_tax_type_rate         =>${@tax_type_rate},
      				p_req_header_id         =>${@req_header_id},
      				p_req_number            =>${@req_number},
      				p_req_line_id           =>${@req_line_id},
      				p_req_line_num          =>${@req_line_num},
      				p_inv_organization_id   =>${@inv_organization_id},
      				p_comments              =>${@comments},
      				p_source_from			=>${@source_from},
      				p_pur_req_num			=>${@pur_req_num},
      				p_user_id               =>${/session/@user_id},
      				p_rule_id				=>${@rule_id},
      				p_rule_name				=>${@rule_name},
      				p_supply_date_from		=>to_date(${@supply_date_from},'YYYY-MM-DD'),
      				p_supply_date_to		=>to_date(${@supply_date_to},'YYYY-MM-DD')
    			);
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
              declare
            	v_rfx_line_item_id number;
              BEGIN
                jk_pur_zjb_pkg.modify_jk_pur_rfx_ln_items
                   (
    				p_rfx_line_item_id      =>${@rfx_line_item_id},
    				p_line_num              =>${@line_num},
    				p_item_id               =>${@item_id},
    				p_item_code             =>${@item_code},
    				p_item_desc             =>${@item_desc},
    				p_item_note             =>${@item_note},
    				p_item_category_id      =>${@item_category_id},
    				p_quantity              =>${@quantity},
    				p_uom_code              =>${@uom_code},
    				p_need_by_date          =>to_date(${@need_by_date},'YYYY-MM-DD'),
    				p_limit_price           =>${@limit_price},
    				p_feedback_range        =>${@feedback_range},
    				p_allow_same_price_flag =>${@allow_same_price_flag},
    				p_buffer_range          =>${@buffer_range},
    				p_decimal_digits        =>${@decimal_digits},
    				p_tax_included_flag     =>${@tax_included_flag},
    				p_tax_type_id           =>${@tax_type_id},
    				p_tax_type_code         =>${@tax_type_code},
    				p_tax_type_rate         =>${@tax_type_rate}, 
    				p_inv_organization_id   =>${@inv_organization_id},
    				p_comments              =>${@comments},
    				p_user_id               =>${/session/@user_id},
    				p_rule_id				=>${@rule_id},
      				p_rule_name				=>${@rule_name},
      				p_supply_date_from		=>to_date(${@supply_date_from},'YYYY-MM-DD'),
      				p_supply_date_to		=>to_date(${@supply_date_to},'YYYY-MM-DD')
 				 );
                
                v_rfx_line_item_id := ${@rfx_line_item_id};
              END;
		      ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
              BEGIN
                jk_pur_zjb_pkg.delete_jk_pur_rfx_ln_items
                (
                  p_rfx_line_item_id=>${@rfx_line_item_id},
                  p_user_id=>${/session/@user_id}
                ); 
              END;
		      ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="rfx_line_item_ids" queryExpression="rfx_line_item_id in (${:@rfx_line_item_ids})"/>
        <bm:query-field name="rfx_header_id" queryExpression="li.rfx_header_id = ${@rfx_header_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
    </bm:data-filters>
</bm:model>
