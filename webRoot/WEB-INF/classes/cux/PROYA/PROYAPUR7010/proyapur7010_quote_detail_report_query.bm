<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: hansen  
    $Date: 2015-11-30 下午4:45:54  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi am
                        WHERE
                            am.table_name     = 'PUR_RFX_FEEDBACK_LINES' AND
                            am.table_pk_value = TO_CHAR(l.feedback_line_id) AND
                            rownum            = 1
                        ) AS atm_counts_feedback,
                        h.status header_status,
                        h.rfx_header_id,
                        h.vendor_id,
                        (SELECT
                            ic.category_name
                        FROM
                            mtl_categories_user_defined_vl ic
                        WHERE
                            ic.category_udf_id = rl.item_category_id
                        ) item_category_desc, --物品分类
                        rl.item_category_id,
                        rl.item_code,         --物品编码
                        rl.item_desc,         --物品描述
                        NVL(
                        (SELECT
                            fc.company_full_name
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id = h.coop_company_id
                        ),NVL(
                        (SELECT
                            pvv.full_name
                        FROM
                            PUR_VENDORS_VL pvv
                        WHERE
                            pvv.vendor_id = h.vendor_id
                        ),h.vendor_desc)) vendor_desc, --供应商描述
                        l.valid_fb_retail_price,       --单价
                        l.status,
                        l.rfx_line_item_id,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = l.status AND
                            sc.code        = 'PUR_RFX_FEEDBACK_LINE_STATUS'
                        ) status_desc,
                        l.tax_type_rate,               --税率
                        rh.rfx_number,                 --询价单号
                        vqh.valid_material_amount,     --材料总价
                        vqh.valid_direct_labor_costs,  --其它费用
                        vqh.valid_manufacturing_costs, --制造费用
                        (SELECT
                            --   ql.config_item,
                            nvl((vql.valid_quantity * vql.valid_price),vql.valid_price) valid_amount
                        FROM
                            --    pur_rfx_quote_headers    qh,
                            pur_rfx_quote_lines ql,
                            pur_rfx_vendor_quote_lns vql
                        WHERE
                            --    AND fl.rfx_line_item_id = qh.rfx_line_item_id
                            --      AND ql.quote_header_id = qh.quote_header_id
                            vql.vendor_quote_hd_id = vqh.vendor_quote_hd_id AND
                            vql.quote_line_id      = ql.quote_line_id AND
                            ql.config_item         = '利润'
                        ) profit,
                        (SELECT
                            --   ql.config_item,
                            nvl((vql.valid_quantity * vql.valid_price),vql.valid_price) valid_amount
                        FROM
                            --    pur_rfx_quote_headers    qh,
                            pur_rfx_quote_lines ql,
                            pur_rfx_vendor_quote_lns vql
                        WHERE
                            --    AND fl.rfx_line_item_id = qh.rfx_line_item_id
                            --      AND ql.quote_header_id = qh.quote_header_id
                            vql.vendor_quote_hd_id = vqh.vendor_quote_hd_id AND
                            vql.quote_line_id      = ql.quote_line_id AND
                            ql.config_item         = '包装费'
                        ) packing_fee,
                        (SELECT
                            --   ql.config_item,
                            nvl((vql.valid_quantity * vql.valid_price),vql.valid_price) valid_amount
                        FROM
                            --    pur_rfx_quote_headers    qh,
                            pur_rfx_quote_lines ql,
                            pur_rfx_vendor_quote_lns vql
                        WHERE
                            --    AND fl.rfx_line_item_id = qh.rfx_line_item_id
                            --      AND ql.quote_header_id = qh.quote_header_id
                            vql.vendor_quote_hd_id = vqh.vendor_quote_hd_id AND
                            vql.quote_line_id      = ql.quote_line_id AND
                            ql.config_item         = '运输费'
                        ) traffic_expense,
                        (SELECT
                            --   ql.config_item,
                            nvl((vql.valid_quantity * vql.valid_price),vql.valid_price) valid_amount
                        FROM
                            --    pur_rfx_quote_headers    qh,
                            pur_rfx_quote_lines ql,
                            pur_rfx_vendor_quote_lns vql
                        WHERE
                            --    AND fl.rfx_line_item_id = qh.rfx_line_item_id
                            --      AND ql.quote_header_id = qh.quote_header_id
                            vql.vendor_quote_hd_id = vqh.vendor_quote_hd_id AND
                            vql.quote_line_id      = ql.quote_line_id AND
                            ql.config_item         = '管理费'
                        ) management_expense,
                        (SELECT
                            --   ql.config_item,
                            nvl((vql.valid_quantity * vql.valid_price),vql.valid_price) valid_amount
                        FROM
                            --    pur_rfx_quote_headers    qh,
                            pur_rfx_quote_lines ql,
                            pur_rfx_vendor_quote_lns vql
                        WHERE
                            --    AND fl.rfx_line_item_id = qh.rfx_line_item_id
                            --      AND ql.quote_header_id = qh.quote_header_id
                            vql.vendor_quote_hd_id = vqh.vendor_quote_hd_id AND
                            vql.quote_line_id      = ql.quote_line_id AND
                            ql.config_item         = '税金'
                        ) tax_amount,
                        (SELECT u.description FROM sys_user u WHERE u.user_id = rh.created_by
                        ) created_by_desc, --创建人
                        (SELECT bv.buyer_desc FROM pur_buyers_vl bv WHERE bv.buyer_id = rh.agent_id
                        ) AS agent_name,--采购组
                        rh.agent_id,
                        (SELECT
                            TO_CHAR(t.creation_date, 'YYYY-MM-DD HH24:MI') creation_date
                        FROM
                            pur_rfx_operation_records t
                        WHERE
                            t.rfx_header_id  = rh.rfx_header_id AND
                            t.operation_type = 'APPROVE'
                        ) creation_date_desc,
                        (SELECT
                            t.creation_date
                        FROM
                            pur_rfx_operation_records t
                        WHERE
                            t.rfx_header_id  = rh.rfx_header_id AND
                            t.operation_type = 'APPROVE'
                        ) creation_date,
                        l.feedback_line_id
                    FROM
                        pur_rfx_feedback_lines l,
                        pur_rfx_feedback_headers h,
                        pur_rfx_ln_items rl,
                        --       pur_bg_rfx_types rt,
                        pur_rfx_vendor_quote_hds vqh,
                        pur_rfx_headers rh
                    WHERE
                        h.feedback_header_id = l.feedback_header_id AND
                        l.rfx_line_item_id   = rl.rfx_line_item_id AND
                        h.rfx_header_id      = rh.rfx_header_id AND
                        rh.rfx_header_id     = rl.rfx_header_id AND
                        rl.cancel_flag       = 'N' AND
                        l.cancel_flag        = 'N' AND
                        h.rfx_round          = rl.current_round AND
                        h.rfx_version        = rl.current_version AND
                        h.rfx_round          = rh.round AND
                        h.rfx_version        = rh.version AND
                        vqh.feedback_line_id = l.feedback_line_id AND
                        --     rt.rfx_type_id (+)   = rh.rfx_type_id and
                        (
                            SELECT
                                quote_header_id
                            FROM
                                pur_rfx_quote_headers rqh
                            WHERE
                                rqh.rfx_line_item_id = l.rfx_line_item_id
                        )
                                                                                                                                       IS NOT NULL AND --报价明细表id
                        l.abandoned_flag                                                                                                ='N' AND
                       
                        rh.feedback_end_time<sysdate and
                        (
                            CASE
                                WHEN NVL(rh.sealed_bid_flag,'N')= 'Y' AND
                                    (SELECT
                                            NVL(rp.open_flag,'N')
                                        FROM
                                            pur_rfx_password rp
                                        WHERE
                                            rp.rfx_header_id = rh.rfx_header_id AND
                                            rp.open_user_id  = ${/session/@user_id}
                                    )
                                    = 'N'
                                THEN 'Y'
                                ELSE 'N'
                            END ) = 'N' and
                            NVL(
                        (SELECT
                            '请等待【'
                            ||listagg(s.DESCRIPTION,',') within GROUP (
                        ORDER BY
                            s.DESCRIPTION)
                            ||'】开标'
                        FROM
                            Pur_Rfx_Password p,
                            sys_user s
                        WHERE
                            s.user_id                  = p.open_user_id AND
                            p.rfx_header_id            = rh.rfx_header_id AND
                            NVL(p.open_flag,'N')       = 'N' AND
                            NVL(rh.sealed_bid_flag,'N')= 'Y'
                        GROUP BY
                            p.RFX_HEADER_ID
                        ) ,'-1') = '-1' and
                        rh.owner_business_group = ${/session/@business_group}
                    ) t #WHERE_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="item_category_id" queryExpression="t.item_category_id = ${@item_category_id}"/>
        <bm:query-field name="rfx_number" queryExpression="t.rfx_number = ${@rfx_number}"/>
        <bm:query-field name="item_code" queryExpression="t.item_code = ${@item_code}"/>
        <bm:query-field name="vendor_name" queryExpression="t.vendor_desc = ${@vendor_name}"/>
        <bm:query-field name="agent_id" queryExpression="t.agent_id = ${@agent_id}"/>
        <bm:query-field name="create_by" queryExpression="t.created_by_desc like &apos;%&apos;||${@create_by}||&apos;%&apos;"/>
        <bm:query-field name="item_desc" queryExpression="t.item_desc like &apos;%&apos;||${@item_desc}||&apos;%&apos;"/>
        <bm:query-field name="completion_date_from" queryExpression="t.creation_date &gt;= to_date(${@completion_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="completion_date_to" queryExpression="t.creation_date &lt;= to_date(${@completion_date_to},&apos;yyyy-mm-dd&apos;)"/>
    </bm:query-fields>
</bm:model>
