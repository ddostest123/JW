<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2015-02-11 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单创建，送货单行数据维护BM
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_line_num asc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT l.asn_line_id,
				       l.asn_header_id,
				       l.asn_line_num,
				       l.item_id AS require_item_id,
				       l.item_code AS require_item_code,
				       l.item_name AS require_item_name,
				       (SELECT imv.partner_item_id FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id) AS supply_item_id,
				       (SELECT imv.partner_item_code FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id) AS supply_item_code,
				       (SELECT imv.partner_item_name FROM mtl_item_mapping_vendor_v imv WHERE imv.item_id = l.item_id) AS supply_item_name,
				       l.shipment_num,
				       (SELECT ph.display_release_num FROM pur_headers_all ph WHERE ph.pur_header_id = lla.pur_header_id) release_num,
				       l.po_quantity,
				       l.uom_code,
				       l.unit_price,
				       l.ship_quantity,
				       l.ship_quantity as ship_quantity_max,
				       to_char(l.need_by_date,
				               'yyyy-mm-dd') AS need_by_date,
				       to_char(l.promised_date,
				               'yyyy-mm-dd') AS promised_date,
				       l.lots_num,
				       to_char(l.lots_validity_date,
				               'yyyy-mm-dd') lots_validity_date,
				       l.invoice_num,
				       l.serial_num,
				       l.comments,
				       (SELECT nvl(iio.serial_required_flag,
				                   'N')
				          FROM mtl_item_inv_organization iio
				         WHERE iio.item_id = l.item_id
				               AND iio.inventory_organization_id = lla.ship_to_organization_id) AS serial_required_flag,
				       (SELECT nvl(iio.lot_required_flag,
				                   'N')
				          FROM mtl_item_inv_organization iio
				         WHERE iio.item_id = l.item_id
				               AND iio.inventory_organization_id = lla.ship_to_organization_id) AS lot_required_flag,
				       to_char(l.request_arrival_date,
				               'yyyy-mm-dd') AS request_arrival_date,
				       l.contacts_info,
				       (SELECT h.display_po_number FROM pur_headers_all h WHERE h.pur_header_id = lla.pur_header_id) AS display_po_number,
				       (SELECT h.display_release_num FROM pur_headers_all h WHERE h.pur_header_id = lla.pur_header_id) AS display_release_num,
				       (SELECT la.line_num FROM pur_lines_all la WHERE la.pur_line_id = lla.pur_line_id) AS po_line_num,
				       (SELECT h.revision_num FROM pur_headers_all h WHERE h.pur_header_id = lla.pur_header_id) AS revision_num,
				       l.agent_id,
				       l.agent_name,
				       l.receive_number,
				       to_char(l.receive_date,
				               'yyyy-mm-dd') AS receive_date,
				       l.batch_id,
				       l.print_time,
				       l.invps,
				       l.invoice_source,
				       l.invoice_barcode,
				       l.apprival_number,
				       l.packet_quantity,
		               l.production_batch,
		               l.environmental_batch,
		               l.packet_weight,
		               l.box_weight,
		               l.heat_number,
		               l.reel_number,
		               l.package_number,
		               l.asn_confirm_quantity,
		               l.rcv_confirm_quantity,
		               l.shtn_confirm_quantity,
		               nvl(l.need_shtn_confirm_flag,'N') need_shtn_confirm_flag,
		               nvl(l.shtn_confirm_flag,'N') shtn_confirm_flag,
		               (SELECT CASE
					         WHEN COUNT(*) > 1 THEN
					          'Y'
					         ELSE
					          'N'
					       END
					  FROM inv_asn_lines ial,inv_asn_headers iah
					 WHERE ial.asn_header_id = iah.asn_header_id
					 	   and ial.heat_number IS NOT NULL
					       and nvl(ial.cancel_flag,'N') = 'N'
					       and nvl(ial.close_flag,'') = 'N'
					       and nvl(ial.shtn_confirm_flag,'N') = 'N'
					       AND ial.heat_number = l.heat_number ) heat_repeat_flag,
		               (select pla.ean_code from pur_lines_all pla where pla.pur_line_id=lla.pur_line_id) as ean_code
				  FROM pur_line_locations_all lla,
				       inv_asn_lines          l
				 WHERE lla.pur_line_location_id = l.line_location_id
				   and l.asn_header_id = ${/parameter/@asn_header_id}
				#ORDER_BY_CLAUSE#				   
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
                	inv_asn_pkg.modify_rcv_confirm_quantity
						  (
						    p_asn_line_id          => ${@asn_line_id},
						    p_asn_header_itf_id	   => ${../../@asn_header_itf_id},
						    p_rcv_confirm_quantity => ${@rcv_confirm_quantity},
						    p_user_id              => ${/session/@user_id}
						  );
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
