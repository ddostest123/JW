<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: IsaacF  
    $Date: 2013-6-27 下午10:59:14  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*,
                    DECODE(v.suggested_total_amount, '***', '***', v.suggested_total_amount - v.bargain_amount_2) price_difference,
                    DECODE(v.suggested_total_amount, NULL, NULL, 0, NULL, '***', '***', v.bargain_amount_2) bargain_amount
                FROM
                    (SELECT
                        lv.rfx_line_vendor_id,
                        lv.rfx_header_id,
                        rh.round,
                        rh.version,
                        lv.coop_business_group,
                        lv.coop_company_id,
                        lv.vendor_id,
                        (SELECT
                            fc.company_code
                        FROM
                            fnd_companies fc
                        WHERE
                            fc.company_id = lv.coop_company_id
                        ) vendor_code,
                        (SELECT
                            fc.company_full_name
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id = lv.coop_company_id
                        ) vendor_desc,
                        lv.vendor_site_id,
                        lv.vendor_address,
                        lv.vendor_contact_id,
                        lv.contact_person,
                        lv.contact_mobile,
                        lv.e_mail,
                        lv.feedback_status,
                        (SELECT
                            scv.code_value_name
                        FROM
                            sys_code_values_vl scv,
                            sys_codes_vl sc
                        WHERE
                            sc.code_id     = scv.code_id AND
                            scv.code_value = lv.feedback_status AND
                            sc.code        = 'PUR_RFX_VENDOR_FEEDBACK_STATUS'
                        ) feedback_status_desc,
                        lv.proposed_flag,
                        lv.sms_schicken_flag,
                        lv.comments,
                        (SELECT
                            SUM(NVL(fl.valid_fb_retail_price, 0))
                        FROM
                            pur_rfx_feedback_headers fh,
                            pur_rfx_feedback_lines fl,
                            pur_rfx_ln_items li
                        WHERE
                            fh.rfx_header_id      = rh.rfx_header_id AND
                            fh.feedback_header_id = fl.feedback_header_id AND
                            fl.rfx_line_item_id   = li.rfx_line_item_id AND
                            fh.rfx_round          = li.current_round AND
                            fh.rfx_version        = li.current_version AND
                            fh.coop_company_id    = lv.coop_company_id AND
                            fh.cancel_flag        = 'N' AND
                            fl.cancel_flag        = 'N' AND
                            li.cancel_flag        = 'N' AND
                            li.rfx_finished_flag  = 'N'
                        ) AS total_price,
                        (SELECT
                            SUM(NVL(fl.valid_fb_retail_price, 0) * li.quantity)
                        FROM
                            pur_rfx_feedback_headers fh,
                            pur_rfx_feedback_lines fl,
                            pur_rfx_ln_items li
                        WHERE
                            fh.rfx_header_id      = rh.rfx_header_id AND
                            fh.feedback_header_id = fl.feedback_header_id AND
                            fl.rfx_line_item_id   = li.rfx_line_item_id AND
                            fh.rfx_round          = li.current_round AND
                            fh.rfx_version        = li.current_version AND
                            fh.coop_company_id    = lv.coop_company_id AND
                            fh.cancel_flag        = 'N' AND
                            fl.cancel_flag        = 'N' AND
                            li.cancel_flag        = 'N' AND
                            li.rfx_finished_flag  = 'N'
                        ) AS total_amount,
                        (SELECT
                            SUM(NVL(fl.valid_fb_retail_price, 0) * fl.allotted_quantity)
                        FROM
                            pur_rfx_feedback_headers fh,
                            pur_rfx_feedback_lines fl,
                            pur_rfx_ln_items li
                        WHERE
                            fh.rfx_header_id      = rh.rfx_header_id AND
                            fh.feedback_header_id = fl.feedback_header_id AND
                            fl.rfx_line_item_id   = li.rfx_line_item_id AND
                            fh.rfx_round          = li.current_round AND
                            fh.rfx_version        = li.current_version AND
                            fh.coop_company_id    = lv.coop_company_id AND
                            fh.cancel_flag        = 'N' AND
                            fl.cancel_flag        = 'N' AND
                            li.cancel_flag        = 'N' AND
                            li.rfx_finished_flag  = 'N' AND
                            fl.suggested_flag     = 'Y'
                        ) AS suggested_total_amount,
                        (SELECT
                            COUNT(*)
                        FROM
                            pur_rfx_feedback_headers fh,
                            pur_rfx_feedback_lines fl,
                            pur_rfx_ln_items li
                        WHERE
                            fh.rfx_header_id            = lv.rfx_header_id AND
                            fh.feedback_header_id       = fl.feedback_header_id AND
                            fl.rfx_line_item_id         = li.rfx_line_item_id AND
                            fh.rfx_round                = li.current_round AND
                            fh.rfx_version              = li.current_version AND
                            fh.coop_company_id          = lv.coop_company_id AND
                            fh.cancel_flag              = 'N' AND
                            fl.cancel_flag              = 'N' AND
                            li.cancel_flag              = 'N' AND
                            li.rfx_finished_flag        = 'N' AND
                            fl.current_fb_retail_price IS NOT NULL
                        ) AS feedback_counts,
                        fhh.feedback_header_id,
                        bid_score_pkg.get_bidding_score(-fhh.feedback_header_id,${/session/@user_id}) AS bidding_score,

                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi am
                        WHERE
                            am.table_name = 'PUR_RFX_FEEDBACK_HEADER' AND
                            EXISTS
                            (SELECT
                                1
                            FROM
                                pur_rfx_feedback_headers fh
                            WHERE
                                fh.rfx_header_id               = rh.rfx_header_id AND
                                fh.coop_company_id             = lv.coop_company_id AND
                                fh.rfx_round                   = rh.round AND
                                fh.rfx_version                 = rh.version AND
                                TO_CHAR(fh.feedback_header_id) = am.table_pk_value
                            )
                        ) AS atm_counts,
                        (SELECT
                            bargain_amount
                        FROM
                            pur_rfx_feedback_headers prfh
                        WHERE
                            prfh.feedback_header_id = fhh.feedback_header_id
                        ) bargain_amount_2
                    FROM
                        pur_rfx_ln_vendors lv,
                        pur_rfx_headers rh,
                        (SELECT
                            MAX(fh.feedback_header_id) AS feedback_header_id,
                            fh.rfx_header_id,
                            fh.coop_company_id
                        FROM
                            pur_rfx_feedback_headers fh,
                            pur_rfx_feedback_lines fl,
                            pur_rfx_ln_items li
                        WHERE
                            fh.feedback_header_id = fl.feedback_header_id AND
                            fl.rfx_line_item_id   = li.rfx_line_item_id AND
                            fh.rfx_round          = li.current_round AND
                            fh.rfx_version        = li.current_version AND
                            fh.cancel_flag        = 'N' AND
                            fl.cancel_flag        = 'N' AND
                            li.cancel_flag        = 'N' AND
                            li.rfx_finished_flag  = 'N'
                        GROUP BY
                            fh.rfx_header_id,
                            fh.coop_company_id
                        ) fhh
                    WHERE
                        lv.rfx_header_id    = ${/parameter/@rfx_header_id} AND
                        lv.rfx_header_id    = rh.rfx_header_id AND
                        fhh.rfx_header_id   = rh.rfx_header_id AND
                        fhh.coop_company_id = lv.coop_company_id
                    ) v
            ]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter inputPath="/parameter/@rfx_header_id"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
                    UPDATE
                        pur_rfx_feedback_headers h
                    SET
                        h.bargain_amount   = ${@bargain_amount},
                        h.last_updated_by  = ${/session/@user_id},
                        h.last_update_date = sysdate
                    WHERE
                        h.feedback_header_id = ${@feedback_header_id};
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
