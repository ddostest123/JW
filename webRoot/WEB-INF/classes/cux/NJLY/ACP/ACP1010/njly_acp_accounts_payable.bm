<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:e="aurora.service.exception" xmlns:o="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" baseTable="NJLY_ACP_ACCOUNTS_PAYABLE" defaultOrderBy="t1.period_name desc, t1.vendor_code">
    <bm:fields>
        <bm:field name="payable_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="PAYABLE_ID" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.PAYABLE_ID"/>
        <bm:field name="status" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="STATUS" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.STATUS"/>
        <bm:field name="period_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PERIOD_NAME" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.PERIOD_NAME"/>
        <bm:field name="vendor_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="VENDOR_ID" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.VENDOR_ID"/>
        <bm:field name="vendor_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="VENDOR_CODE" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.VENDOR_CODE"/>
        <bm:field name="vendor_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="VENDOR_NAME" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.VENDOR_NAME"/>
        <bm:field name="period_deposit_amount" databaseType="NUMBER" datatype="java.lang.Double" physicalName="PERIOD_DEPOSIT_AMOUNT" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.PERIOD_DEPOSIT_AMOUNT"/>
        <bm:field name="period_payment_amount" databaseType="NUMBER" datatype="java.lang.Double" physicalName="PERIOD_PAYMENT_AMOUNT" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.PERIOD_PAYMENT_AMOUNT"/>
        <bm:field name="left_payable_amount" databaseType="NUMBER" datatype="java.lang.Double" physicalName="LEFT_PAYABLE_AMOUNT" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.LEFT_PAYABLE_AMOUNT"/>
        <bm:field name="comments" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="COMMENTS" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.COMMENTS"/>
        <bm:field name="owner_business_group" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="OWNER_BUSINESS_GROUP" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.OWNER_BUSINESS_GROUP"/>
        <bm:field name="owner_company_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="OWNER_COMPANY_ID" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.OWNER_COMPANY_ID"/>
        <bm:field name="coop_business_group" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="COOP_BUSINESS_GROUP" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.COOP_BUSINESS_GROUP"/>
        <bm:field name="coop_company_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="COOP_COMPANY_ID" prompt="NJLY_ACP_ACCOUNTS_PAYABLE.COOP_COMPANY_ID"/>
        <bm:field name="status_display" expression="(SELECT code_value_name FROM sys_code_values_v WHERE code = &apos;NJLY_ACP_ACCOUNTS_PAYABLE_STATUS&apos; AND code_value = t1.status)" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
            	BEGIN
					njly_acp_accounts_payable_pkg.insert_accounts_payable(
					    p_period_name           => ${@period_name},
					    p_vendor_id             => ${@vendor_id},
					    p_vendor_code           => ${@vendor_code},
					    p_vendor_name           => ${@vendor_name},
					    p_period_deposit_amount => ${@period_deposit_amount},
					    p_period_payment_amount => ${@period_payment_amount},
					    p_left_payable_amount   => ${@left_payable_amount},
					    p_comments              => ${@comments},
					    p_owner_business_group  => ${/session/@business_group},
					    p_owner_company_id      => ${@owner_company_id},
					    p_coop_business_group   => ${@coop_business_group},
					    p_coop_company_id       => ${@coop_company_id},
					    p_user_id               => ${/session/@user_id});
				END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
            	BEGIN
					njly_acp_accounts_payable_pkg.update_accounts_payable(
					    p_payable_id           	=> ${@payable_id},
					    p_period_deposit_amount => ${@period_deposit_amount},
					    p_period_payment_amount => ${@period_payment_amount},
					    p_left_payable_amount   => ${@left_payable_amount},
					    p_comments              => ${@comments},
					    p_user_id               => ${/session/@user_id});
				END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
            	BEGIN
					njly_acp_accounts_payable_pkg.withdraw_accounts_payable(p_payable_id => ${@payable_id}, p_user_id => ${/session/@user_id});
				END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="payable_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field field="payable_id" queryOperator="="/>
        <bm:query-field field="period_name" queryOperator="="/>
        <bm:query-field field="status" queryOperator="="/>
        <bm:query-field field="vendor_id" queryOperator="="/>
    </bm:query-fields>
</bm:model>
