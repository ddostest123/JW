<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单创建，入口页面数据查询BM（采购订单信息查询）
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="v.owner_company_id,v.po_num,v.line_num,v.shipment_num ASC">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    rownum AS line_sequence,
                    v.*,
                    quantity_received + quantity_on_the_way quantity_shipped,
                    quantity_on_the_way-(select nvl(sum(nvl(l.functional_trx_amount,0)),0)
												           from pur_rcv_trx_lines l
												          where l.from_po_line_location_id = v.pur_line_location_id
												            and l.rcv_trx_type = 'RETRUN_TO_VENDOR') quantity_on_the_way
                FROM
                    (SELECT
                        ll.pur_line_location_id,
                        h.pur_header_id,
                        l.item_id AS require_item_id,
                        NVL(l.item_code,
                        (SELECT
                            m.display_item_code
                        FROM
                            mtl_system_items_vl m
                        WHERE
                            m.item_id = l.item_id
                        )) AS require_item_code,
                        NVL(l.item_description,
                        (SELECT m.item_name FROM mtl_system_items_vl m WHERE m.item_id = l.item_id
                        )) AS require_item_name,
                        NVL(l.ean_code,
                        (SELECT m.ean_code FROM mtl_system_items_vl m WHERE m.item_id = l.item_id
                        )) AS ean_code,
                        (SELECT
                            imv.partner_item_id
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id                = l.item_id AND
                            imv.partner_business_group = h.coop_business_group
                        ) AS supply_item_id,
                        (SELECT
                            imv.partner_item_code
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id                = l.item_id AND
                            imv.partner_business_group = h.coop_business_group
                        ) AS supply_item_code,
                        (SELECT
                            imv.partner_item_name
                        FROM
                            mtl_item_mapping_vendor_v imv
                        WHERE
                            imv.item_id                = l.item_id AND
                            imv.partner_business_group = h.coop_business_group
                        ) AS supply_item_name,
                        h.business_unit_id,
                        h.coop_business_group AS business_group,
                        h.coop_company_id AS company_id,
                        h.owner_business_group,
                        (SELECT
                            fc.company_code
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id = h.coop_company_id
                        ) AS vendor_company_code,
                        (SELECT
                            fc.company_full_name
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id = h.coop_company_id
                        ) AS vendor_company_name,
                        h.owner_company_id,
                        (SELECT
                            fcv.company_code
                        FROM
                            fnd_companies_vl fcv
                        WHERE
                            fcv.company_id = h.owner_company_id
                        ) AS company_code,
                        (SELECT
                            fcv.company_full_name
                        FROM
                            fnd_companies_vl fcv
                        WHERE
                            fcv.company_id = h.owner_company_id
                        ) AS company_name,
                        h.display_po_number AS po_num,
                        l.line_num,
                        ll.shipment_num,
                        ll.quantity,
                        ll.unit_meas_lookup_code,
                        NVL(
                        (SELECT
                            ucv.uom_code
                            || '/'
                            || ucv.uom_desc
                        FROM
                            fnd_uom_codes_vl ucv
                        WHERE
                            ucv.uom_code       = ll.unit_meas_lookup_code AND
                            ucv.business_group = h.owner_business_group
                        ), ll.unit_meas_lookup_code) AS uom_name,
                      --  DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', (ll.quantity - (cux_tools_pvt.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))), (public_tools_pkg.get_enable_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))) AS quantity_enable_shipped1,
                        ll.quantity - cux_tools_pvt.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id) quantity_enable_shipped,
                        DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', (ll.quantity - (cux_tools_pvt.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))), (public_tools_pkg.get_enable_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))) AS default_shipped_quantity,
                        DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', (ll.quantity - (cux_tools_pvt.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))), (ll.quantity - NVL(ll.occupy_quantity, 0))) AS shipped_quantity,
                        /* DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', (public_tools_pkg.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id)), (NVL(ll.occupy_quantity, 0))) */
                        /* ((SELECT nvl(SUM(nvl(al.ship_quantity, 0)), 0)
                          FROM inv_asn_lines al
                         WHERE al.line_location_id = ll.pur_line_location_id
                           AND nvl(al.cancel_flag, 'N') = 'N') +
                        nvl(ll.quantity_received, 0))  quantity_shipped, */
                        DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', public_tools_pkg.get_sum_trx_quantity_location(p_pur_line_location_id => ll.pur_line_location_id), (NVL(ll.quantity_received, 0))) AS quantity_received,
                        DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', ((cux_tools_pvt.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id)) - (public_tools_pkg.get_sum_receive_quantity(p_pur_line_location_id => ll.pur_line_location_id))), (
                        (SELECT
                            NVL(SUM(NVL(al.ship_quantity-NVL(al.cancel_quantity,0), 0)), 0)
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.line_location_id      = ll.pur_line_location_id 
                            --AND NVL(al.cancel_flag, 'N') = 'N'
                        ) - NVL(ll.quantity_received, 0))) AS quantity_on_the_way,
                        NULL AS lots_num,
                        NULL AS lots_validity_date,
                        NULL AS invoice_num,
                        NULL AS serial_num,
                        ll.need_by_date,
                        ll.promised_date,
                        TO_CHAR(ll.need_by_date, 'yyyy-mm-dd') AS need_by_date_fmt,
                        TO_CHAR(ll.promised_date, 'yyyy-mm-dd') AS promised_date_fmt,
                        h.revision_num,
                        h.display_release_num release_num,
                        h.vendor_id,
                        h.vendor_site_id,
                        h.vendor_site_name,
                        ll.ship_to_location_id,
                        ll.ship_to_location_code,
                        NVL(ll.ship_to_location_name, ll.ship_to_location_address) AS ship_to_location_name,
                        h.agent_id,
                        h.agent_name,
                        ll.ship_to_organization_id,
                        ll.ship_to_organization_name Ship_To_Organization_Name1,
                        (SELECT Iol.Description
                  FROM Inv_Organizations_Vl Iol
                 WHERE ((PL.Received_Inv_Org IS NULL AND
                       Iol.Business_Unit_Id = Ph.Business_Unit_Id) OR
                       (PL.Received_Inv_Org IS NOT NULL AND
                       Iol.Es_Inv_Org_Id = PL.Received_Inv_Org))
                   AND Rownum = 1) Ship_To_Organization_Name,
                        
                        NULL AS ship_date,
                        NULL AS expected_date,
                        NULL AS comments,
                        ll.warehouse_id,
                        (SELECT
                            iwv.description
                        FROM
                            inv_warehouses_vl iwv
                        WHERE
                            iwv.warehouse_id = ll.warehouse_id
                        ) AS warehouse_name,
                        ll.inv_location_id,
                        (SELECT
                            ilv.description
                        FROM
                            inv_locations_vl ilv
                        WHERE
                            ilv.location_id = ll.inv_location_id
                        ) AS location_name,
                        l.is_immed_shipped_flag,
                        DECODE(l.is_immed_shipped_flag, 'Y', '是', 'N', '否', '否') AS is_immed_shipped_flag_display,
                        ll.request_arrival_date,
                        TO_CHAR(ll.request_arrival_date, 'yyyy-mm-dd') AS request_arrival_date_fmt,
                        l.actual_receiver_code,
                        l.actual_receiver_name,
                        l.contacts_info,
                        l.ship_to_location_address,
                        DECODE(
                        (SELECT
                            fbc.contrast_code FROM fnd_bg_code_contrast fbc WHERE h.owner_business_group = fbc.business_group_code
                        ), 'JINKO', ('下单日期：'
                        || TO_CHAR(
                        (SELECT
                            pha.erp_creation_date
                        FROM
                            pur_headers_all pha
                        WHERE
                            pha.pur_header_id = h.pur_header_id
                        ), 'yyyy/mm/dd')
                        || ' '
                        || l.line_desc), l.line_desc) line_desc,
                        (SELECT
                            pva.creation_flag
                        FROM
                            pur_po_relation_vendors prv,
                            pur_po_rlt_vendor_auth pva
                        WHERE
                            prv.po_rltion_vendor_id = pva.po_rltion_vendor_id AND
                            prv.vendor_id           = h.vendor_id AND
                            h.pur_header_id         = prv.pur_header_id AND
                            pva.document_type       = 'ASN' AND
                            pva.query_flag          = 'Y'
                        ) AS creation_flag,
                        h.confirm_date,
                        h.type_lookup_code,
                        NULL AS useless_id_1,
                        NULL AS useless_id_2,
                        NULL AS useless_id_3,
                        NULL AS useless_id_4,
                        NULL AS useless_id_5,
                        NULL AS useless_id_6,
                        NULL AS useless_id_7,
                        NULL AS useless_id_8,
                        NULL AS useless_id_9,
                        NULL AS useless_id_10,
                        (ll.need_by_date - SYSDATE) need_days,
                        TO_CHAR((ll.need_by_date - NVL(ll.days_early_receipt_allowed, 0)), 'yyyy-mm-dd') asn_early_date,
                        ((ll.need_by_date - NVL(ll.days_early_receipt_allowed, 0)) - SYSDATE) asn_early_days,
                        (SELECT
                            NVL(pvv.asn_early_control_flag, 'N')
                        FROM
                            pur_vendors pvv
                        WHERE
                            pvv.vendor_id = h.vendor_id
                        ) asn_early_control_flag,
                        (SELECT msi.item_specs FROM mtl_system_items msi WHERE msi.item_id=l.item_id
                        ) AS item_specs,
                        (SELECT msi.item_model FROM mtl_system_items msi WHERE msi.item_id=l.item_id
                        ) AS item_model,
                        pl.line_id,
                        (SELECT
                            ph.del_plan_number
                        FROM
                            pur_del_plan_headers ph
                        WHERE
                            ph.header_id = pl.header_id
                        ) del_plan_number,
                        pl.del_plan_line_num,
                        pl.need_del_quantity,
                        TO_CHAR(pl.need_arrive_date, 'yyyy-mm-dd') need_arrive_date,
                        (SELECT
                            TO_CHAR(MIN(pll.need_arrive_date),'yyyy-mm-dd')
                        FROM
                            pur_del_plan_lines pll,
                            pur_line_locations_all plla
                        WHERE
                            pll.source_po_line_id     = pl.source_po_line_id AND
                            plla.pur_line_location_id = pll.source_po_line_location_id AND
                            plla.cancel_flag          = 'N' AND
                            plla.asn_can_create_flag  = 'Y'
                        ) min_need_arrive_date,
                        pl.send_address,
                        h.c_attribute5,
                        h.comments pur_comments,
                        pl.syn_ebs_flg
                    FROM
                        pur_headers_all_v h,
                        pur_lines_all l,
                        pur_line_locations_all ll,
                        pur_del_plan_headers ph,
                        pur_del_plan_lines pl
                    WHERE
                        NVL(h.agency_trade_job_flag, 'N')  = 'N' AND
                        NVL(ll.agency_trade_job_flag, 'N') = 'N' AND
                        h.pur_header_id                    = l.pur_header_id AND
                        l.pur_line_id                      = ll.pur_line_id AND
                        ll.pur_header_id                   = h.pur_header_id AND
                        pl.source_po_header_id(+)          = l.pur_header_id AND
                        pl.source_po_line_id(+)            = l.pur_line_id AND
                        pl.source_po_line_location_id(+)   = ll.pur_line_location_id AND
                        pl.header_id                       = ph.header_id(+) AND
                        (
                            ph.del_plan_status IN ('CONFIRMED','NEW') OR
                            ph.header_id       IS NULL
                        )
                        AND
                        NVL(l.is_returned_flag, 'N') = 'N' AND
                        h.last_version               = 'Y' AND
                        h.srm_status                 = 'CONFIRMED' AND
                        l.cancel_flag                = 'N' AND
                        ll.cancel_flag               = 'N' AND
                        ll.approved_flag             = 'Y' AND
                        ll.closed_flag               = 'N' AND
                        ll.closed_code               in ('OPEN','CLOSED FOR INVOICE') AND
                        NVL(ll.frozen_flag, 'N')     = 'N' AND
                        pl.need_arrive_date < date'2099-12-01'
                        --ll.asn_can_create_flag       = 'Y' 
                        and ((l.item_code like '308%' and pl.need_arrive_date between trunc(sysdate) and to_date((to_char(add_months(sysdate,1),'YYYY-MM')||'-07'),'YYYY-MM-DD')) or (l.item_code not like '308%' and 1=1))
                       AND EXISTS
                        (SELECT
                            1
                        FROM
                            pur_po_rlt_vendor_auth pva,
                            pur_po_relation_vendors prv
                        WHERE
                            pva.po_rltion_vendor_id = prv.po_rltion_vendor_id AND
                            h.pur_header_id         = prv.pur_header_id AND
                            h.vendor_id             = prv.vendor_id AND
                            pva.document_type       = 'ASN' AND
                            pva.query_flag          = 'Y'
                        ) AND
                        (
                            (
                                h.type_lookup_id IS NOT NULL AND
                                EXISTS
                                (SELECT
                                    1
                                FROM
                                    pur_purchase_order_types pot
                                WHERE
                                    pot.order_type_id   = h.type_lookup_id AND
                                    pot.create_asn_flag = 'Y'
                                )
                            )
                            OR
                            (
                                h.type_lookup_id IS NULL AND
                                EXISTS
                                (SELECT
                                    1
                                FROM
                                    pur_purchase_order_types pot,
                                    pur_headers_all_es phae
                                WHERE
                                    phae.pur_header_id     = h.pur_header_id AND
                                    pot.external_system_id = phae.es_id AND
                                    h.type_lookup_code     = pot.order_type_code AND
                                    pot.create_asn_flag    = 'Y'
                                )
                            )
                        )
                        AND
                        (
                            EXISTS
                            (SELECT
                                1
                            FROM
                                fnd_config_center_bg_item_dtl ccbid
                            WHERE
                                ccbid.config_classify_code    = 'PO' AND
                                ccbid.config_item_code        = 'PO_02' AND
                                ccbid.config_item_detail_code = 'PO_02_01' AND
                                ccbid.business_group          = h.owner_business_group AND
                                ccbid.bg_config_item_value    = 'Y'
                            ) OR
                            NOT EXISTS
                            (SELECT
                                1
                            FROM
                                fnd_config_center_bg_item_dtl ccbid
                            WHERE
                                ccbid.config_classify_code    = 'PO' AND
                                ccbid.config_item_code        = 'PO_02' AND
                                ccbid.config_item_detail_code = 'PO_02_01' AND
                                ccbid.business_group          = h.owner_business_group
                            )
                        )
                    ) v #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:count-sql><![CDATA[
        SELECT
            COUNT(*)
        FROM
            (SELECT
                ll.pur_line_location_id,
                h.pur_header_id,
                l.item_id AS require_item_id,
                NVL(
                (SELECT
                    m.display_item_code
                FROM
                    mtl_system_items_vl m
                WHERE
                    m.item_id = l.item_id
                ), l.item_code) AS require_item_code,
                NVL(
                (SELECT m.item_name FROM mtl_system_items_vl m WHERE m.item_id = l.item_id
                ), l.item_description) AS require_item_name,
                h.business_unit_id,
                h.coop_business_group AS business_group,
                h.coop_company_id AS company_id,
                h.owner_company_id,
                h.display_po_number AS po_num,
                l.line_num,
                ll.shipment_num,
                ll.quantity,
                ll.unit_meas_lookup_code,
                DECODE(fnd_config_cnt_get_pkg.get_bg_item_value_asn_08(p_business_group => h.owner_business_group), 'Y', (ll.quantity - (public_tools_pkg.get_sum_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))), (public_tools_pkg.get_enable_shipped_quantity(p_pur_line_location_id => ll.pur_line_location_id))) AS default_shipped_quantity,
                NULL AS lots_num,
                NULL AS lots_validity_date,
                NULL AS invoice_num,
                NULL AS serial_num,
                ll.need_by_date,
                ll.promised_date,
                h.revision_num,
                h.display_release_num release_num,
                h.vendor_id,
                h.vendor_site_id,
                h.vendor_site_name,
                ll.ship_to_location_id,
                ll.ship_to_location_code,
                h.agent_id,
                h.agent_name,
                ll.ship_to_organization_id,
                ll.ship_to_organization_name,
                NULL AS ship_date,
                NULL AS expected_date,
                NULL AS comments,
                ll.warehouse_id,
                ll.inv_location_id,
                l.is_immed_shipped_flag,
                ll.request_arrival_date,
                l.actual_receiver_code,
                l.actual_receiver_name,
                l.contacts_info,
                l.ship_to_location_address,
                ('下单日期：'
                ||
                (SELECT
                    pha.erp_creation_date
                FROM
                    pur_headers_all pha
                WHERE
                    pha.pur_header_id = h.pur_header_id
                )
                || l.line_desc) line_desc,
                (SELECT
                    pva.creation_flag
                FROM
                    pur_po_relation_vendors prv,
                    pur_po_rlt_vendor_auth pva
                WHERE
                    prv.po_rltion_vendor_id = pva.po_rltion_vendor_id AND
                    prv.vendor_id           = h.vendor_id AND
                    h.pur_header_id         = prv.pur_header_id AND
                    pva.document_type       = 'ASN' AND
                    pva.query_flag          = 'Y'
                ) AS creation_flag,
                h.confirm_date,
                NULL AS useless_id_1,
                NULL AS useless_id_2,
                NULL AS useless_id_3,
                NULL AS useless_id_4,
                NULL AS useless_id_5,
                NULL AS useless_id_6,
                NULL AS useless_id_7,
                NULL AS useless_id_8,
                NULL AS useless_id_9,
                NULL AS useless_id_10,
                (ll.need_by_date - SYSDATE) need_days,
                TO_CHAR((ll.need_by_date - NVL(ll.days_early_receipt_allowed, 0)), 'yyyy-mm-dd') asn_early_date,
                ((ll.need_by_date - NVL(ll.days_early_receipt_allowed, 0)) - SYSDATE) asn_early_days,
                (SELECT
                    NVL(pvv.asn_early_control_flag, 'N')
                FROM
                    pur_vendors pvv
                WHERE
                    pvv.vendor_id = h.vendor_id
                ) asn_early_control_flag,
                (SELECT msi.item_specs FROM mtl_system_items msi WHERE msi.item_id=l.item_id
                ) AS item_specs,
                (SELECT msi.item_model FROM mtl_system_items msi WHERE msi.item_id=l.item_id
                ) AS item_model,
                pl.line_id,
                (SELECT
                    ph.del_plan_number
                FROM
                    pur_del_plan_headers ph
                WHERE
                    ph.header_id = pl.header_id
                ) del_plan_number,
                pl.del_plan_line_num,
                pl.need_del_quantity,
                pl.need_arrive_date,
                pl.send_address,
                h.comments pur_comments,
                h.c_attribute5
            FROM
                pur_headers_all_v h,
                pur_lines_all l,
                pur_line_locations_all ll,
                pur_del_plan_headers ph,
                pur_del_plan_lines pl
            WHERE
                NVL(h.agency_trade_job_flag, 'N')  = 'N' AND
                NVL(ll.agency_trade_job_flag, 'N') = 'N' AND
                h.pur_header_id                    = l.pur_header_id AND
                l.pur_line_id                      = ll.pur_line_id AND
                ll.pur_header_id                   = h.pur_header_id AND
                pl.source_po_header_id(+)          = l.pur_header_id AND
                pl.source_po_line_id(+)            = l.pur_line_id AND
                h.display_po_number                = ph.po_number(+) AND
                pl.source_po_line_location_id(+)   = ll.pur_line_location_id AND
                (
                    ph.del_plan_status IN ('CONFIRMED','NEW') OR
                    ph.header_id       IS NULL
                )
                AND
                NVL(l.is_returned_flag, 'N') = 'N' AND
                h.last_version               = 'Y' AND
                h.srm_status                 = 'CONFIRMED' AND
                l.cancel_flag                = 'N' AND
                ll.cancel_flag               = 'N' AND
                ll.approved_flag             = 'Y' AND
                NVL(ll.frozen_flag, 'N')     = 'N' AND
                ll.asn_can_create_flag       = 'Y' AND
                ((l.item_code like '308%' and pl.need_arrive_date between trunc(sysdate) and to_date((to_char(add_months(sysdate,1),'YYYY-MM')||'-07'),'YYYY-MM-DD')) or (l.item_code not like '308%' and 1=1))
                and EXISTS
                (SELECT
                    1
                FROM
                    pur_po_rlt_vendor_auth pva,
                    pur_po_relation_vendors prv
                WHERE
                    pva.po_rltion_vendor_id = prv.po_rltion_vendor_id AND
                    h.pur_header_id         = prv.pur_header_id AND
                    h.vendor_id             = prv.vendor_id AND
                    pva.document_type       = 'ASN' AND
                    pva.query_flag          = 'Y'
                ) AND
                (
                    (
                        h.type_lookup_id IS NOT NULL AND
                        EXISTS
                        (SELECT
                            1
                        FROM
                            pur_purchase_order_types pot
                        WHERE
                            pot.order_type_id   = h.type_lookup_id AND
                            pot.create_asn_flag = 'Y'
                        )
                    )
                    OR
                    (
                        h.type_lookup_id IS NULL AND
                        EXISTS
                        (SELECT
                            1
                        FROM
                            pur_purchase_order_types pot,
                            pur_headers_all_es phae
                        WHERE
                            phae.pur_header_id     = h.pur_header_id AND
                            pot.external_system_id = phae.es_id AND
                            h.type_lookup_code     = pot.order_type_code AND
                            pot.create_asn_flag    = 'Y'
                        )
                    )
                )
                AND
                (
                    EXISTS
                    (SELECT
                        1
                    FROM
                        fnd_config_center_bg_item_dtl ccbid
                    WHERE
                        ccbid.config_classify_code    = 'PO' AND
                        ccbid.config_item_code        = 'PO_02' AND
                        ccbid.config_item_detail_code = 'PO_02_01' AND
                        ccbid.business_group          = h.owner_business_group AND
                        ccbid.bg_config_item_value    = 'Y'
                    ) OR
                    NOT EXISTS
                    (SELECT
                        1
                    FROM
                        fnd_config_center_bg_item_dtl ccbid
                    WHERE
                        ccbid.config_classify_code    = 'PO' AND
                        ccbid.config_item_code        = 'PO_02' AND
                        ccbid.config_item_detail_code = 'PO_02_01' AND
                        ccbid.business_group          = h.owner_business_group
                    )
                )
            ) v #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE#
    ]]></bm:count-sql>
    <bm:query-fields>
        <bm:query-field name="po_num" queryExpression="v.po_num like &apos;%&apos;||trim(${@po_num})||&apos;%&apos;"/>
        <bm:query-field name="pur_comments" queryExpression="v.pur_comments like &apos;%&apos;||trim(${@pur_comments})||&apos;%&apos;"/>
        <bm:query-field name="company_id" queryExpression="v.owner_company_id = ${@company_id}"/>
        <bm:query-field name="item_id" queryExpression="v.require_item_id = ${@item_id}"/>
        <bm:query-field name="item_name" queryExpression="((v.require_item_name like &apos;%&apos;||trim(${@item_name})||&apos;%&apos;) or (v.require_item_code like &apos;%&apos;||trim(${@item_name})||&apos;%&apos;))"/>
        <bm:query-field name="need_by_date_from" queryExpression="v.need_by_date &gt;= to_date(${@need_by_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="need_by_date_to" queryExpression="v.need_by_date &lt;= to_date(${@need_by_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="promised_date_from" queryExpression="v.promised_date &gt;= to_date(${@promised_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="promised_date_to" queryExpression="v.promised_date &lt;= to_date(${@promised_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="agent_name" queryExpression="v.agent_name like &apos;%&apos;||trim(${@agent_name})||&apos;%&apos;"/>
        <bm:query-field name="vendor_site_id" queryExpression="v.vendor_site_id = ${@vendor_site_id}"/>
        <bm:query-field name="ship_to_organization_id" queryExpression="v.ship_to_organization_id = ${@ship_to_organization_id}"/>
        <bm:query-field name="warehouse_id" queryExpression="v.warehouse_id = ${@warehouse_id}"/>
        <bm:query-field name="release_num" queryExpression="v.release_num like &apos;%&apos;||trim(${@release_num})||&apos;%&apos;"/>
        <bm:query-field name="line_num" queryExpression="v.line_num like &apos;%&apos;||trim(${@line_num})||&apos;%&apos;"/>
        <bm:query-field name="shipment_num" queryExpression="v.shipment_num like &apos;%&apos;||trim(${@shipment_num})||&apos;%&apos;"/>
        <bm:query-field name="actual_receiver_name" queryExpression="v.actual_receiver_name like &apos;%&apos;||trim(${@actual_receiver_name})||&apos;%&apos;"/>
        <bm:query-field name="contacts_info" queryExpression="v.contacts_info like &apos;%&apos;||trim(${@contacts_info})||&apos;%&apos;"/>
        <bm:query-field name="is_immed_shipped_flag" queryExpression="nvl(v.is_immed_shipped_flag,&apos;N&apos;) = ${@is_immed_shipped_flag}"/>
        <bm:query-field name="vendor_company_id" queryExpression="v.company_id = ${@vendor_company_id}"/>
        <bm:query-field name="pur_line_location_ids" queryExpression="pur_line_location_id in (${:@pur_line_location_ids})"/>
        <bm:query-field name="confirm_date_from" queryExpression="v.confirm_date &gt;= to_date(${@confirm_date_from},&apos;YYYY-MM-DD hh24:mi:ss&apos;)"/>
        <bm:query-field name="confirm_date_to" queryExpression="v.confirm_date &lt;= to_date(${@confirm_date_to},&apos;YYYY-MM-DD hh24:mi:ss&apos;)"/>
        <bm:query-field name="require_item_name" queryExpression="v.require_item_name like &apos;%&apos;||trim(${@require_item_name})||&apos;%&apos;"/>
        <bm:query-field name="satisfy_early_control_flag" queryExpression="((${@satisfy_early_control_flag} = &apos;N&apos;) or (${@satisfy_early_control_flag} = &apos;Y&apos; and (v.asn_early_control_flag = &apos;N&apos; or (v.asn_early_control_flag = &apos;Y&apos; and v.asn_early_days &lt; 0))))"/>
        <!-- <bm:query-field name="is_del_plan_flag" queryExpression="((${@is_del_plan_flag} = &apos;Y&apos; and v.line_id is not null) or (${@is_del_plan_flag} = &apos;N&apos; and v.line_id is null))"/> -->
        <bm:query-field name="is_consign_po_flag" queryExpression="((${@is_consign_po_flag} = &apos;Y&apos;  and v.c_attribute5 = &apos;Y&apos;) or (${@is_consign_po_flag} = &apos;N&apos; and v.line_id is not null and v.c_attribute5 = &apos;N&apos;))"/>
        <bm:query-field name="category_name" queryExpression=" v.pur_header_id in(select pla.pur_header_id FROM pur_lines_all pla where pla.item_id in ( select mci.item_id FROM mtl_category_classify_items mci where mci.category_udf_id in (select mdv.category_udf_id from mtl_categories_user_defined_vl mdv where mdv.category_name like &apos;%&apos;||trim(${@category_name})||&apos;%&apos;)))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="v.business_group = ${/session/@business_group}"/>
        <bm:data-filter expression="v.default_shipped_quantity &gt; 0 "/>
        <!-- <bm:data-filter expression="v.need_arrive_date  &lt;  '2099-12-01'  "/> -->
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="v" source_name="company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="useless_id_1" type="CREATER"/>
        <authority-segment source_alias="v" source_name="useless_id_2" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="owner_company_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_8" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_9" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id_10" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_11" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_12" type="SALES_PRODUCTION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
      		Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
          	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
