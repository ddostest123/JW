<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单创建，送货单临时头数据查询BM
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_number desc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        t.asn_header_id,
                        t.asn_number,
                        (SELECT
                            COUNT(*)
                        FROM
                            fnd_atm_attachment_multi am
                        WHERE
                            am.table_name     = 'INV_ASN_HEADERS' AND
                            am.table_pk_value = TO_CHAR(t.asn_header_id)
                        ) AS atm_counts,
                        (SELECT
                            COUNT(*)
                        FROM
                            mtl_categories_user_defined_vl mt
                        WHERE
                            EXISTS
                            (SELECT
                                1
                            FROM
                                mtl_category_classify_items mi,
                                mtl_system_items_vl mv
                            WHERE
                                mi.item_id            = mv.item_id AND
                                mi.category_udf_id    = mt.category_udf_id AND
                                mv.display_item_code IN
                                (SELECT
                                    l.item_code
                                FROM
                                    inv_asn_lines_temp l
                                WHERE
                                    l.asn_header_id = t.asn_header_id
                                )
                            ) AND
                            mt.atm_flag       = 'Y' AND
                            mt.category_level = 4
                        ) atms_flag,
                        (SELECT
                            vsv.site_name
                        FROM
                            pur_vendor_sites_vl vsv
                        WHERE
                            vsv.vendor_site_id = t.vendor_site_id
                        ) AS vendor_site_name,
                        (SELECT
                            pvv.full_name
                        FROM
                            pur_vendors_v pvv
                        WHERE
                            pvv.vendor_id = t.vendor_id
                        ) AS vendor_name,
                        (SELECT
                            fcv.company_full_name
                        FROM
                            fnd_companies_vl fcv
                        WHERE
                            fcv.company_id = t.company_id
                        ) AS company_name,
                        (SELECT
                            iov.description
                        FROM
                            inv_organizations_vl iov
                        WHERE
                            iov.inv_organization_id = t.ship_to_organization_id
                        ) AS ship_to_organization_name,
                        NVL(t.ship_to_location_address,
                        (SELECT
                            fl.address_line_1
                        FROM
                            fnd_locations fl
                        WHERE
                            fl.location_id = t.location_id
                        )) location_name,
                        NVL(TO_CHAR(t.ship_date, 'yyyy-mm-dd'), TO_CHAR(SYSDATE, 'yyyy-mm-dd')) AS ship_date,
                        TO_CHAR(t.expected_date, 'yyyy-mm-dd') AS expected_date,
                        t.comments AS header_desc,
                        t.is_immed_shipped_flag,
                        DECODE(NVL(t.is_immed_shipped_flag, 'N'), 'Y', '是', 'N', '否') AS is_immed_shipped_flag_display,
                        DECODE(NVL(t.is_immed_shipped_flag, 'N'), 'Y', 'DIRECT', 'N', 'STANDARD') AS asn_type_code,
                        DECODE(NVL(t.is_immed_shipped_flag, 'N'), 'Y',
                        (SELECT
                            atv.asn_type_name
                        FROM
                            inv_asn_types_vl atv
                        WHERE
                            atv.asn_type_code='DIRECT'
                        ), 'N',
                        (SELECT
                            atv.asn_type_name
                        FROM
                            inv_asn_types_vl atv
                        WHERE
                            atv.asn_type_code='STANDARD'
                        )) AS asn_type_name_display,
                        t.actual_receiver_code,
                        t.actual_receiver_name,
                        t.ship_to_location_address,
                        t.logistics_company,
                        t.dispatching_staff,
                        t.contact_information,
                        t.logistics_cost,
                        t.express_number,
                        t.session_id
                    FROM
                        inv_asn_headers_temp t
                    WHERE
                        t.session_id = ${/session/@session_id}
                    ) v #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:query-sql><![CDATA[
                BEGIN
          			inv_asn_basic_pkg.modify_inv_asn_headers_temp(p_asn_header_id		=> ${@asn_header_id},
							                                      p_expected_date 		=> to_date(${@expected_date},'yyyy-mm-dd'),
							                                      p_ship_date 			=> to_date(${@ship_date},'yyyy-mm-dd'),
							                                      p_comments 			=> ${@header_desc},
							                                      p_logistics_company 	=> ${@logistics_company},
							                                      p_dispatching_staff 	=> ${@dispatching_staff},
							                                      p_contact_information	=> ${@contact_information},
							                                      p_logistics_cost		=> ${@logistics_cost},
							                                      p_express_number		=> ${@express_number},
							                                      p_session_id 			=> ${/session/@session_id},
							                                      p_user_id 			=> ${/session/@user_id});
               END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:query-sql><![CDATA[
                BEGIN
                	inv_asn_basic_pkg.del_asn_temp_by_id(p_asn_header_id 	=> ${@asn_header_id},
					                                 	 p_user_id			=> ${/session/@user_id});
                END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:parameters>
                <bm:parameter name="last_flag" dataType="java.lang.String" input="false" output="true" outputPath="@last_flag"/>
            </bm:parameters>
            <bm:query-sql><![CDATA[
                BEGIN
                	inv_asn_basic_pkg.get_asn_temp_flag(p_user_id		=> ${/session/@user_id},
						                                p_session_id 	=> ${/session/@session_id},
						                                x_flag 			=> ${@last_flag});
                END;
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="asn_header_id" queryExpression="asn_header_id=${@asn_header_id}"/>
    </bm:query-fields>
</bm:model>
