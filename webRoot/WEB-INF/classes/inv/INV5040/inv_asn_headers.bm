<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: likun  
    $Date: 2013-1-25 下午04:16:11  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    h.asn_header_id,
                    h.asn_number,
                    h.asn_barcode,
                    h.vendor_name,
                    h.company_name,
                    h.location_name,
                    h.ship_to_organization_name,
                    TO_CHAR(h.ship_date, 'yyyy-mm-dd') AS ship_date,
                    TO_CHAR(h.expected_date, 'yyyy-mm-dd') AS expected_date,
                    h.vendor_site_name,
                    h.header_desc,
                    h.data_source
                FROM
                    inv_asn_headers h #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:parameters>
                <bm:parameter name="batch_id" dataType="java.lang.Long" output="true" outputPath="/parameter/@batch_id"/>
            </bm:parameters>
            <bm:query-sql><![CDATA[
                BEGIN
                  inv_asn_pkg.receive_inv_asn_header(p_asn_header_id => ${@asn_header_id},
				                                     p_user_id => ${/session/@user_id},
				                                     x_batch_id => ${@batch_id});
                END;
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
    			begin
    			      inv_asn_itf_pkg.inv_asn_receive(p_asn_header_id => ${@asn_header_id},
					                                        p_batch_id =>  ${/parameter/@batch_id},
					                                        p_user_id => ${/session/@user_id});
                end;
    		]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="h.asn_number=nvl(${@asn_number},h.asn_number)"/>
        <bm:data-filter expression="h.asn_barcode=nvl(${@asn_barcode},h.asn_barcode)"/>
    </bm:data-filters>
</bm:model>
