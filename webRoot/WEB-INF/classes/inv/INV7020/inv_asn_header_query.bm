<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单查询-供应方，按送货单头查询BM
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_number desc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        iah.asn_header_id,
                        iah.display_asn_number AS asn_number,
                        iah.asn_type_code,
                        (SELECT
                            atv.asn_type_name
                        FROM
                            inv_asn_types_vl atv
                        WHERE
                            atv.asn_type_code = iah.asn_type_code
                        ) AS asn_type_name,
                        iah.business_unit_id,
                        (SELECT
                            buv.business_unit_name
                        FROM
                            fnd_business_units_vl buv
                        WHERE
                            buv.business_unit_id = iah.business_unit_id
                        ) AS business_unit_name,
                        iah.owner_business_group,
                        iah.owner_company_id,
                        pvv.coop_business_group AS vendor_business_group,
                        pvv.coop_company_id AS vendor_company_id,
                        (SELECT
                            fc.company_code
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id=pvv.coop_company_id
                        ) AS vendor_company_code,
                        (SELECT
                            fc.company_full_name
                        FROM
                            fnd_companies_vl fc
                        WHERE
                            fc.company_id=pvv.coop_company_id
                        ) AS vendor_company_name,
                        iah.coop_company_id,
                        (SELECT
                            fcv.company_full_name
                        FROM
                            fnd_companies_vl fcv
                        WHERE
                            fcv.company_id = iah.coop_company_id
                        ) AS company_name,
                        iah.status,
                        (SELECT
                            cvv.code_value_name
                        FROM
                            sys_code_values_v cvv
                        WHERE
                            cvv.code       = 'INV_ASN_HEADERS_STATUS' AND
                            cvv.code_value = iah.status
                        ) AS header_status,
                        iah.ship_date,
                        TO_CHAR(iah.ship_date, 'yyyy-mm-dd') AS ship_date_fmt,
                        iah.expected_date,
                        TO_CHAR(iah.expected_date, 'yyyy-mm-dd') AS expected_date_fmt,
                        iah.creation_date,
                        TO_CHAR(iah.creation_date, 'yyyy-mm-dd') AS creation_date_fmt,
                        iah.comments,
                        iah.actual_receiver_code,
                        iah.actual_receiver_name,
                        iah.partner_code,
                        iah.partner_name,
                        iah.location_id,
                        NVL(iah.ship_to_location_address,
                        (SELECT
                            fl.address_line_1
                        FROM
                            fnd_locations fl
                        WHERE
                            fl.location_id = iah.location_id
                        )) AS location_name,
                        iah.ship_to_organization_id,
                        (SELECT
                            iov.description
                        FROM
                            inv_organizations_vl iov
                        WHERE
                            iov.inv_organization_id = iah.ship_to_organization_id
                        ) AS ship_to_organization_name,
                        iah.created_by,
                        (SELECT
                            al.process_status
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS process_status,
                        (SELECT
                            NVL(DECODE(al.process_status, 'SUCCESSED', '发送成功', 'WAITING', '发送中', 'IMPORTED', '正在发送', 'FAILED', '发送失败', ' '), ' ')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS process_status_name,
                        (SELECT
                            al.process_message
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id    = iah.asn_header_id AND
                            al.process_message IS NOT NULL AND
                            rownum              = 1
                        ) AS process_message,
                        (SELECT
                            al.cancel_process_status
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS cancel_process_status,
                        (SELECT
                            NVL(DECODE(al.cancel_process_status, 'SUCCESSED', '取消成功', 'WAITING', '等待反馈', 'IMPORTED', '正在处理', 'FAILED', '取消失败', ' '), ' ')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS cancel_process_status_name,
                        (SELECT
                            al.cancel_process_message
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id           = iah.asn_header_id AND
                            al.cancel_process_message IS NOT NULL AND
                            rownum                     = 1
                        ) AS cancel_process_message,
                        iah.service_create_flag,
                        (SELECT
                            NVL(DECODE(al.process_status, 'SUCCESSED', '导入成功', 'WAITING', '导入中', 'IMPORTED', '正在导入', 'FAILED', '导入失败', ' '), ' ')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS import_status,
                        (SELECT
                            NVL(DECODE(al.process_status, 'SUCCESSED', iah.re_number_sap, al.process_message), ' ')
                        FROM
                            inv_asn_lines al
                        WHERE
                            al.asn_header_id = iah.asn_header_id AND
                            rownum           = 1
                        ) AS import_message,
                        iah.deliver_number,
                        NULL AS useless_id_1,
                        NULL AS useless_id_2,
                        NULL AS useless_id_3,
                        NULL AS useless_id_4,
                        NULL AS useless_id_5,
                        NULL AS useless_id_6,
                        NULL AS useless_id_7,
                        NULL AS useless_id_8,
                        (SELECT
                            COUNT(1)
                        FROM
                            inv_asn_lines al,
                            pur_line_locations_all pll,
                            pur_headers_all ph
                        WHERE
                            iah.asn_header_id   = al.asn_header_id AND
                            al.line_location_id = pll.pur_line_location_id AND
                            pll.pur_header_id   = ph.pur_header_id AND
                            pll.closed_code     in ( 'OPEN','CLOSED FOR INVOICE')
                        ) open_num,
                        (SELECT COUNT(1)
          				   FROM cux_vender_bar_code cva
         				  WHERE cva.vendor_code = pvv.display_vendor_code) bar_flg,
         				(SELECT count(1) 
         				   FROM inv_asn_lines ia 
         				  WHERE ia.asn_header_id = iah.asn_header_id
         				    and ia.item_code like '308%') item_code_flg
                    FROM
                        inv_asn_headers iah,
                        inv_asn_rlt_vendor_auth rva,
                        pur_vendors_v pvv
                    WHERE
                        iah.asn_header_id       = rva.asn_header_id AND
                        rva.vendor_id           = pvv.vendor_id AND
                        rva.query_flag          = 'Y' AND
                        iah.service_create_flag = 'N' AND
                        (
                            EXISTS
                            (SELECT
                                1
                            FROM
                                fnd_config_center_bg_item_dtl ccbid
                            WHERE
                                ccbid.config_classify_code    = 'PO' AND
                                ccbid.config_item_code        = 'PO_02' AND
                                ccbid.config_item_detail_code = 'PO_02_04' AND
                                ccbid.business_group          = iah.coop_business_group AND
                                ccbid.bg_config_item_value    = 'Y'
                            )
                        )
                    ) v #AUTHORIY_FROM# #WHERE_CLAUSE# #AUTHORIY_WHERE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="asn_number" queryExpression="v.asn_number like &apos;%&apos;||trim(${@asn_number})||&apos;%&apos;"/>
        <bm:query-field name="company_id" queryExpression="v.coop_company_id = ${@company_id}"/>
        <bm:query-field name="business_unit_id" queryExpression="v.business_unit_id = ${@business_unit_id}"/>
        <!-- <bm:query-field name="status" queryExpression="v.status = ${@status}"/> -->
        <bm:query-field name="status_tree" queryExpression="(v.status in (decode(${@status},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status}),decode(${@status1},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status1}),decode(${@status2},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status2}))                                                             or v.cancel_process_status in (nvl(${@cancel_process_status_name},&apos;1&apos;),nvl(${@cancel_process_status_name1},&apos;1&apos;),nvl(${@cancel_process_status_name2},&apos;1&apos;))                                                             or v.process_status in (substr(${@send_successed},6),substr(${@send_waiting},6),substr(${@send_failed},6))                                                             or exists (select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;))"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status1" queryExpression="v.cancel_process_status = ${@cancel_process_status1}"/>
        <bm:query-field name="can_print" queryExpression="exists (select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;)"/>
        <bm:query-field name="ship_to_organization_id" queryExpression="v.ship_to_organization_id = ${@ship_to_organization_id}"/>
        <bm:query-field name="expected_date_from" queryExpression="v.expected_date &gt;=to_date(${@expected_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="expected_date_to" queryExpression="v.expected_date &lt;=to_date(${@expected_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_from" queryExpression="v.ship_date &gt;=to_date(${@ship_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_to" queryExpression="v.ship_date &lt;=to_date(${@ship_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_from" queryExpression="trunc(v.creation_date) &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="trunc(v.creation_date) &lt;= to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="exclude_all_close" queryExpression="((${@exclude_all_close} = &apos;Y&apos; and v.status != &apos;ALL_CLOSE&apos;) or (${@exclude_all_close} = &apos;N&apos; and 1=1))"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status" queryExpression=" v.cancel_process_status is null and v.process_status = &apos;SUCCESSED&apos; "/>
        <bm:query-field name="query_code" queryExpression="((${@query_code} = &apos;ALL&apos; AND 1 = 1) OR (${@query_code} = &apos;READY_TO_SEND&apos; AND v.status = &apos;NEW&apos;) OR (${@query_code} = &apos;SEND_OUT&apos; AND v.status = &apos;SEND_OUT&apos;) OR (${@query_code} = &apos;PART_RECEIVE&apos; AND v.status = &apos;PART_RECEIVE&apos;) OR (${@query_code} = &apos;ALL_RECEIVE&apos; AND v.status = &apos;RECEIVE_CLOSE&apos;) OR (${@query_code} = &apos;CAN_PRINT&apos; AND v.status = &apos;SEND_OUT&apos; AND v.process_status = &apos;SUCCESSED&apos; AND v.cancel_process_status is null) OR (${@query_code} = &apos;PART_CANCEL&apos; AND v.status = &apos;PART_CANCEL&apos;) OR (${@query_code} = &apos;ALL_CANCEL&apos; AND v.status = &apos;ALL_CLOSE&apos;) OR (${@query_code} = &apos;CANCEL_FAILED&apos; AND v.process_status = &apos;SUCCESSED&apos; AND v.cancel_process_status = &apos;FAILED&apos;) OR (${@query_code} = &apos;CANCEL_SUCCESS&apos; AND v.process_status = &apos;SUCCESSED&apos; AND v.cancel_process_status = &apos;SUCCESSED&apos;) OR (${@query_code} = &apos;CANCEL_WAITING&apos; AND v.process_status = &apos;SUCCESSED&apos; AND v.cancel_process_status = &apos;WAITING&apos;) OR (${@query_code} = &apos;SENDING&apos; AND v.status = &apos;SEND_OUT&apos; AND v.process_status = &apos;WAITING&apos;) OR (${@query_code} = &apos;SEND_FAILED&apos; AND v.status = &apos;SEND_OUT&apos; AND v.process_status = &apos;FAILED&apos;) OR (${@query_code} = &apos;SEND_SUCCESS&apos; AND v.status = &apos;SEND_OUT&apos; AND v.process_status = &apos;SUCCESSED&apos;) OR (${@query_code} = &apos;APPROVING&apos; AND v.status = &apos;APPROVING&apos;))"/>
        <bm:query-field name="asn_type_code" queryExpression="v.asn_type_code =${@asn_type_code}"/>
        <bm:query-field name="vendor_company_id" queryExpression="v.vendor_company_id =${@vendor_company_id}"/>
        <bm:query-field name="asn_header_ids" queryExpression="asn_header_id in (${:@asn_header_ids})"/>
        <bm:query-field name="include_attachment" queryExpression="((${@include_attachment} = &apos;N&apos; and 1=1) or (${@include_attachment} = &apos;Y&apos; and EXISTS (SELECT 1 FROM fnd_atm_attachment_multi aam WHERE aam.table_name = &apos;INV_ASN_HEADERS&apos; AND aam.table_pk_value = v.asn_header_id)))"/>
        <bm:query-field name="po_number" queryExpression="(EXISTS (SELECT 1                                 FROM pur_headers_all        h,                                      pur_line_locations_all ll,                                      inv_asn_lines          al                                WHERE h.pur_header_id = ll.pur_header_id                                      AND ll.pur_line_location_id = al.line_location_id                                      AND al.asn_header_id = v.asn_header_id                                      AND h.display_po_number like ${@po_number}))"/>
        <bm:query-field name="pur_comments" queryExpression="(EXISTS (SELECT 1                                 FROM pur_headers_all        h,                                      pur_line_locations_all ll,                                      inv_asn_lines          al                                WHERE h.pur_header_id = ll.pur_header_id                                      AND ll.pur_line_location_id = al.line_location_id                                      AND al.asn_header_id = v.asn_header_id                                      AND h.comments like ${@pur_comments}))"/>
        <bm:query-field name="deliver_number" queryExpression="v.deliver_number like &apos;%&apos;||trim(${@deliver_number})||&apos;%&apos;"/>
        <bm:query-field name="autoid" queryExpression="exists(select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.autoid = trim(${@autoid}))"/>
        <bm:query-field name="category_name" queryExpression="exists (select 1 from inv_asn_lines al,mtl_category_classify_items mi,mtl_categories_user_defined_vl mv where al.asn_header_id = v.asn_header_id and al.item_id = mi.item_id and mv.category_udf_id = mi.category_udf_id and mv.category_name like &apos;%&apos; || ${@category_name} || &apos;%&apos; )"/>
        <bm:query-field name="is_send_flag" queryExpression="((${@is_send_flag} = &apos;Y&apos; and v.open_num &gt; 0 ) or (${@is_send_flag} = &apos;N&apos;))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="v.vendor_business_group = ${/session/@business_group}"/>
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="v" source_name="vendor_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="created_by" type="CREATER"/>
        <authority-segment source_alias="v" source_name="useless_id_1" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="coop_company_id" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id_3" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_8" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_9" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_10" type="SALES_PRODUCTION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
      		Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
          	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>
