<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:e="aurora.service.exception" xmlns:ns2="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="sob" baseTable="gld_set_of_books" defaultOrderBy="set_of_books_code">
    <bm:fields>
        <bm:field name="set_of_books_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="set_of_books_name_id" databaseType="NUMBER" datatype="java.lang.Long" multiLanguage="true" multiLanguageDescField="set_of_books_name"/>
        <bm:field name="set_of_books_name" databaseType="VARCHAR" datatype="java.lang.String" forInsert="false" forUpdate="false" prompt="GLD_SET_OF_BOOKS.SET_OF_BOOKS_NAME"/>
        <bm:field name="set_of_books_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="GLD_SET_OF_BOOKS.SET_OF_BOOKS_CODE"/>
        <bm:field name="period_set_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="GLD_PERIOD_SET.PERIOD_SET_CODE"/>
        <bm:field name="period_set_name" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select description_text from fnd_descriptions fn,gld_period_sets gps where fn.description_id=gps.period_set_name_id and gps.period_set_code = sob.period_set_code and language=${/session/@lang})" forInsert="false" forUpdate="false"/>
        <bm:field name="functional_currency_code" databaseType="VARCHAR2" datatype="java.lang.String"/>
        <bm:field name="currency_name" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select description_text from fnd_descriptions fn,gld_currency gc where fn.description_id=gc.currency_name_id and gc.currency_code = sob.functional_currency_code and language=${/session/@lang} and gc.enabled_flag = &apos;Y&apos;)" forInsert="false" forUpdate="false" prompt="GLD_SET_OF_BOOKS.CURRENCY_NAME"/>
        <bm:field name="account_set_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="account_set_name" databaseType="VARCHAR2" datatype="java.lang.String" expression="(select description_text from fnd_descriptions fn,gld_account_sets gas where fn.description_id=gas.account_set_name_id and gas.account_set_id = sob.account_set_id and language=${/session/@lang})" forInsert="false" forUpdate="false" prompt="GLD_SET_OF_BOOKS.ACCOUNT_SET_NAME"/>
        <bm:field name="source_erp_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="source_erp_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="GLD_SET_OF_BOOKS.SOURCE_ERP_CODE"/>
        <bm:field name="source_erp_name" databaseType="VARCHAR2" datatype="java.lang.String" prompt="GLD_SET_OF_BOOKS.SOURCE_ERP_NAME"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" prompt="HAP_ENABLED_FLAG"/>
        <bm:field name="set_of_books_name_display" databaseType="VARCHAR2" datatype="java.lang.String" expression="(sob.set_of_books_code || &apos;-&apos; || (select fd.description_text from fnd_descriptions fd where sob.set_of_books_name_id=fd.description_id and fd.language=${/session/@lang}))" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:primary-key>
        <bm:pk-field name="set_of_books_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field name="query_hook" queryExpression="(set_of_books_code like &apos;%&apos;||${@query_hook}||&apos;%&apos; or (exists (select 1 from fnd_descriptions fd where sob.set_of_books_name_id=fd.description_id and fd.description_text like &apos;%&apos;||${@query_hook}||&apos;%&apos; and fd.language = ${/session/@lang})))"/>
        <bm:query-field field="set_of_books_id" queryOperator="="/>
        <bm:query-field field="set_of_books_code" queryOperator="like"/>
        <bm:query-field field="set_of_books_name" queryExpression="exists (select 1 from fnd_descriptions fd where sob.set_of_books_name_id=fd.description_id and fd.description_text like ${@set_of_books_name} and fd.language = ${/session/@lang})"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="client" enforceOperations="query" expression="client = ${/session/@client}"/>
    </bm:data-filters>
    <bm:features>
        <ns2:sequence-pk/>
        <f:standard-who/>
        <f:multi-language-storage/>
    </bm:features>
    <bm:ref-fields/>
    <e:exception-descriptor-config>
        <e:exception-descriptor exception="java.sql.SQLException" handleClass="aurora.database.SQLExceptionDescriptor">
            <e:error-message code="1" message="GLD_SET_OF_BOOKS.SET_OF_BOOKS_CODE_DISTINCT"/>
        </e:exception-descriptor>
    </e:exception-descriptor-config>
    <bm:operations>
        <bm:operation name="insert">
            <bm:query-sql><![CDATA[
            BEGIN
  gld_set_of_books_pkg.create_gld_set_of_books(p_set_of_books_id          => ${@set_of_books_id},
                                               p_set_of_books_code        => ${@set_of_books_code},
                                               p_set_of_books_name        => ${@set_of_books_name},
                                               p_period_set_code          => ${@period_set_code},
                                               p_functional_currency_code => ${@functional_currency_code},
                                               p_account_set_id           => ${@account_set_id},
                                               p_enabled_flag             => ${@enabled_flag},
                                               p_user_id                  => ${/session/@user_id},
                                               p_function_code            => ${@function_code});
END;
]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:query-sql><![CDATA[
  BEGIN
  gld_set_of_books_pkg.modify_gld_set_of_books(p_set_of_books_id          => ${@set_of_books_id},
                                               p_set_of_books_name        => ${@set_of_books_name},
                                               p_enabled_flag             => ${@enabled_flag},
                                               p_user_id                  => ${/session/@user_id},
                                               p_function_code            => ${@function_code});
END;
]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
