<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: weiqinglong  
    $Date: 2017-1-12 下午6:04:40   
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
				SELECT bh.refund_header_id,
				       bh.refund_number,
				       bh.business_group,
				       (select fg.business_group_name
				          from fnd_business_groups_vl fg
				         where fg.business_group_code = bh.business_group) business_group_name,
				       bh.status,
				       (SELECT v.code_value_name
				          FROM sys_code_values_v v
				         WHERE v.code = 'PAY_REFUND_STATUS'
				               AND v.code_value = bh.status) status_desc,
				       bh.applicant,
				       (SELECT su.description FROM sys_user su WHERE su.user_id = bh.applicant) applicant_desc,
				       bh.application_time,
				       to_char(bh.application_time,
				               'yyyy-mm-dd') application_time_desc,
				       bh.refund_content,
				       bh.refund_amount,
				       bh.refund_note,
				       bh.bank_account_name,
				       bh.bank_name,
				       bh.bank_account_number,
				       bh.refund_time,
				       to_char(bh.refund_time,
				               'yyyy-mm-dd') refund_time_desc,
				       bh.handle_bank,
				       bh.bank_trading,
				       bh.approved_by,
				       (SELECT su.description FROM sys_user su WHERE su.user_id = bh.approved_by) approved_by_desc,
				       bh.approve_note,
				       bh.approve_date,
				       bh.creation_date,
				       to_char(bh.approve_date,
				               'yyyy-mm-dd hh24:mi:ss') approve_date_desc,
				       bh.created_by,
				       bh.last_update_date,
				       bh.last_updated_by
				  FROM pay_payment_refund_hds bh
				 #WHERE_CLAUSE#
				 order by bh.refund_header_id desc
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
                begin
					pay_payment_pkg.approve_payment_refund(p_refund_header_id => ${@refund_header_id},
					                                       p_approve_note     => ${@approve_note},
					                                       p_user_id          => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                begin
					pay_payment_pkg.save_payment_refund(p_refund_header_id => ${@refund_header_id},
					                                    p_refund_time      => to_date(${@refund_time_desc}, 'yyyy-mm-dd'),
					                                    p_handle_bank      => ${@handle_bank},
					                                    p_bank_trading     => ${@bank_trading},
					                                    p_user_id          => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                begin
					pay_payment_pkg.reject_payment_refund(p_refund_header_id => ${@refund_header_id},
					                                      p_approve_note     => ${@approve_note},
					                                      p_user_id          => ${/session/@user_id});
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="status" queryExpression="bh.status = ${@status}"/>
        <bm:query-field name="status1" queryExpression="(bh.status in(&apos;APPROVED&apos;, &apos;REJECTED&apos;) and ${@status1} = &apos;HANDLED&apos;)"/>
        <bm:query-field name="application_time_from" queryExpression="trunc(bh.application_time) &gt;= to_date(${@application_time_from}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="application_time_to" queryExpression="trunc(bh.application_time) &lt;= to_date(${@application_time_to}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="approve_date_from" queryExpression="trunc(bh.approve_date) &gt;= to_date(${@approve_date_from}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="approve_date_to" queryExpression="trunc(bh.approve_date) &lt;= to_date(${@approve_date_to}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="refund_time_from" queryExpression="trunc(bh.refund_time) &gt;= to_date(${@refund_time_from}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="refund_time_to" queryExpression="trunc(bh.refund_time) &lt;= to_date(${@refund_time_to}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="business_group_name" queryExpression="exists (select 1 from fnd_business_groups_vl fg where fg.business_group_code = bh.business_group and upper(fg.business_group_name) like &apos;%&apos;||upper(${@business_group_name})||&apos;%&apos;)"/>
    </bm:query-fields>
</bm:model>
