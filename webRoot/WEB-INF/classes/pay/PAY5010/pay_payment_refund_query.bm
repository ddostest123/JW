<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: weiqinglong  
    $Date: 2017-1-12 下午6:04:40   
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
				select d.detail_id,
		               d.payment_id,
		               d.package_id,
		               d.package_name,
		               d.package_price,
		               d.valid_date,
		               d.valid_from,
		               to_char(d.valid_from, 'yyyy-mm-dd') valid_from_desc,
		               d.valid_until,
		               to_char(d.valid_until, 'yyyy-mm-dd') valid_until_desc,
		               d.order_number,
		               d.payment_number,
		               d.payment_user_id,
		               (select su.description
		                  from sys_user su
		                 where su.user_id = d.payment_user_id) payment_user_name,
		               d.payment_date,
		               to_char(d.payment_date, 'yyyy-mm-dd hh24:mi:ss') payment_date_desc,
		               d.payment_type,
		               decode(d.payment_type,
		                      'BC_EXPRESS',
		                      '银联',
		                      'BC_NATIVE',
		                      '微信扫码',
		                      'BC_ALI_QRCODE',
		                      '支付宝扫码',
		                      '') payment_type_desc,
		               d.payment_amount,
		               d.invoice_flag,
		               d.bounce_flag,
		               d.refund_flag,
		               d.creation_date,
		               d.created_by,
		               d.last_update_date,
		               d.last_updated_by
				  from pay_payment_info_details d
				 #WHERE_CLAUSE#
				   and d.refund_flag = 'N'
				   and trunc(d.valid_from) > trunc(sysdate)
				   and d.payment_amount > 0
				   and ((d.payment_user_id = ${/session/@user_id} and d.order_number is not null) or
				       d.order_number is null)
				   and exists (select 1
				          from pay_payment_information p
				         where p.payment_id = d.payment_id
				           and p.business_group = ${/session/@business_group})
				 order by d.detail_id desc
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter expression="d.invoice_flag = &apos;N&apos;"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="payment_date_from" queryExpression="trunc(d.payment_date) &gt;= to_date(${@payment_date_from}, &apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="payment_date_to" queryExpression="trunc(d.payment_date) &lt;= to_date(${@payment_date_to}, &apos;yyyy-mm-dd&apos;)"/>
    </bm:query-fields>
</bm:model>
